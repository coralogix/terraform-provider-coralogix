// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: com/coralogixapis/alerts/v3/alert.proto

package __

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Alert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties *AlertProperties `protobuf:"bytes,1,opt,name=properties,proto3" json:"properties,omitempty"`
	//This is the unique Identifier
	Id          *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	CreatedTime *timestamppb.Timestamp  `protobuf:"bytes,3,opt,name=created_time,json=createdTime,proto3,oneof" json:"created_time,omitempty"`
	UpdatedTime *timestamppb.Timestamp  `protobuf:"bytes,4,opt,name=updated_time,json=updatedTime,proto3,oneof" json:"updated_time,omitempty"`
}

func (x *Alert) Reset() {
	*x = Alert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_alerts_v3_alert_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_alert_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_alert_proto_rawDescGZIP(), []int{0}
}

func (x *Alert) GetProperties() *AlertProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Alert) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Alert) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *Alert) GetUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedTime
	}
	return nil
}

type AlertProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Enabled       *wrapperspb.BoolValue   `protobuf:"bytes,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	AlertPriority AlertPriority           `protobuf:"varint,4,opt,name=alert_priority,json=alertPriority,proto3,enum=com.coralogixapis.alerts.v3.AlertPriority" json:"alert_priority,omitempty"`
	// Types that are assignable to AlertSchedule:
	//	*AlertProperties_ActiveOn
	AlertSchedule isAlertProperties_AlertSchedule `protobuf_oneof:"alert_schedule"`
	AlertType     AlertType                       `protobuf:"varint,6,opt,name=alert_type,json=alertType,proto3,enum=com.coralogixapis.alerts.v3.AlertType" json:"alert_type,omitempty"`
	// Types that are assignable to AlertTypeDefinition:
	//	*AlertProperties_LogsImmediate
	//	*AlertProperties_LogsMoreThan
	//	*AlertProperties_LogsLessThan
	//	*AlertProperties_LogsMoreThanUsual
	//	*AlertProperties_LogsRatioMoreThan
	//	*AlertProperties_LogsRatioLessThan
	//	*AlertProperties_LogsNewValue
	//	*AlertProperties_LogsUniqueCount
	//	*AlertProperties_LogsTimeRelativeMoreThan
	//	*AlertProperties_LogsTimeRelativeLessThan
	//	*AlertProperties_MetricMoreThan
	//	*AlertProperties_MetricLessThan
	//	*AlertProperties_MetricMoreThanUsual
	//	*AlertProperties_TracingImmediate
	//	*AlertProperties_TracingMoreThan
	//	*AlertProperties_Flow
	//	*AlertProperties_MetricLessThanUsual
	AlertTypeDefinition isAlertProperties_AlertTypeDefinition `protobuf_oneof:"alert_type_definition"`
	//When Promql with group by this field needs to be empty or equal to the by clause, otherwise we fail the validation
	AlertGroupBys     []*wrapperspb.StringValue `protobuf:"bytes,7,rep,name=alert_group_bys,json=alertGroupBys,proto3" json:"alert_group_bys,omitempty"`
	IncidentsSettings *AlertIncidentSettings    `protobuf:"bytes,8,opt,name=incidents_settings,json=incidentsSettings,proto3" json:"incidents_settings,omitempty"`
	NotificationGroup *AlertNotificationGroup   `protobuf:"bytes,9,opt,name=notification_group,json=notificationGroup,proto3" json:"notification_group,omitempty"`
	Labels            map[string]string         `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AlertProperties) Reset() {
	*x = AlertProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_alerts_v3_alert_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertProperties) ProtoMessage() {}

func (x *AlertProperties) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_alerts_v3_alert_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertProperties.ProtoReflect.Descriptor instead.
func (*AlertProperties) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_alerts_v3_alert_proto_rawDescGZIP(), []int{1}
}

func (x *AlertProperties) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *AlertProperties) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *AlertProperties) GetEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.Enabled
	}
	return nil
}

func (x *AlertProperties) GetAlertPriority() AlertPriority {
	if x != nil {
		return x.AlertPriority
	}
	return AlertPriority_ALERT_PRIORITY_P5_OR_UNSPECIFIED
}

func (m *AlertProperties) GetAlertSchedule() isAlertProperties_AlertSchedule {
	if m != nil {
		return m.AlertSchedule
	}
	return nil
}

func (x *AlertProperties) GetActiveOn() *ActivitySchedule {
	if x, ok := x.GetAlertSchedule().(*AlertProperties_ActiveOn); ok {
		return x.ActiveOn
	}
	return nil
}

func (x *AlertProperties) GetAlertType() AlertType {
	if x != nil {
		return x.AlertType
	}
	return AlertType_ALERT_TYPE_LOGS_IMMEDIATE_OR_UNSPECIFIED
}

func (m *AlertProperties) GetAlertTypeDefinition() isAlertProperties_AlertTypeDefinition {
	if m != nil {
		return m.AlertTypeDefinition
	}
	return nil
}

func (x *AlertProperties) GetLogsImmediate() *LogsImmediateAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_LogsImmediate); ok {
		return x.LogsImmediate
	}
	return nil
}

func (x *AlertProperties) GetLogsMoreThan() *LogsMoreThanAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_LogsMoreThan); ok {
		return x.LogsMoreThan
	}
	return nil
}

func (x *AlertProperties) GetLogsLessThan() *LogsLessThanAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_LogsLessThan); ok {
		return x.LogsLessThan
	}
	return nil
}

func (x *AlertProperties) GetLogsMoreThanUsual() *LogsMoreThanUsualAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_LogsMoreThanUsual); ok {
		return x.LogsMoreThanUsual
	}
	return nil
}

func (x *AlertProperties) GetLogsRatioMoreThan() *LogsRatioMoreThanAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_LogsRatioMoreThan); ok {
		return x.LogsRatioMoreThan
	}
	return nil
}

func (x *AlertProperties) GetLogsRatioLessThan() *LogsRatioLessThanAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_LogsRatioLessThan); ok {
		return x.LogsRatioLessThan
	}
	return nil
}

func (x *AlertProperties) GetLogsNewValue() *LogsNewValueAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_LogsNewValue); ok {
		return x.LogsNewValue
	}
	return nil
}

func (x *AlertProperties) GetLogsUniqueCount() *LogsUniqueCountAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_LogsUniqueCount); ok {
		return x.LogsUniqueCount
	}
	return nil
}

func (x *AlertProperties) GetLogsTimeRelativeMoreThan() *LogsTimeRelativeMoreThanAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_LogsTimeRelativeMoreThan); ok {
		return x.LogsTimeRelativeMoreThan
	}
	return nil
}

func (x *AlertProperties) GetLogsTimeRelativeLessThan() *LogsTimeRelativeLessThanAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_LogsTimeRelativeLessThan); ok {
		return x.LogsTimeRelativeLessThan
	}
	return nil
}

func (x *AlertProperties) GetMetricMoreThan() *MetricMoreThanAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_MetricMoreThan); ok {
		return x.MetricMoreThan
	}
	return nil
}

func (x *AlertProperties) GetMetricLessThan() *MetricLessThanAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_MetricLessThan); ok {
		return x.MetricLessThan
	}
	return nil
}

func (x *AlertProperties) GetMetricMoreThanUsual() *MetricMoreThanUsualAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_MetricMoreThanUsual); ok {
		return x.MetricMoreThanUsual
	}
	return nil
}

func (x *AlertProperties) GetTracingImmediate() *TracingImmediateAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_TracingImmediate); ok {
		return x.TracingImmediate
	}
	return nil
}

func (x *AlertProperties) GetTracingMoreThan() *TracingMoreThanAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_TracingMoreThan); ok {
		return x.TracingMoreThan
	}
	return nil
}

func (x *AlertProperties) GetFlow() *FlowAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_Flow); ok {
		return x.Flow
	}
	return nil
}

func (x *AlertProperties) GetMetricLessThanUsual() *MetricLessThanUsualAlertTypeDefinition {
	if x, ok := x.GetAlertTypeDefinition().(*AlertProperties_MetricLessThanUsual); ok {
		return x.MetricLessThanUsual
	}
	return nil
}

func (x *AlertProperties) GetAlertGroupBys() []*wrapperspb.StringValue {
	if x != nil {
		return x.AlertGroupBys
	}
	return nil
}

func (x *AlertProperties) GetIncidentsSettings() *AlertIncidentSettings {
	if x != nil {
		return x.IncidentsSettings
	}
	return nil
}

func (x *AlertProperties) GetNotificationGroup() *AlertNotificationGroup {
	if x != nil {
		return x.NotificationGroup
	}
	return nil
}

func (x *AlertProperties) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type isAlertProperties_AlertSchedule interface {
	isAlertProperties_AlertSchedule()
}

type AlertProperties_ActiveOn struct {
	ActiveOn *ActivitySchedule `protobuf:"bytes,5,opt,name=active_on,json=activeOn,proto3,oneof"`
}

func (*AlertProperties_ActiveOn) isAlertProperties_AlertSchedule() {}

type isAlertProperties_AlertTypeDefinition interface {
	isAlertProperties_AlertTypeDefinition()
}

type AlertProperties_LogsImmediate struct {
	LogsImmediate *LogsImmediateAlertTypeDefinition `protobuf:"bytes,100,opt,name=logs_immediate,json=logsImmediate,proto3,oneof"`
}

type AlertProperties_LogsMoreThan struct {
	LogsMoreThan *LogsMoreThanAlertTypeDefinition `protobuf:"bytes,101,opt,name=logs_more_than,json=logsMoreThan,proto3,oneof"`
}

type AlertProperties_LogsLessThan struct {
	LogsLessThan *LogsLessThanAlertTypeDefinition `protobuf:"bytes,102,opt,name=logs_less_than,json=logsLessThan,proto3,oneof"`
}

type AlertProperties_LogsMoreThanUsual struct {
	LogsMoreThanUsual *LogsMoreThanUsualAlertTypeDefinition `protobuf:"bytes,103,opt,name=logs_more_than_usual,json=logsMoreThanUsual,proto3,oneof"`
}

type AlertProperties_LogsRatioMoreThan struct {
	LogsRatioMoreThan *LogsRatioMoreThanAlertTypeDefinition `protobuf:"bytes,104,opt,name=logs_ratio_more_than,json=logsRatioMoreThan,proto3,oneof"`
}

type AlertProperties_LogsRatioLessThan struct {
	LogsRatioLessThan *LogsRatioLessThanAlertTypeDefinition `protobuf:"bytes,105,opt,name=logs_ratio_less_than,json=logsRatioLessThan,proto3,oneof"`
}

type AlertProperties_LogsNewValue struct {
	LogsNewValue *LogsNewValueAlertTypeDefinition `protobuf:"bytes,106,opt,name=logs_new_value,json=logsNewValue,proto3,oneof"`
}

type AlertProperties_LogsUniqueCount struct {
	LogsUniqueCount *LogsUniqueCountAlertTypeDefinition `protobuf:"bytes,107,opt,name=logs_unique_count,json=logsUniqueCount,proto3,oneof"`
}

type AlertProperties_LogsTimeRelativeMoreThan struct {
	LogsTimeRelativeMoreThan *LogsTimeRelativeMoreThanAlertTypeDefinition `protobuf:"bytes,108,opt,name=logs_time_relative_more_than,json=logsTimeRelativeMoreThan,proto3,oneof"`
}

type AlertProperties_LogsTimeRelativeLessThan struct {
	LogsTimeRelativeLessThan *LogsTimeRelativeLessThanAlertTypeDefinition `protobuf:"bytes,109,opt,name=logs_time_relative_less_than,json=logsTimeRelativeLessThan,proto3,oneof"`
}

type AlertProperties_MetricMoreThan struct {
	MetricMoreThan *MetricMoreThanAlertTypeDefinition `protobuf:"bytes,112,opt,name=metric_more_than,json=metricMoreThan,proto3,oneof"`
}

type AlertProperties_MetricLessThan struct {
	MetricLessThan *MetricLessThanAlertTypeDefinition `protobuf:"bytes,113,opt,name=metric_less_than,json=metricLessThan,proto3,oneof"`
}

type AlertProperties_MetricMoreThanUsual struct {
	MetricMoreThanUsual *MetricMoreThanUsualAlertTypeDefinition `protobuf:"bytes,114,opt,name=metric_more_than_usual,json=metricMoreThanUsual,proto3,oneof"`
}

type AlertProperties_TracingImmediate struct {
	TracingImmediate *TracingImmediateAlertTypeDefinition `protobuf:"bytes,115,opt,name=tracing_immediate,json=tracingImmediate,proto3,oneof"`
}

type AlertProperties_TracingMoreThan struct {
	TracingMoreThan *TracingMoreThanAlertTypeDefinition `protobuf:"bytes,116,opt,name=tracing_more_than,json=tracingMoreThan,proto3,oneof"`
}

type AlertProperties_Flow struct {
	Flow *FlowAlertTypeDefinition `protobuf:"bytes,117,opt,name=flow,proto3,oneof"`
}

type AlertProperties_MetricLessThanUsual struct {
	MetricLessThanUsual *MetricLessThanUsualAlertTypeDefinition `protobuf:"bytes,118,opt,name=metric_less_than_usual,json=metricLessThanUsual,proto3,oneof"` //    LogsLessThanAlertTypeDefinitionUsual logs_less_than_usual = 119;
}

func (*AlertProperties_LogsImmediate) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_LogsMoreThan) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_LogsLessThan) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_LogsMoreThanUsual) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_LogsRatioMoreThan) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_LogsRatioLessThan) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_LogsNewValue) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_LogsUniqueCount) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_LogsTimeRelativeMoreThan) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_LogsTimeRelativeLessThan) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_MetricMoreThan) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_MetricLessThan) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_MetricMoreThanUsual) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_TracingImmediate) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_TracingMoreThan) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_Flow) isAlertProperties_AlertTypeDefinition() {}

func (*AlertProperties_MetricLessThanUsual) isAlertProperties_AlertTypeDefinition() {}

var File_com_coralogixapis_alerts_v3_alert_proto protoreflect.FileDescriptor

var file_com_coralogixapis_alerts_v3_alert_proto_rawDesc = []byte{
	0x0a, 0x27, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x65, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x65, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x65,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x5f,
	0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x65, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f,
	0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61, 0x6e,
	0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x6b, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x6d, 0x6f,
	0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x75, 0x73, 0x75, 0x61, 0x6c, 0x5f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x68, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x5f, 0x6d, 0x6f,
	0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x68, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x2f, 0x6c, 0x6f, 0x67,
	0x73, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61,
	0x6e, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x66, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x5f,
	0x6e, 0x65, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x67, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f,
	0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x78,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2f,
	0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x78, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6c, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x65, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x65, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f,
	0x74, 0x68, 0x61, 0x6e, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x6b, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x75, 0x73, 0x75, 0x61,
	0x6c, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x6b, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6c,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x75, 0x73, 0x75, 0x61, 0x6c, 0x5f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x67, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x72,
	0x61, 0x63, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6d,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x67, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x2f, 0x74,
	0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e,
	0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x57, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f,
	0x76, 0x33, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x33,
	0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x02, 0x0a, 0x05, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12,
	0x4c, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76,
	0x33, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x42, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x01, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xe7, 0x15, 0x0a, 0x0f, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x51, 0x0a, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4f, 0x6e, 0x12, 0x45, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x66, 0x0a, 0x0e, 0x6c, 0x6f, 0x67,
	0x73, 0x5f, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e,
	0x4c, 0x6f, 0x67, 0x73, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x01, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x73, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74,
	0x65, 0x12, 0x64, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74,
	0x68, 0x61, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x54, 0x68, 0x61, 0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x73, 0x4d,
	0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x12, 0x64, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x73, 0x5f,
	0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x6f,
	0x67, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52,
	0x0c, 0x6c, 0x6f, 0x67, 0x73, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x12, 0x74, 0x0a,
	0x14, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f,
	0x75, 0x73, 0x75, 0x61, 0x6c, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x4d, 0x6f,
	0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x55, 0x73, 0x75, 0x61, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01,
	0x52, 0x11, 0x6c, 0x6f, 0x67, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x55, 0x73,
	0x75, 0x61, 0x6c, 0x12, 0x74, 0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x68, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61,
	0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x11, 0x6c, 0x6f, 0x67, 0x73, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x12, 0x74, 0x0a, 0x14, 0x6c, 0x6f, 0x67,
	0x73, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61,
	0x6e, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x4c,
	0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x11, 0x6c, 0x6f,
	0x67, 0x73, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x12,
	0x64, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x4e, 0x65, 0x77, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x73, 0x4e, 0x65, 0x77,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x6d, 0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4c,
	0x6f, 0x67, 0x73, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x01, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x73, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x8a, 0x01, 0x0a, 0x1c, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x72, 0x65,
	0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68,
	0x61, 0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x18, 0x6c, 0x6f, 0x67, 0x73, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61,
	0x6e, 0x12, 0x8a, 0x01, 0x0a, 0x1c, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68,
	0x61, 0x6e, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x01, 0x52, 0x18, 0x6c, 0x6f, 0x67, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x12, 0x6a,
	0x0a, 0x10, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68,
	0x61, 0x6e, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x6f, 0x72,
	0x65, 0x54, 0x68, 0x61, 0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x12, 0x6a, 0x0a, 0x10, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x71,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e,
	0x76, 0x33, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61,
	0x6e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x65,
	0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x12, 0x7a, 0x0a, 0x16, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x75, 0x73, 0x75, 0x61, 0x6c,
	0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x6f, 0x72, 0x65, 0x54,
	0x68, 0x61, 0x6e, 0x55, 0x73, 0x75, 0x61, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x13, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x55, 0x73, 0x75,
	0x61, 0x6c, 0x12, 0x6f, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6d,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x01, 0x52, 0x10, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x65, 0x12, 0x6d, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x6f, 0x72, 0x65, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x72, 0x61,
	0x63, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x61, 0x6e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x01, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x72, 0x65, 0x54, 0x68,
	0x61, 0x6e, 0x12, 0x4a, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x46,
	0x6c, 0x6f, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x7a,
	0x0a, 0x16, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68,
	0x61, 0x6e, 0x5f, 0x75, 0x73, 0x75, 0x61, 0x6c, 0x18, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x4c, 0x65, 0x73, 0x73, 0x54, 0x68, 0x61, 0x6e, 0x55, 0x73, 0x75, 0x61, 0x6c,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x13, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x65, 0x73,
	0x73, 0x54, 0x68, 0x61, 0x6e, 0x55, 0x73, 0x75, 0x61, 0x6c, 0x12, 0x44, 0x0a, 0x0f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0d, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x73,
	0x12, 0x61, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x49, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x11, 0x69, 0x6e, 0x63, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x62, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x50, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x33, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x17, 0x0a, 0x15, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogixapis_alerts_v3_alert_proto_rawDescOnce sync.Once
	file_com_coralogixapis_alerts_v3_alert_proto_rawDescData = file_com_coralogixapis_alerts_v3_alert_proto_rawDesc
)

func file_com_coralogixapis_alerts_v3_alert_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_alerts_v3_alert_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_alerts_v3_alert_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogixapis_alerts_v3_alert_proto_rawDescData)
	})
	return file_com_coralogixapis_alerts_v3_alert_proto_rawDescData
}

var file_com_coralogixapis_alerts_v3_alert_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_com_coralogixapis_alerts_v3_alert_proto_goTypes = []interface{}{
	(*Alert)(nil),                                       // 0: com.coralogixapis.alerts.v3.Alert
	(*AlertProperties)(nil),                             // 1: com.coralogixapis.alerts.v3.AlertProperties
	nil,                                                 // 2: com.coralogixapis.alerts.v3.AlertProperties.LabelsEntry
	(*wrapperspb.StringValue)(nil),                      // 3: google.protobuf.StringValue
	(*timestamppb.Timestamp)(nil),                       // 4: google.protobuf.Timestamp
	(*wrapperspb.BoolValue)(nil),                        // 5: google.protobuf.BoolValue
	(AlertPriority)(0),                                  // 6: com.coralogixapis.alerts.v3.AlertPriority
	(*ActivitySchedule)(nil),                            // 7: com.coralogixapis.alerts.v3.ActivitySchedule
	(AlertType)(0),                                      // 8: com.coralogixapis.alerts.v3.AlertType
	(*LogsImmediateAlertTypeDefinition)(nil),            // 9: com.coralogixapis.alerts.v3.LogsImmediateAlertTypeDefinition
	(*LogsMoreThanAlertTypeDefinition)(nil),             // 10: com.coralogixapis.alerts.v3.LogsMoreThanAlertTypeDefinition
	(*LogsLessThanAlertTypeDefinition)(nil),             // 11: com.coralogixapis.alerts.v3.LogsLessThanAlertTypeDefinition
	(*LogsMoreThanUsualAlertTypeDefinition)(nil),        // 12: com.coralogixapis.alerts.v3.LogsMoreThanUsualAlertTypeDefinition
	(*LogsRatioMoreThanAlertTypeDefinition)(nil),        // 13: com.coralogixapis.alerts.v3.LogsRatioMoreThanAlertTypeDefinition
	(*LogsRatioLessThanAlertTypeDefinition)(nil),        // 14: com.coralogixapis.alerts.v3.LogsRatioLessThanAlertTypeDefinition
	(*LogsNewValueAlertTypeDefinition)(nil),             // 15: com.coralogixapis.alerts.v3.LogsNewValueAlertTypeDefinition
	(*LogsUniqueCountAlertTypeDefinition)(nil),          // 16: com.coralogixapis.alerts.v3.LogsUniqueCountAlertTypeDefinition
	(*LogsTimeRelativeMoreThanAlertTypeDefinition)(nil), // 17: com.coralogixapis.alerts.v3.LogsTimeRelativeMoreThanAlertTypeDefinition
	(*LogsTimeRelativeLessThanAlertTypeDefinition)(nil), // 18: com.coralogixapis.alerts.v3.LogsTimeRelativeLessThanAlertTypeDefinition
	(*MetricMoreThanAlertTypeDefinition)(nil),           // 19: com.coralogixapis.alerts.v3.MetricMoreThanAlertTypeDefinition
	(*MetricLessThanAlertTypeDefinition)(nil),           // 20: com.coralogixapis.alerts.v3.MetricLessThanAlertTypeDefinition
	(*MetricMoreThanUsualAlertTypeDefinition)(nil),      // 21: com.coralogixapis.alerts.v3.MetricMoreThanUsualAlertTypeDefinition
	(*TracingImmediateAlertTypeDefinition)(nil),         // 22: com.coralogixapis.alerts.v3.TracingImmediateAlertTypeDefinition
	(*TracingMoreThanAlertTypeDefinition)(nil),          // 23: com.coralogixapis.alerts.v3.TracingMoreThanAlertTypeDefinition
	(*FlowAlertTypeDefinition)(nil),                     // 24: com.coralogixapis.alerts.v3.FlowAlertTypeDefinition
	(*MetricLessThanUsualAlertTypeDefinition)(nil),      // 25: com.coralogixapis.alerts.v3.MetricLessThanUsualAlertTypeDefinition
	(*AlertIncidentSettings)(nil),                       // 26: com.coralogixapis.alerts.v3.AlertIncidentSettings
	(*AlertNotificationGroup)(nil),                      // 27: com.coralogixapis.alerts.v3.AlertNotificationGroup
}
var file_com_coralogixapis_alerts_v3_alert_proto_depIdxs = []int32{
	1,  // 0: com.coralogixapis.alerts.v3.Alert.properties:type_name -> com.coralogixapis.alerts.v3.AlertProperties
	3,  // 1: com.coralogixapis.alerts.v3.Alert.id:type_name -> google.protobuf.StringValue
	4,  // 2: com.coralogixapis.alerts.v3.Alert.created_time:type_name -> google.protobuf.Timestamp
	4,  // 3: com.coralogixapis.alerts.v3.Alert.updated_time:type_name -> google.protobuf.Timestamp
	3,  // 4: com.coralogixapis.alerts.v3.AlertProperties.name:type_name -> google.protobuf.StringValue
	3,  // 5: com.coralogixapis.alerts.v3.AlertProperties.description:type_name -> google.protobuf.StringValue
	5,  // 6: com.coralogixapis.alerts.v3.AlertProperties.enabled:type_name -> google.protobuf.BoolValue
	6,  // 7: com.coralogixapis.alerts.v3.AlertProperties.alert_priority:type_name -> com.coralogixapis.alerts.v3.AlertPriority
	7,  // 8: com.coralogixapis.alerts.v3.AlertProperties.active_on:type_name -> com.coralogixapis.alerts.v3.ActivitySchedule
	8,  // 9: com.coralogixapis.alerts.v3.AlertProperties.alert_type:type_name -> com.coralogixapis.alerts.v3.AlertType
	9,  // 10: com.coralogixapis.alerts.v3.AlertProperties.logs_immediate:type_name -> com.coralogixapis.alerts.v3.LogsImmediateAlertTypeDefinition
	10, // 11: com.coralogixapis.alerts.v3.AlertProperties.logs_more_than:type_name -> com.coralogixapis.alerts.v3.LogsMoreThanAlertTypeDefinition
	11, // 12: com.coralogixapis.alerts.v3.AlertProperties.logs_less_than:type_name -> com.coralogixapis.alerts.v3.LogsLessThanAlertTypeDefinition
	12, // 13: com.coralogixapis.alerts.v3.AlertProperties.logs_more_than_usual:type_name -> com.coralogixapis.alerts.v3.LogsMoreThanUsualAlertTypeDefinition
	13, // 14: com.coralogixapis.alerts.v3.AlertProperties.logs_ratio_more_than:type_name -> com.coralogixapis.alerts.v3.LogsRatioMoreThanAlertTypeDefinition
	14, // 15: com.coralogixapis.alerts.v3.AlertProperties.logs_ratio_less_than:type_name -> com.coralogixapis.alerts.v3.LogsRatioLessThanAlertTypeDefinition
	15, // 16: com.coralogixapis.alerts.v3.AlertProperties.logs_new_value:type_name -> com.coralogixapis.alerts.v3.LogsNewValueAlertTypeDefinition
	16, // 17: com.coralogixapis.alerts.v3.AlertProperties.logs_unique_count:type_name -> com.coralogixapis.alerts.v3.LogsUniqueCountAlertTypeDefinition
	17, // 18: com.coralogixapis.alerts.v3.AlertProperties.logs_time_relative_more_than:type_name -> com.coralogixapis.alerts.v3.LogsTimeRelativeMoreThanAlertTypeDefinition
	18, // 19: com.coralogixapis.alerts.v3.AlertProperties.logs_time_relative_less_than:type_name -> com.coralogixapis.alerts.v3.LogsTimeRelativeLessThanAlertTypeDefinition
	19, // 20: com.coralogixapis.alerts.v3.AlertProperties.metric_more_than:type_name -> com.coralogixapis.alerts.v3.MetricMoreThanAlertTypeDefinition
	20, // 21: com.coralogixapis.alerts.v3.AlertProperties.metric_less_than:type_name -> com.coralogixapis.alerts.v3.MetricLessThanAlertTypeDefinition
	21, // 22: com.coralogixapis.alerts.v3.AlertProperties.metric_more_than_usual:type_name -> com.coralogixapis.alerts.v3.MetricMoreThanUsualAlertTypeDefinition
	22, // 23: com.coralogixapis.alerts.v3.AlertProperties.tracing_immediate:type_name -> com.coralogixapis.alerts.v3.TracingImmediateAlertTypeDefinition
	23, // 24: com.coralogixapis.alerts.v3.AlertProperties.tracing_more_than:type_name -> com.coralogixapis.alerts.v3.TracingMoreThanAlertTypeDefinition
	24, // 25: com.coralogixapis.alerts.v3.AlertProperties.flow:type_name -> com.coralogixapis.alerts.v3.FlowAlertTypeDefinition
	25, // 26: com.coralogixapis.alerts.v3.AlertProperties.metric_less_than_usual:type_name -> com.coralogixapis.alerts.v3.MetricLessThanUsualAlertTypeDefinition
	3,  // 27: com.coralogixapis.alerts.v3.AlertProperties.alert_group_bys:type_name -> google.protobuf.StringValue
	26, // 28: com.coralogixapis.alerts.v3.AlertProperties.incidents_settings:type_name -> com.coralogixapis.alerts.v3.AlertIncidentSettings
	27, // 29: com.coralogixapis.alerts.v3.AlertProperties.notification_group:type_name -> com.coralogixapis.alerts.v3.AlertNotificationGroup
	2,  // 30: com.coralogixapis.alerts.v3.AlertProperties.labels:type_name -> com.coralogixapis.alerts.v3.AlertProperties.LabelsEntry
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_alerts_v3_alert_proto_init() }
func file_com_coralogixapis_alerts_v3_alert_proto_init() {
	if File_com_coralogixapis_alerts_v3_alert_proto != nil {
		return
	}
	file_com_coralogixapis_alerts_v3_alert_scheduling_proto_init()
	file_com_coralogixapis_alerts_v3_alert_notification_group_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_standard_logs_immediate_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_standard_logs_more_than_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_standard_logs_less_than_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_standard_logs_more_than_usual_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_ratio_logs_ratio_more_than_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_ratio_logs_ratio_less_than_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_new_value_logs_new_value_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_unique_count_unique_count_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_time_relative_logs_time_relative_more_than_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_time_relative_logs_time_relative_less_than_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_metric_metric_less_than_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_metric_metric_more_than_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_metric_metric_more_than_usual_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_metric_metric_less_than_usual_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_tracing_tracing_immediate_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_tracing_tracing_more_than_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_definition_flow_flow_alert_type_definition_proto_init()
	file_com_coralogixapis_alerts_v3_alert_type_proto_init()
	file_com_coralogixapis_alerts_v3_alert_priority_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_com_coralogixapis_alerts_v3_alert_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_alerts_v3_alert_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_com_coralogixapis_alerts_v3_alert_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_com_coralogixapis_alerts_v3_alert_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*AlertProperties_ActiveOn)(nil),
		(*AlertProperties_LogsImmediate)(nil),
		(*AlertProperties_LogsMoreThan)(nil),
		(*AlertProperties_LogsLessThan)(nil),
		(*AlertProperties_LogsMoreThanUsual)(nil),
		(*AlertProperties_LogsRatioMoreThan)(nil),
		(*AlertProperties_LogsRatioLessThan)(nil),
		(*AlertProperties_LogsNewValue)(nil),
		(*AlertProperties_LogsUniqueCount)(nil),
		(*AlertProperties_LogsTimeRelativeMoreThan)(nil),
		(*AlertProperties_LogsTimeRelativeLessThan)(nil),
		(*AlertProperties_MetricMoreThan)(nil),
		(*AlertProperties_MetricLessThan)(nil),
		(*AlertProperties_MetricMoreThanUsual)(nil),
		(*AlertProperties_TracingImmediate)(nil),
		(*AlertProperties_TracingMoreThan)(nil),
		(*AlertProperties_Flow)(nil),
		(*AlertProperties_MetricLessThanUsual)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogixapis_alerts_v3_alert_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogixapis_alerts_v3_alert_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_alerts_v3_alert_proto_depIdxs,
		MessageInfos:      file_com_coralogixapis_alerts_v3_alert_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_alerts_v3_alert_proto = out.File
	file_com_coralogixapis_alerts_v3_alert_proto_rawDesc = nil
	file_com_coralogixapis_alerts_v3_alert_proto_goTypes = nil
	file_com_coralogixapis_alerts_v3_alert_proto_depIdxs = nil
}
