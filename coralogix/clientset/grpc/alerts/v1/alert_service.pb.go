// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: com/coralogix/alerts/v1/alert_service.proto

package __

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AlertEventCountType int32

const (
	AlertEventCountType_ALERT_EVENT_COUNT_TYPE_UNSPECIFIED AlertEventCountType = 0
	AlertEventCountType_ALERT_EVENT_COUNT_TYPE_ALERT       AlertEventCountType = 1
	AlertEventCountType_ALERT_EVENT_COUNT_TYPE_ANOMALY     AlertEventCountType = 2
)

// Enum value maps for AlertEventCountType.
var (
	AlertEventCountType_name = map[int32]string{
		0: "ALERT_EVENT_COUNT_TYPE_UNSPECIFIED",
		1: "ALERT_EVENT_COUNT_TYPE_ALERT",
		2: "ALERT_EVENT_COUNT_TYPE_ANOMALY",
	}
	AlertEventCountType_value = map[string]int32{
		"ALERT_EVENT_COUNT_TYPE_UNSPECIFIED": 0,
		"ALERT_EVENT_COUNT_TYPE_ALERT":       1,
		"ALERT_EVENT_COUNT_TYPE_ANOMALY":     2,
	}
)

func (x AlertEventCountType) Enum() *AlertEventCountType {
	p := new(AlertEventCountType)
	*p = x
	return p
}

func (x AlertEventCountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertEventCountType) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_alerts_v1_alert_service_proto_enumTypes[0].Descriptor()
}

func (AlertEventCountType) Type() protoreflect.EnumType {
	return &file_com_coralogix_alerts_v1_alert_service_proto_enumTypes[0]
}

func (x AlertEventCountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertEventCountType.Descriptor instead.
func (AlertEventCountType) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{0}
}

type AuditLogDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *string `protobuf:"bytes,1,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *AuditLogDescription) Reset() {
	*x = AuditLogDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditLogDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogDescription) ProtoMessage() {}

func (x *AuditLogDescription) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogDescription.ProtoReflect.Descriptor instead.
func (*AuditLogDescription) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{0}
}

func (x *AuditLogDescription) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type GetAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAlertRequest) Reset() {
	*x = GetAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertRequest) ProtoMessage() {}

func (x *GetAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertRequest.ProtoReflect.Descriptor instead.
func (*GetAlertRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetAlertRequest) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert *Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *GetAlertResponse) Reset() {
	*x = GetAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertResponse) ProtoMessage() {}

func (x *GetAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertResponse.ProtoReflect.Descriptor instead.
func (*GetAlertResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetAlertResponse) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type GetAlertByUniqueIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAlertByUniqueIdRequest) Reset() {
	*x = GetAlertByUniqueIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertByUniqueIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertByUniqueIdRequest) ProtoMessage() {}

func (x *GetAlertByUniqueIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertByUniqueIdRequest.ProtoReflect.Descriptor instead.
func (*GetAlertByUniqueIdRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetAlertByUniqueIdRequest) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetAlertByUniqueIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert *Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *GetAlertByUniqueIdResponse) Reset() {
	*x = GetAlertByUniqueIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertByUniqueIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertByUniqueIdResponse) ProtoMessage() {}

func (x *GetAlertByUniqueIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertByUniqueIdResponse.ProtoReflect.Descriptor instead.
func (*GetAlertByUniqueIdResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetAlertByUniqueIdResponse) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type CreateAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                       *wrapperspb.StringValue   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description                *wrapperspb.StringValue   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsActive                   *wrapperspb.BoolValue     `protobuf:"bytes,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Severity                   AlertSeverity             `protobuf:"varint,5,opt,name=severity,proto3,enum=com.coralogix.alerts.v1.AlertSeverity" json:"severity,omitempty"`
	Expiration                 *Date                     `protobuf:"bytes,6,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Condition                  *AlertCondition           `protobuf:"bytes,7,opt,name=condition,proto3" json:"condition,omitempty"`
	Notifications              *AlertNotifications       `protobuf:"bytes,8,opt,name=notifications,proto3" json:"notifications,omitempty"`
	Filters                    *AlertFilters             `protobuf:"bytes,9,opt,name=filters,proto3" json:"filters,omitempty"`
	NotifyEvery                *wrapperspb.DoubleValue   `protobuf:"bytes,10,opt,name=notify_every,json=notifyEvery,proto3" json:"notify_every,omitempty"`
	ActiveWhen                 *AlertActiveWhen          `protobuf:"bytes,11,opt,name=active_when,json=activeWhen,proto3" json:"active_when,omitempty"`
	NotificationPayloadFilters []*wrapperspb.StringValue `protobuf:"bytes,12,rep,name=notification_payload_filters,json=notificationPayloadFilters,proto3" json:"notification_payload_filters,omitempty"`
	MetaLabels                 []*MetaLabel              `protobuf:"bytes,13,rep,name=meta_labels,json=metaLabels,proto3" json:"meta_labels,omitempty"`
	MetaLabelsStrings          []*wrapperspb.StringValue `protobuf:"bytes,14,rep,name=meta_labels_strings,json=metaLabelsStrings,proto3" json:"meta_labels_strings,omitempty"`
	TracingAlert               *TracingAlert             `protobuf:"bytes,15,opt,name=tracing_alert,json=tracingAlert,proto3,oneof" json:"tracing_alert,omitempty"`
}

func (x *CreateAlertRequest) Reset() {
	*x = CreateAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlertRequest) ProtoMessage() {}

func (x *CreateAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlertRequest.ProtoReflect.Descriptor instead.
func (*CreateAlertRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAlertRequest) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *CreateAlertRequest) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *CreateAlertRequest) GetIsActive() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsActive
	}
	return nil
}

func (x *CreateAlertRequest) GetSeverity() AlertSeverity {
	if x != nil {
		return x.Severity
	}
	return AlertSeverity_ALERT_SEVERITY_INFO_OR_UNSPECIFIED
}

func (x *CreateAlertRequest) GetExpiration() *Date {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *CreateAlertRequest) GetCondition() *AlertCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *CreateAlertRequest) GetNotifications() *AlertNotifications {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *CreateAlertRequest) GetFilters() *AlertFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *CreateAlertRequest) GetNotifyEvery() *wrapperspb.DoubleValue {
	if x != nil {
		return x.NotifyEvery
	}
	return nil
}

func (x *CreateAlertRequest) GetActiveWhen() *AlertActiveWhen {
	if x != nil {
		return x.ActiveWhen
	}
	return nil
}

func (x *CreateAlertRequest) GetNotificationPayloadFilters() []*wrapperspb.StringValue {
	if x != nil {
		return x.NotificationPayloadFilters
	}
	return nil
}

func (x *CreateAlertRequest) GetMetaLabels() []*MetaLabel {
	if x != nil {
		return x.MetaLabels
	}
	return nil
}

func (x *CreateAlertRequest) GetMetaLabelsStrings() []*wrapperspb.StringValue {
	if x != nil {
		return x.MetaLabelsStrings
	}
	return nil
}

func (x *CreateAlertRequest) GetTracingAlert() *TracingAlert {
	if x != nil {
		return x.TracingAlert
	}
	return nil
}

type CreateAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert *Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *CreateAlertResponse) Reset() {
	*x = CreateAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlertResponse) ProtoMessage() {}

func (x *CreateAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlertResponse.ProtoReflect.Descriptor instead.
func (*CreateAlertResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAlertResponse) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type GetAlertModelMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                       *wrapperspb.StringValue   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description                *wrapperspb.StringValue   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IsActive                   *wrapperspb.BoolValue     `protobuf:"bytes,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Severity                   AlertSeverity             `protobuf:"varint,5,opt,name=severity,proto3,enum=com.coralogix.alerts.v1.AlertSeverity" json:"severity,omitempty"`
	Expiration                 *Date                     `protobuf:"bytes,6,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Condition                  *AlertCondition           `protobuf:"bytes,7,opt,name=condition,proto3" json:"condition,omitempty"`
	Notifications              *AlertNotifications       `protobuf:"bytes,8,opt,name=notifications,proto3" json:"notifications,omitempty"`
	Filters                    *AlertFilters             `protobuf:"bytes,9,opt,name=filters,proto3" json:"filters,omitempty"`
	NotifyEvery                *wrapperspb.DoubleValue   `protobuf:"bytes,10,opt,name=notify_every,json=notifyEvery,proto3" json:"notify_every,omitempty"`
	ActiveWhen                 *AlertActiveWhen          `protobuf:"bytes,11,opt,name=active_when,json=activeWhen,proto3" json:"active_when,omitempty"`
	NotificationPayloadFilters []*wrapperspb.StringValue `protobuf:"bytes,12,rep,name=notification_payload_filters,json=notificationPayloadFilters,proto3" json:"notification_payload_filters,omitempty"`
	MetaLabels                 []*MetaLabel              `protobuf:"bytes,13,rep,name=meta_labels,json=metaLabels,proto3" json:"meta_labels,omitempty"`
	MetaLabelsStrings          []*wrapperspb.StringValue `protobuf:"bytes,14,rep,name=meta_labels_strings,json=metaLabelsStrings,proto3" json:"meta_labels_strings,omitempty"`
	TracingAlert               *TracingAlert             `protobuf:"bytes,15,opt,name=tracing_alert,json=tracingAlert,proto3,oneof" json:"tracing_alert,omitempty"`
}

func (x *GetAlertModelMappingRequest) Reset() {
	*x = GetAlertModelMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertModelMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertModelMappingRequest) ProtoMessage() {}

func (x *GetAlertModelMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertModelMappingRequest.ProtoReflect.Descriptor instead.
func (*GetAlertModelMappingRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetAlertModelMappingRequest) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *GetAlertModelMappingRequest) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *GetAlertModelMappingRequest) GetIsActive() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsActive
	}
	return nil
}

func (x *GetAlertModelMappingRequest) GetSeverity() AlertSeverity {
	if x != nil {
		return x.Severity
	}
	return AlertSeverity_ALERT_SEVERITY_INFO_OR_UNSPECIFIED
}

func (x *GetAlertModelMappingRequest) GetExpiration() *Date {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *GetAlertModelMappingRequest) GetCondition() *AlertCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *GetAlertModelMappingRequest) GetNotifications() *AlertNotifications {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *GetAlertModelMappingRequest) GetFilters() *AlertFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *GetAlertModelMappingRequest) GetNotifyEvery() *wrapperspb.DoubleValue {
	if x != nil {
		return x.NotifyEvery
	}
	return nil
}

func (x *GetAlertModelMappingRequest) GetActiveWhen() *AlertActiveWhen {
	if x != nil {
		return x.ActiveWhen
	}
	return nil
}

func (x *GetAlertModelMappingRequest) GetNotificationPayloadFilters() []*wrapperspb.StringValue {
	if x != nil {
		return x.NotificationPayloadFilters
	}
	return nil
}

func (x *GetAlertModelMappingRequest) GetMetaLabels() []*MetaLabel {
	if x != nil {
		return x.MetaLabels
	}
	return nil
}

func (x *GetAlertModelMappingRequest) GetMetaLabelsStrings() []*wrapperspb.StringValue {
	if x != nil {
		return x.MetaLabelsStrings
	}
	return nil
}

func (x *GetAlertModelMappingRequest) GetTracingAlert() *TracingAlert {
	if x != nil {
		return x.TracingAlert
	}
	return nil
}

type GetAlertModelMappingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlertDefinition *structpb.Struct `protobuf:"bytes,1,opt,name=alert_definition,json=alertDefinition,proto3" json:"alert_definition,omitempty"`
}

func (x *GetAlertModelMappingResponse) Reset() {
	*x = GetAlertModelMappingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertModelMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertModelMappingResponse) ProtoMessage() {}

func (x *GetAlertModelMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertModelMappingResponse.ProtoReflect.Descriptor instead.
func (*GetAlertModelMappingResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetAlertModelMappingResponse) GetAlertDefinition() *structpb.Struct {
	if x != nil {
		return x.AlertDefinition
	}
	return nil
}

type UpdateAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert *Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *UpdateAlertRequest) Reset() {
	*x = UpdateAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertRequest) ProtoMessage() {}

func (x *UpdateAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateAlertRequest) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type UpdateAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert *Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *UpdateAlertResponse) Reset() {
	*x = UpdateAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertResponse) ProtoMessage() {}

func (x *UpdateAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertResponse.ProtoReflect.Descriptor instead.
func (*UpdateAlertResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateAlertResponse) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type UpdateAlertByUniqueIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert *Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *UpdateAlertByUniqueIdRequest) Reset() {
	*x = UpdateAlertByUniqueIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertByUniqueIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertByUniqueIdRequest) ProtoMessage() {}

func (x *UpdateAlertByUniqueIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertByUniqueIdRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlertByUniqueIdRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateAlertByUniqueIdRequest) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type UpdateAlertByUniqueIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert *Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *UpdateAlertByUniqueIdResponse) Reset() {
	*x = UpdateAlertByUniqueIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlertByUniqueIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlertByUniqueIdResponse) ProtoMessage() {}

func (x *UpdateAlertByUniqueIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlertByUniqueIdResponse.ProtoReflect.Descriptor instead.
func (*UpdateAlertByUniqueIdResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateAlertByUniqueIdResponse) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type DeleteAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAlertRequest) Reset() {
	*x = DeleteAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertRequest) ProtoMessage() {}

func (x *DeleteAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteAlertRequest) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAlertResponse) Reset() {
	*x = DeleteAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertResponse) ProtoMessage() {}

func (x *DeleteAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertResponse.ProtoReflect.Descriptor instead.
func (*DeleteAlertResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{14}
}

type DeleteAlertByUniqueIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAlertByUniqueIdRequest) Reset() {
	*x = DeleteAlertByUniqueIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertByUniqueIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertByUniqueIdRequest) ProtoMessage() {}

func (x *DeleteAlertByUniqueIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertByUniqueIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlertByUniqueIdRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteAlertByUniqueIdRequest) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteAlertByUniqueIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAlertByUniqueIdResponse) Reset() {
	*x = DeleteAlertByUniqueIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlertByUniqueIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlertByUniqueIdResponse) ProtoMessage() {}

func (x *DeleteAlertByUniqueIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlertByUniqueIdResponse.ProtoReflect.Descriptor instead.
func (*DeleteAlertByUniqueIdResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{16}
}

type GetAlertEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GetAlertEventsRequest) Reset() {
	*x = GetAlertEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertEventsRequest) ProtoMessage() {}

func (x *GetAlertEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertEventsRequest.ProtoReflect.Descriptor instead.
func (*GetAlertEventsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetAlertEventsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetAlertEventsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

type GetAlertEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*AlertEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetAlertEventsResponse) Reset() {
	*x = GetAlertEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertEventsResponse) ProtoMessage() {}

func (x *GetAlertEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertEventsResponse.ProtoReflect.Descriptor instead.
func (*GetAlertEventsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetAlertEventsResponse) GetEvents() []*AlertEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type GetAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAlertsRequest) Reset() {
	*x = GetAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertsRequest) ProtoMessage() {}

func (x *GetAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertsRequest.ProtoReflect.Descriptor instead.
func (*GetAlertsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{19}
}

type GetAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alerts []*Alert `protobuf:"bytes,1,rep,name=alerts,proto3" json:"alerts,omitempty"`
}

func (x *GetAlertsResponse) Reset() {
	*x = GetAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertsResponse) ProtoMessage() {}

func (x *GetAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertsResponse.ProtoReflect.Descriptor instead.
func (*GetAlertsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetAlertsResponse) GetAlerts() []*Alert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

type ValidateAlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alert *Alert `protobuf:"bytes,1,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *ValidateAlertRequest) Reset() {
	*x = ValidateAlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAlertRequest) ProtoMessage() {}

func (x *ValidateAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAlertRequest.ProtoReflect.Descriptor instead.
func (*ValidateAlertRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{21}
}

func (x *ValidateAlertRequest) GetAlert() *Alert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type ValidateAlertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ValidateAlertResponse) Reset() {
	*x = ValidateAlertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateAlertResponse) ProtoMessage() {}

func (x *ValidateAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateAlertResponse.ProtoReflect.Descriptor instead.
func (*ValidateAlertResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{22}
}

type GetAlertEventsCountBySeverityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From         *timestamppb.Timestamp    `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To           *timestamppb.Timestamp    `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Applications []*wrapperspb.StringValue `protobuf:"bytes,3,rep,name=applications,proto3" json:"applications,omitempty"`
	Subsystems   []*wrapperspb.StringValue `protobuf:"bytes,4,rep,name=subsystems,proto3" json:"subsystems,omitempty"`
}

func (x *GetAlertEventsCountBySeverityRequest) Reset() {
	*x = GetAlertEventsCountBySeverityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertEventsCountBySeverityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertEventsCountBySeverityRequest) ProtoMessage() {}

func (x *GetAlertEventsCountBySeverityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertEventsCountBySeverityRequest.ProtoReflect.Descriptor instead.
func (*GetAlertEventsCountBySeverityRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetAlertEventsCountBySeverityRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *GetAlertEventsCountBySeverityRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *GetAlertEventsCountBySeverityRequest) GetApplications() []*wrapperspb.StringValue {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *GetAlertEventsCountBySeverityRequest) GetSubsystems() []*wrapperspb.StringValue {
	if x != nil {
		return x.Subsystems
	}
	return nil
}

type GetAlertEventsCountBySeverityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventCounts []*AlertEventsCountBySeverity `protobuf:"bytes,1,rep,name=event_counts,json=eventCounts,proto3" json:"event_counts,omitempty"`
}

func (x *GetAlertEventsCountBySeverityResponse) Reset() {
	*x = GetAlertEventsCountBySeverityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAlertEventsCountBySeverityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAlertEventsCountBySeverityResponse) ProtoMessage() {}

func (x *GetAlertEventsCountBySeverityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAlertEventsCountBySeverityResponse.ProtoReflect.Descriptor instead.
func (*GetAlertEventsCountBySeverityResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{24}
}

func (x *GetAlertEventsCountBySeverityResponse) GetEventCounts() []*AlertEventsCountBySeverity {
	if x != nil {
		return x.EventCounts
	}
	return nil
}

type AlertEventsCountBySeverity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Severity AlertSeverity                `protobuf:"varint,1,opt,name=severity,proto3,enum=com.coralogix.alerts.v1.AlertSeverity" json:"severity,omitempty"`
	Type     AlertEventCountType          `protobuf:"varint,2,opt,name=type,proto3,enum=com.coralogix.alerts.v1.AlertEventCountType" json:"type,omitempty"`
	SubType  AlertEvent_AlertEventSubType `protobuf:"varint,3,opt,name=sub_type,json=subType,proto3,enum=com.coralogix.alerts.v1.AlertEvent_AlertEventSubType" json:"sub_type,omitempty"`
	Count    *wrapperspb.Int32Value       `protobuf:"bytes,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *AlertEventsCountBySeverity) Reset() {
	*x = AlertEventsCountBySeverity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertEventsCountBySeverity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertEventsCountBySeverity) ProtoMessage() {}

func (x *AlertEventsCountBySeverity) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertEventsCountBySeverity.ProtoReflect.Descriptor instead.
func (*AlertEventsCountBySeverity) Descriptor() ([]byte, []int) {
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP(), []int{25}
}

func (x *AlertEventsCountBySeverity) GetSeverity() AlertSeverity {
	if x != nil {
		return x.Severity
	}
	return AlertSeverity_ALERT_SEVERITY_INFO_OR_UNSPECIFIED
}

func (x *AlertEventsCountBySeverity) GetType() AlertEventCountType {
	if x != nil {
		return x.Type
	}
	return AlertEventCountType_ALERT_EVENT_COUNT_TYPE_UNSPECIFIED
}

func (x *AlertEventsCountBySeverity) GetSubType() AlertEvent_AlertEventSubType {
	if x != nil {
		return x.SubType
	}
	return AlertEvent_ALERT_EVENT_SUB_TYPE_UNSPECIFIED
}

func (x *AlertEventsCountBySeverity) GetCount() *wrapperspb.Int32Value {
	if x != nil {
		return x.Count
	}
	return nil
}

var file_com_coralogix_alerts_v1_alert_service_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*AuditLogDescription)(nil),
		Field:         5000,
		Name:          "com.coralogix.alerts.v1.audit_log_description",
		Tag:           "bytes,5000,opt,name=audit_log_description",
		Filename:      "com/coralogix/alerts/v1/alert_service.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional com.coralogix.alerts.v1.AuditLogDescription audit_log_description = 5000;
	E_AuditLogDescription = &file_com_coralogix_alerts_v1_alert_service_proto_extTypes[0]
)

var File_com_coralogix_alerts_v1_alert_service_proto protoreflect.FileDescriptor

var file_com_coralogix_alerts_v1_alert_service_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x13, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x22, 0x49, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x79,
	0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x22, 0xff, 0x07, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a,
	0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x3f, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x76, 0x65, 0x72,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x76, 0x65,
	0x72, 0x79, 0x12, 0x49, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77, 0x68, 0x65,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x68, 0x65,
	0x6e, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x12, 0x5e, 0x0a,
	0x1c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x1a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x43, 0x0a,
	0x0b, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x13, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x6d,
	0x65, 0x74, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x4f, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00,
	0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x22, 0x4b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x22, 0x88, 0x08, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x3d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x65, 0x76, 0x65, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x76, 0x65, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x57, 0x68, 0x65, 0x6e, 0x12, 0x5e, 0x0a, 0x1c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x1a, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0a,
	0x6d, 0x65, 0x74, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x13, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x6d, 0x65, 0x74, 0x61, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x4f, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e,
	0x67, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x72,
	0x61, 0x63, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x62, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x4a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x4b, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x54, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x55,
	0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x79, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x42, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x4c, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42,
	0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1f,
	0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x79, 0x55,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x73, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x02, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x4b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0x4c, 0x0a, 0x14,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x82, 0x02, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x40, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x7f, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x79, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x42, 0x79, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xa7, 0x02, 0x0a, 0x1a, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79,
	0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x50,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x31, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2a, 0x83, 0x01, 0x0a, 0x13, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x41,
	0x4c, 0x45, 0x52, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c,
	0x45, 0x52, 0x54, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x4e, 0x4f, 0x4d, 0x41, 0x4c, 0x59, 0x10, 0x02, 0x32, 0xf2, 0x10, 0x0a, 0x0c, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x08, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0xc2, 0xb8,
	0x02, 0x0b, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8a, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0xc2,
	0xb8, 0x02, 0x0c, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0xbd, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x32, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42,
	0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0xc2, 0xb8, 0x02, 0x18, 0x0a, 0x16, 0x67, 0x65, 0x74,
	0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x20, 0x62, 0x79, 0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x20, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xbd, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x34,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0xc2, 0xb8, 0x02,
	0x13, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x20, 0x6d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2d, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x2f, 0x3a, 0x01, 0x2a, 0x12, 0x96, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2c, 0xc2, 0xb8, 0x02, 0x0e, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x3a, 0x01, 0x2a, 0x12, 0xa4,
	0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x2b,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0xc2, 0xb8, 0x02, 0x0e, 0x0a,
	0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x22, 0x1a, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x69, 0x64, 0x7d, 0x3a, 0x05,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x12, 0xd8, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12,
	0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x79, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50,
	0xc2, 0xb8, 0x02, 0x0e, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x1a, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x2f,
	0x7b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x2e, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x7d, 0x3a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74,
	0x12, 0x9c, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0xc2, 0xb8, 0x02,
	0x0e, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x69, 0x64, 0x7d, 0x12,
	0xbc, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42,
	0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42,
	0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0xc2, 0xb8, 0x02, 0x0e, 0x0a, 0x0c,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1c, 0x2a, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x2f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa6,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x33, 0xc2, 0xb8, 0x02, 0x12, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x20, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17,
	0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xaa, 0x01, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0xc2, 0xb8, 0x02, 0x10, 0x0a, 0x0e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x05, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x12, 0xf7, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x3d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x79, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x42, 0x79, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0xc2, 0xb8, 0x02, 0x24, 0x0a, 0x22, 0x67, 0x65, 0x74,
	0x20, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x20, 0x62, 0x79, 0x20, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2d, 0x62, 0x79, 0x2d, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x3a, 0x84,
	0x01, 0x0a, 0x15, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x88, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x6f, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_alerts_v1_alert_service_proto_rawDescOnce sync.Once
	file_com_coralogix_alerts_v1_alert_service_proto_rawDescData = file_com_coralogix_alerts_v1_alert_service_proto_rawDesc
)

func file_com_coralogix_alerts_v1_alert_service_proto_rawDescGZIP() []byte {
	file_com_coralogix_alerts_v1_alert_service_proto_rawDescOnce.Do(func() {
		file_com_coralogix_alerts_v1_alert_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_alerts_v1_alert_service_proto_rawDescData)
	})
	return file_com_coralogix_alerts_v1_alert_service_proto_rawDescData
}

var file_com_coralogix_alerts_v1_alert_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_com_coralogix_alerts_v1_alert_service_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_com_coralogix_alerts_v1_alert_service_proto_goTypes = []interface{}{
	(AlertEventCountType)(0),                      // 0: com.coralogix.alerts.v1.AlertEventCountType
	(*AuditLogDescription)(nil),                   // 1: com.coralogix.alerts.v1.AuditLogDescription
	(*GetAlertRequest)(nil),                       // 2: com.coralogix.alerts.v1.GetAlertRequest
	(*GetAlertResponse)(nil),                      // 3: com.coralogix.alerts.v1.GetAlertResponse
	(*GetAlertByUniqueIdRequest)(nil),             // 4: com.coralogix.alerts.v1.GetAlertByUniqueIdRequest
	(*GetAlertByUniqueIdResponse)(nil),            // 5: com.coralogix.alerts.v1.GetAlertByUniqueIdResponse
	(*CreateAlertRequest)(nil),                    // 6: com.coralogix.alerts.v1.CreateAlertRequest
	(*CreateAlertResponse)(nil),                   // 7: com.coralogix.alerts.v1.CreateAlertResponse
	(*GetAlertModelMappingRequest)(nil),           // 8: com.coralogix.alerts.v1.GetAlertModelMappingRequest
	(*GetAlertModelMappingResponse)(nil),          // 9: com.coralogix.alerts.v1.GetAlertModelMappingResponse
	(*UpdateAlertRequest)(nil),                    // 10: com.coralogix.alerts.v1.UpdateAlertRequest
	(*UpdateAlertResponse)(nil),                   // 11: com.coralogix.alerts.v1.UpdateAlertResponse
	(*UpdateAlertByUniqueIdRequest)(nil),          // 12: com.coralogix.alerts.v1.UpdateAlertByUniqueIdRequest
	(*UpdateAlertByUniqueIdResponse)(nil),         // 13: com.coralogix.alerts.v1.UpdateAlertByUniqueIdResponse
	(*DeleteAlertRequest)(nil),                    // 14: com.coralogix.alerts.v1.DeleteAlertRequest
	(*DeleteAlertResponse)(nil),                   // 15: com.coralogix.alerts.v1.DeleteAlertResponse
	(*DeleteAlertByUniqueIdRequest)(nil),          // 16: com.coralogix.alerts.v1.DeleteAlertByUniqueIdRequest
	(*DeleteAlertByUniqueIdResponse)(nil),         // 17: com.coralogix.alerts.v1.DeleteAlertByUniqueIdResponse
	(*GetAlertEventsRequest)(nil),                 // 18: com.coralogix.alerts.v1.GetAlertEventsRequest
	(*GetAlertEventsResponse)(nil),                // 19: com.coralogix.alerts.v1.GetAlertEventsResponse
	(*GetAlertsRequest)(nil),                      // 20: com.coralogix.alerts.v1.GetAlertsRequest
	(*GetAlertsResponse)(nil),                     // 21: com.coralogix.alerts.v1.GetAlertsResponse
	(*ValidateAlertRequest)(nil),                  // 22: com.coralogix.alerts.v1.ValidateAlertRequest
	(*ValidateAlertResponse)(nil),                 // 23: com.coralogix.alerts.v1.ValidateAlertResponse
	(*GetAlertEventsCountBySeverityRequest)(nil),  // 24: com.coralogix.alerts.v1.GetAlertEventsCountBySeverityRequest
	(*GetAlertEventsCountBySeverityResponse)(nil), // 25: com.coralogix.alerts.v1.GetAlertEventsCountBySeverityResponse
	(*AlertEventsCountBySeverity)(nil),            // 26: com.coralogix.alerts.v1.AlertEventsCountBySeverity
	(*wrapperspb.StringValue)(nil),                // 27: google.protobuf.StringValue
	(*Alert)(nil),                                 // 28: com.coralogix.alerts.v1.Alert
	(*wrapperspb.BoolValue)(nil),                  // 29: google.protobuf.BoolValue
	(AlertSeverity)(0),                            // 30: com.coralogix.alerts.v1.AlertSeverity
	(*Date)(nil),                                  // 31: com.coralogix.alerts.v1.Date
	(*AlertCondition)(nil),                        // 32: com.coralogix.alerts.v1.AlertCondition
	(*AlertNotifications)(nil),                    // 33: com.coralogix.alerts.v1.AlertNotifications
	(*AlertFilters)(nil),                          // 34: com.coralogix.alerts.v1.AlertFilters
	(*wrapperspb.DoubleValue)(nil),                // 35: google.protobuf.DoubleValue
	(*AlertActiveWhen)(nil),                       // 36: com.coralogix.alerts.v1.AlertActiveWhen
	(*MetaLabel)(nil),                             // 37: com.coralogix.alerts.v1.MetaLabel
	(*TracingAlert)(nil),                          // 38: com.coralogix.alerts.v1.TracingAlert
	(*structpb.Struct)(nil),                       // 39: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),                 // 40: google.protobuf.Timestamp
	(*AlertEvent)(nil),                            // 41: com.coralogix.alerts.v1.AlertEvent
	(AlertEvent_AlertEventSubType)(0),             // 42: com.coralogix.alerts.v1.AlertEvent.AlertEventSubType
	(*wrapperspb.Int32Value)(nil),                 // 43: google.protobuf.Int32Value
	(*descriptorpb.MethodOptions)(nil),            // 44: google.protobuf.MethodOptions
}
var file_com_coralogix_alerts_v1_alert_service_proto_depIdxs = []int32{
	27, // 0: com.coralogix.alerts.v1.GetAlertRequest.id:type_name -> google.protobuf.StringValue
	28, // 1: com.coralogix.alerts.v1.GetAlertResponse.alert:type_name -> com.coralogix.alerts.v1.Alert
	27, // 2: com.coralogix.alerts.v1.GetAlertByUniqueIdRequest.id:type_name -> google.protobuf.StringValue
	28, // 3: com.coralogix.alerts.v1.GetAlertByUniqueIdResponse.alert:type_name -> com.coralogix.alerts.v1.Alert
	27, // 4: com.coralogix.alerts.v1.CreateAlertRequest.name:type_name -> google.protobuf.StringValue
	27, // 5: com.coralogix.alerts.v1.CreateAlertRequest.description:type_name -> google.protobuf.StringValue
	29, // 6: com.coralogix.alerts.v1.CreateAlertRequest.is_active:type_name -> google.protobuf.BoolValue
	30, // 7: com.coralogix.alerts.v1.CreateAlertRequest.severity:type_name -> com.coralogix.alerts.v1.AlertSeverity
	31, // 8: com.coralogix.alerts.v1.CreateAlertRequest.expiration:type_name -> com.coralogix.alerts.v1.Date
	32, // 9: com.coralogix.alerts.v1.CreateAlertRequest.condition:type_name -> com.coralogix.alerts.v1.AlertCondition
	33, // 10: com.coralogix.alerts.v1.CreateAlertRequest.notifications:type_name -> com.coralogix.alerts.v1.AlertNotifications
	34, // 11: com.coralogix.alerts.v1.CreateAlertRequest.filters:type_name -> com.coralogix.alerts.v1.AlertFilters
	35, // 12: com.coralogix.alerts.v1.CreateAlertRequest.notify_every:type_name -> google.protobuf.DoubleValue
	36, // 13: com.coralogix.alerts.v1.CreateAlertRequest.active_when:type_name -> com.coralogix.alerts.v1.AlertActiveWhen
	27, // 14: com.coralogix.alerts.v1.CreateAlertRequest.notification_payload_filters:type_name -> google.protobuf.StringValue
	37, // 15: com.coralogix.alerts.v1.CreateAlertRequest.meta_labels:type_name -> com.coralogix.alerts.v1.MetaLabel
	27, // 16: com.coralogix.alerts.v1.CreateAlertRequest.meta_labels_strings:type_name -> google.protobuf.StringValue
	38, // 17: com.coralogix.alerts.v1.CreateAlertRequest.tracing_alert:type_name -> com.coralogix.alerts.v1.TracingAlert
	28, // 18: com.coralogix.alerts.v1.CreateAlertResponse.alert:type_name -> com.coralogix.alerts.v1.Alert
	27, // 19: com.coralogix.alerts.v1.GetAlertModelMappingRequest.name:type_name -> google.protobuf.StringValue
	27, // 20: com.coralogix.alerts.v1.GetAlertModelMappingRequest.description:type_name -> google.protobuf.StringValue
	29, // 21: com.coralogix.alerts.v1.GetAlertModelMappingRequest.is_active:type_name -> google.protobuf.BoolValue
	30, // 22: com.coralogix.alerts.v1.GetAlertModelMappingRequest.severity:type_name -> com.coralogix.alerts.v1.AlertSeverity
	31, // 23: com.coralogix.alerts.v1.GetAlertModelMappingRequest.expiration:type_name -> com.coralogix.alerts.v1.Date
	32, // 24: com.coralogix.alerts.v1.GetAlertModelMappingRequest.condition:type_name -> com.coralogix.alerts.v1.AlertCondition
	33, // 25: com.coralogix.alerts.v1.GetAlertModelMappingRequest.notifications:type_name -> com.coralogix.alerts.v1.AlertNotifications
	34, // 26: com.coralogix.alerts.v1.GetAlertModelMappingRequest.filters:type_name -> com.coralogix.alerts.v1.AlertFilters
	35, // 27: com.coralogix.alerts.v1.GetAlertModelMappingRequest.notify_every:type_name -> google.protobuf.DoubleValue
	36, // 28: com.coralogix.alerts.v1.GetAlertModelMappingRequest.active_when:type_name -> com.coralogix.alerts.v1.AlertActiveWhen
	27, // 29: com.coralogix.alerts.v1.GetAlertModelMappingRequest.notification_payload_filters:type_name -> google.protobuf.StringValue
	37, // 30: com.coralogix.alerts.v1.GetAlertModelMappingRequest.meta_labels:type_name -> com.coralogix.alerts.v1.MetaLabel
	27, // 31: com.coralogix.alerts.v1.GetAlertModelMappingRequest.meta_labels_strings:type_name -> google.protobuf.StringValue
	38, // 32: com.coralogix.alerts.v1.GetAlertModelMappingRequest.tracing_alert:type_name -> com.coralogix.alerts.v1.TracingAlert
	39, // 33: com.coralogix.alerts.v1.GetAlertModelMappingResponse.alert_definition:type_name -> google.protobuf.Struct
	28, // 34: com.coralogix.alerts.v1.UpdateAlertRequest.alert:type_name -> com.coralogix.alerts.v1.Alert
	28, // 35: com.coralogix.alerts.v1.UpdateAlertResponse.alert:type_name -> com.coralogix.alerts.v1.Alert
	28, // 36: com.coralogix.alerts.v1.UpdateAlertByUniqueIdRequest.alert:type_name -> com.coralogix.alerts.v1.Alert
	28, // 37: com.coralogix.alerts.v1.UpdateAlertByUniqueIdResponse.alert:type_name -> com.coralogix.alerts.v1.Alert
	27, // 38: com.coralogix.alerts.v1.DeleteAlertRequest.id:type_name -> google.protobuf.StringValue
	27, // 39: com.coralogix.alerts.v1.DeleteAlertByUniqueIdRequest.id:type_name -> google.protobuf.StringValue
	40, // 40: com.coralogix.alerts.v1.GetAlertEventsRequest.from:type_name -> google.protobuf.Timestamp
	40, // 41: com.coralogix.alerts.v1.GetAlertEventsRequest.to:type_name -> google.protobuf.Timestamp
	41, // 42: com.coralogix.alerts.v1.GetAlertEventsResponse.events:type_name -> com.coralogix.alerts.v1.AlertEvent
	28, // 43: com.coralogix.alerts.v1.GetAlertsResponse.alerts:type_name -> com.coralogix.alerts.v1.Alert
	28, // 44: com.coralogix.alerts.v1.ValidateAlertRequest.alert:type_name -> com.coralogix.alerts.v1.Alert
	40, // 45: com.coralogix.alerts.v1.GetAlertEventsCountBySeverityRequest.from:type_name -> google.protobuf.Timestamp
	40, // 46: com.coralogix.alerts.v1.GetAlertEventsCountBySeverityRequest.to:type_name -> google.protobuf.Timestamp
	27, // 47: com.coralogix.alerts.v1.GetAlertEventsCountBySeverityRequest.applications:type_name -> google.protobuf.StringValue
	27, // 48: com.coralogix.alerts.v1.GetAlertEventsCountBySeverityRequest.subsystems:type_name -> google.protobuf.StringValue
	26, // 49: com.coralogix.alerts.v1.GetAlertEventsCountBySeverityResponse.event_counts:type_name -> com.coralogix.alerts.v1.AlertEventsCountBySeverity
	30, // 50: com.coralogix.alerts.v1.AlertEventsCountBySeverity.severity:type_name -> com.coralogix.alerts.v1.AlertSeverity
	0,  // 51: com.coralogix.alerts.v1.AlertEventsCountBySeverity.type:type_name -> com.coralogix.alerts.v1.AlertEventCountType
	42, // 52: com.coralogix.alerts.v1.AlertEventsCountBySeverity.sub_type:type_name -> com.coralogix.alerts.v1.AlertEvent.AlertEventSubType
	43, // 53: com.coralogix.alerts.v1.AlertEventsCountBySeverity.count:type_name -> google.protobuf.Int32Value
	44, // 54: com.coralogix.alerts.v1.audit_log_description:extendee -> google.protobuf.MethodOptions
	1,  // 55: com.coralogix.alerts.v1.audit_log_description:type_name -> com.coralogix.alerts.v1.AuditLogDescription
	2,  // 56: com.coralogix.alerts.v1.AlertService.GetAlert:input_type -> com.coralogix.alerts.v1.GetAlertRequest
	20, // 57: com.coralogix.alerts.v1.AlertService.GetAlerts:input_type -> com.coralogix.alerts.v1.GetAlertsRequest
	4,  // 58: com.coralogix.alerts.v1.AlertService.GetAlertByUniqueId:input_type -> com.coralogix.alerts.v1.GetAlertByUniqueIdRequest
	8,  // 59: com.coralogix.alerts.v1.AlertService.GetAlertModelMapping:input_type -> com.coralogix.alerts.v1.GetAlertModelMappingRequest
	6,  // 60: com.coralogix.alerts.v1.AlertService.CreateAlert:input_type -> com.coralogix.alerts.v1.CreateAlertRequest
	10, // 61: com.coralogix.alerts.v1.AlertService.UpdateAlert:input_type -> com.coralogix.alerts.v1.UpdateAlertRequest
	12, // 62: com.coralogix.alerts.v1.AlertService.UpdateAlertByUniqueId:input_type -> com.coralogix.alerts.v1.UpdateAlertByUniqueIdRequest
	14, // 63: com.coralogix.alerts.v1.AlertService.DeleteAlert:input_type -> com.coralogix.alerts.v1.DeleteAlertRequest
	16, // 64: com.coralogix.alerts.v1.AlertService.DeleteAlertByUniqueId:input_type -> com.coralogix.alerts.v1.DeleteAlertByUniqueIdRequest
	18, // 65: com.coralogix.alerts.v1.AlertService.GetAlertEvents:input_type -> com.coralogix.alerts.v1.GetAlertEventsRequest
	22, // 66: com.coralogix.alerts.v1.AlertService.ValidateAlert:input_type -> com.coralogix.alerts.v1.ValidateAlertRequest
	24, // 67: com.coralogix.alerts.v1.AlertService.GetAlertEventsCountBySeverity:input_type -> com.coralogix.alerts.v1.GetAlertEventsCountBySeverityRequest
	3,  // 68: com.coralogix.alerts.v1.AlertService.GetAlert:output_type -> com.coralogix.alerts.v1.GetAlertResponse
	21, // 69: com.coralogix.alerts.v1.AlertService.GetAlerts:output_type -> com.coralogix.alerts.v1.GetAlertsResponse
	5,  // 70: com.coralogix.alerts.v1.AlertService.GetAlertByUniqueId:output_type -> com.coralogix.alerts.v1.GetAlertByUniqueIdResponse
	9,  // 71: com.coralogix.alerts.v1.AlertService.GetAlertModelMapping:output_type -> com.coralogix.alerts.v1.GetAlertModelMappingResponse
	7,  // 72: com.coralogix.alerts.v1.AlertService.CreateAlert:output_type -> com.coralogix.alerts.v1.CreateAlertResponse
	11, // 73: com.coralogix.alerts.v1.AlertService.UpdateAlert:output_type -> com.coralogix.alerts.v1.UpdateAlertResponse
	13, // 74: com.coralogix.alerts.v1.AlertService.UpdateAlertByUniqueId:output_type -> com.coralogix.alerts.v1.UpdateAlertByUniqueIdResponse
	15, // 75: com.coralogix.alerts.v1.AlertService.DeleteAlert:output_type -> com.coralogix.alerts.v1.DeleteAlertResponse
	17, // 76: com.coralogix.alerts.v1.AlertService.DeleteAlertByUniqueId:output_type -> com.coralogix.alerts.v1.DeleteAlertByUniqueIdResponse
	19, // 77: com.coralogix.alerts.v1.AlertService.GetAlertEvents:output_type -> com.coralogix.alerts.v1.GetAlertEventsResponse
	23, // 78: com.coralogix.alerts.v1.AlertService.ValidateAlert:output_type -> com.coralogix.alerts.v1.ValidateAlertResponse
	25, // 79: com.coralogix.alerts.v1.AlertService.GetAlertEventsCountBySeverity:output_type -> com.coralogix.alerts.v1.GetAlertEventsCountBySeverityResponse
	68, // [68:80] is the sub-list for method output_type
	56, // [56:68] is the sub-list for method input_type
	55, // [55:56] is the sub-list for extension type_name
	54, // [54:55] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_com_coralogix_alerts_v1_alert_service_proto_init() }
func file_com_coralogix_alerts_v1_alert_service_proto_init() {
	if File_com_coralogix_alerts_v1_alert_service_proto != nil {
		return
	}
	file_com_coralogix_alerts_v1_alert_proto_init()
	file_com_coralogix_alerts_v1_alert_event_proto_init()
	file_com_coralogix_alerts_v1_alert_severity_proto_init()
	file_com_coralogix_alerts_v1_alert_condition_proto_init()
	file_com_coralogix_alerts_v1_alert_notifications_proto_init()
	file_com_coralogix_alerts_v1_alert_filters_proto_init()
	file_com_coralogix_alerts_v1_alert_active_when_proto_init()
	file_com_coralogix_alerts_v1_date_time_proto_init()
	//file_google_api_annotations_proto_init()
	file_com_coralogix_alerts_v1_tracing_alert_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditLogDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertByUniqueIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertByUniqueIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertModelMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertModelMappingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertByUniqueIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlertByUniqueIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertByUniqueIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlertByUniqueIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateAlertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertEventsCountBySeverityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAlertEventsCountBySeverityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertEventsCountBySeverity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_com_coralogix_alerts_v1_alert_service_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_alerts_v1_alert_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 1,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogix_alerts_v1_alert_service_proto_goTypes,
		DependencyIndexes: file_com_coralogix_alerts_v1_alert_service_proto_depIdxs,
		EnumInfos:         file_com_coralogix_alerts_v1_alert_service_proto_enumTypes,
		MessageInfos:      file_com_coralogix_alerts_v1_alert_service_proto_msgTypes,
		ExtensionInfos:    file_com_coralogix_alerts_v1_alert_service_proto_extTypes,
	}.Build()
	File_com_coralogix_alerts_v1_alert_service_proto = out.File
	file_com_coralogix_alerts_v1_alert_service_proto_rawDesc = nil
	file_com_coralogix_alerts_v1_alert_service_proto_goTypes = nil
	file_com_coralogix_alerts_v1_alert_service_proto_depIdxs = nil
}
