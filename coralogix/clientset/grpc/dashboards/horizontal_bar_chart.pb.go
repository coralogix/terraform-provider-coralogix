// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: com/coralogixapis/dashboards/v1/ast/widgets/horizontal_bar_chart.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HorizontalBarChart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query             *HorizontalBarChart_Query           `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	MaxBarsPerChart   *wrapperspb.Int32Value              `protobuf:"bytes,2,opt,name=max_bars_per_chart,json=maxBarsPerChart,proto3" json:"max_bars_per_chart,omitempty"`
	GroupNameTemplate *wrapperspb.StringValue             `protobuf:"bytes,3,opt,name=group_name_template,json=groupNameTemplate,proto3" json:"group_name_template,omitempty"`
	StackDefinition   *HorizontalBarChart_StackDefinition `protobuf:"bytes,4,opt,name=stack_definition,json=stackDefinition,proto3" json:"stack_definition,omitempty"`
	ScaleType         ScaleType                           `protobuf:"varint,5,opt,name=scale_type,json=scaleType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType" json:"scale_type,omitempty"`
	ColorsBy          *ColorsBy                           `protobuf:"bytes,6,opt,name=colors_by,json=colorsBy,proto3" json:"colors_by,omitempty"`
	Unit              Unit                                `protobuf:"varint,8,opt,name=unit,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.Unit" json:"unit,omitempty"`
	DisplayOnBar      *wrapperspb.BoolValue               `protobuf:"bytes,9,opt,name=display_on_bar,json=displayOnBar,proto3" json:"display_on_bar,omitempty"`
	YAxisViewBy       *HorizontalBarChart_YAxisViewBy     `protobuf:"bytes,10,opt,name=y_axis_view_by,json=yAxisViewBy,proto3" json:"y_axis_view_by,omitempty"`
	SortBy            SortByType                          `protobuf:"varint,11,opt,name=sort_by,json=sortBy,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType" json:"sort_by,omitempty"`
	ColorScheme       *wrapperspb.StringValue             `protobuf:"bytes,12,opt,name=color_scheme,json=colorScheme,proto3" json:"color_scheme,omitempty"`
	DataModeType      DataModeType                        `protobuf:"varint,13,opt,name=data_mode_type,json=dataModeType,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType" json:"data_mode_type,omitempty"`
	CustomUnit        *wrapperspb.StringValue             `protobuf:"bytes,14,opt,name=custom_unit,json=customUnit,proto3" json:"custom_unit,omitempty"`
	Decimal           *wrapperspb.Int32Value              `protobuf:"bytes,15,opt,name=decimal,proto3" json:"decimal,omitempty"`
}

func (x *HorizontalBarChart) Reset() {
	*x = HorizontalBarChart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HorizontalBarChart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HorizontalBarChart) ProtoMessage() {}

func (x *HorizontalBarChart) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HorizontalBarChart.ProtoReflect.Descriptor instead.
func (*HorizontalBarChart) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescGZIP(), []int{0}
}

func (x *HorizontalBarChart) GetQuery() *HorizontalBarChart_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *HorizontalBarChart) GetMaxBarsPerChart() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxBarsPerChart
	}
	return nil
}

func (x *HorizontalBarChart) GetGroupNameTemplate() *wrapperspb.StringValue {
	if x != nil {
		return x.GroupNameTemplate
	}
	return nil
}

func (x *HorizontalBarChart) GetStackDefinition() *HorizontalBarChart_StackDefinition {
	if x != nil {
		return x.StackDefinition
	}
	return nil
}

func (x *HorizontalBarChart) GetScaleType() ScaleType {
	if x != nil {
		return x.ScaleType
	}
	return ScaleType_SCALE_TYPE_UNSPECIFIED
}

func (x *HorizontalBarChart) GetColorsBy() *ColorsBy {
	if x != nil {
		return x.ColorsBy
	}
	return nil
}

func (x *HorizontalBarChart) GetUnit() Unit {
	if x != nil {
		return x.Unit
	}
	return Unit_UNIT_UNSPECIFIED
}

func (x *HorizontalBarChart) GetDisplayOnBar() *wrapperspb.BoolValue {
	if x != nil {
		return x.DisplayOnBar
	}
	return nil
}

func (x *HorizontalBarChart) GetYAxisViewBy() *HorizontalBarChart_YAxisViewBy {
	if x != nil {
		return x.YAxisViewBy
	}
	return nil
}

func (x *HorizontalBarChart) GetSortBy() SortByType {
	if x != nil {
		return x.SortBy
	}
	return SortByType_SORT_BY_TYPE_UNSPECIFIED
}

func (x *HorizontalBarChart) GetColorScheme() *wrapperspb.StringValue {
	if x != nil {
		return x.ColorScheme
	}
	return nil
}

func (x *HorizontalBarChart) GetDataModeType() DataModeType {
	if x != nil {
		return x.DataModeType
	}
	return DataModeType_DATA_MODE_TYPE_HIGH_UNSPECIFIED
}

func (x *HorizontalBarChart) GetCustomUnit() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomUnit
	}
	return nil
}

func (x *HorizontalBarChart) GetDecimal() *wrapperspb.Int32Value {
	if x != nil {
		return x.Decimal
	}
	return nil
}

type HorizontalBarChart_Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*HorizontalBarChart_Query_Logs
	//	*HorizontalBarChart_Query_Spans
	//	*HorizontalBarChart_Query_Metrics
	//	*HorizontalBarChart_Query_Dataprime
	Value isHorizontalBarChart_Query_Value `protobuf_oneof:"value"`
}

func (x *HorizontalBarChart_Query) Reset() {
	*x = HorizontalBarChart_Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HorizontalBarChart_Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HorizontalBarChart_Query) ProtoMessage() {}

func (x *HorizontalBarChart_Query) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HorizontalBarChart_Query.ProtoReflect.Descriptor instead.
func (*HorizontalBarChart_Query) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescGZIP(), []int{0, 0}
}

func (m *HorizontalBarChart_Query) GetValue() isHorizontalBarChart_Query_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *HorizontalBarChart_Query) GetLogs() *HorizontalBarChart_LogsQuery {
	if x, ok := x.GetValue().(*HorizontalBarChart_Query_Logs); ok {
		return x.Logs
	}
	return nil
}

func (x *HorizontalBarChart_Query) GetSpans() *HorizontalBarChart_SpansQuery {
	if x, ok := x.GetValue().(*HorizontalBarChart_Query_Spans); ok {
		return x.Spans
	}
	return nil
}

func (x *HorizontalBarChart_Query) GetMetrics() *HorizontalBarChart_MetricsQuery {
	if x, ok := x.GetValue().(*HorizontalBarChart_Query_Metrics); ok {
		return x.Metrics
	}
	return nil
}

func (x *HorizontalBarChart_Query) GetDataprime() *HorizontalBarChart_DataprimeQuery {
	if x, ok := x.GetValue().(*HorizontalBarChart_Query_Dataprime); ok {
		return x.Dataprime
	}
	return nil
}

type isHorizontalBarChart_Query_Value interface {
	isHorizontalBarChart_Query_Value()
}

type HorizontalBarChart_Query_Logs struct {
	Logs *HorizontalBarChart_LogsQuery `protobuf:"bytes,1,opt,name=logs,proto3,oneof"`
}

type HorizontalBarChart_Query_Spans struct {
	Spans *HorizontalBarChart_SpansQuery `protobuf:"bytes,2,opt,name=spans,proto3,oneof"`
}

type HorizontalBarChart_Query_Metrics struct {
	Metrics *HorizontalBarChart_MetricsQuery `protobuf:"bytes,3,opt,name=metrics,proto3,oneof"`
}

type HorizontalBarChart_Query_Dataprime struct {
	Dataprime *HorizontalBarChart_DataprimeQuery `protobuf:"bytes,4,opt,name=dataprime,proto3,oneof"`
}

func (*HorizontalBarChart_Query_Logs) isHorizontalBarChart_Query_Value() {}

func (*HorizontalBarChart_Query_Spans) isHorizontalBarChart_Query_Value() {}

func (*HorizontalBarChart_Query_Metrics) isHorizontalBarChart_Query_Value() {}

func (*HorizontalBarChart_Query_Dataprime) isHorizontalBarChart_Query_Value() {}

type HorizontalBarChart_StackDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxSlicesPerBar   *wrapperspb.Int32Value  `protobuf:"bytes,1,opt,name=max_slices_per_bar,json=maxSlicesPerBar,proto3" json:"max_slices_per_bar,omitempty"`
	StackNameTemplate *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=stack_name_template,json=stackNameTemplate,proto3" json:"stack_name_template,omitempty"`
}

func (x *HorizontalBarChart_StackDefinition) Reset() {
	*x = HorizontalBarChart_StackDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HorizontalBarChart_StackDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HorizontalBarChart_StackDefinition) ProtoMessage() {}

func (x *HorizontalBarChart_StackDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HorizontalBarChart_StackDefinition.ProtoReflect.Descriptor instead.
func (*HorizontalBarChart_StackDefinition) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescGZIP(), []int{0, 1}
}

func (x *HorizontalBarChart_StackDefinition) GetMaxSlicesPerBar() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxSlicesPerBar
	}
	return nil
}

func (x *HorizontalBarChart_StackDefinition) GetStackNameTemplate() *wrapperspb.StringValue {
	if x != nil {
		return x.StackNameTemplate
	}
	return nil
}

type HorizontalBarChart_YAxisViewBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to YAxisView:
	//
	//	*HorizontalBarChart_YAxisViewBy_Category
	//	*HorizontalBarChart_YAxisViewBy_Value
	YAxisView isHorizontalBarChart_YAxisViewBy_YAxisView `protobuf_oneof:"y_axis_view"`
}

func (x *HorizontalBarChart_YAxisViewBy) Reset() {
	*x = HorizontalBarChart_YAxisViewBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HorizontalBarChart_YAxisViewBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HorizontalBarChart_YAxisViewBy) ProtoMessage() {}

func (x *HorizontalBarChart_YAxisViewBy) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HorizontalBarChart_YAxisViewBy.ProtoReflect.Descriptor instead.
func (*HorizontalBarChart_YAxisViewBy) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescGZIP(), []int{0, 2}
}

func (m *HorizontalBarChart_YAxisViewBy) GetYAxisView() isHorizontalBarChart_YAxisViewBy_YAxisView {
	if m != nil {
		return m.YAxisView
	}
	return nil
}

func (x *HorizontalBarChart_YAxisViewBy) GetCategory() *HorizontalBarChart_YAxisViewBy_YAxisViewByCategory {
	if x, ok := x.GetYAxisView().(*HorizontalBarChart_YAxisViewBy_Category); ok {
		return x.Category
	}
	return nil
}

func (x *HorizontalBarChart_YAxisViewBy) GetValue() *HorizontalBarChart_YAxisViewBy_YAxisViewByValue {
	if x, ok := x.GetYAxisView().(*HorizontalBarChart_YAxisViewBy_Value); ok {
		return x.Value
	}
	return nil
}

type isHorizontalBarChart_YAxisViewBy_YAxisView interface {
	isHorizontalBarChart_YAxisViewBy_YAxisView()
}

type HorizontalBarChart_YAxisViewBy_Category struct {
	Category *HorizontalBarChart_YAxisViewBy_YAxisViewByCategory `protobuf:"bytes,1,opt,name=category,proto3,oneof"`
}

type HorizontalBarChart_YAxisViewBy_Value struct {
	Value *HorizontalBarChart_YAxisViewBy_YAxisViewByValue `protobuf:"bytes,2,opt,name=value,proto3,oneof"`
}

func (*HorizontalBarChart_YAxisViewBy_Category) isHorizontalBarChart_YAxisViewBy_YAxisView() {}

func (*HorizontalBarChart_YAxisViewBy_Value) isHorizontalBarChart_YAxisViewBy_YAxisView() {}

type HorizontalBarChart_LogsQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LuceneQuery           *LuceneQuery              `protobuf:"bytes,1,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	Aggregation           *LogsAggregation          `protobuf:"bytes,2,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	Filters               []*Filter_LogsFilter      `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	GroupNames            []*wrapperspb.StringValue `protobuf:"bytes,4,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"`
	StackedGroupName      *wrapperspb.StringValue   `protobuf:"bytes,5,opt,name=stacked_group_name,json=stackedGroupName,proto3" json:"stacked_group_name,omitempty"`
	GroupNamesFields      []*ObservationField       `protobuf:"bytes,6,rep,name=group_names_fields,json=groupNamesFields,proto3" json:"group_names_fields,omitempty"`
	StackedGroupNameField *ObservationField         `protobuf:"bytes,7,opt,name=stacked_group_name_field,json=stackedGroupNameField,proto3" json:"stacked_group_name_field,omitempty"`
	TimeFrame             *TimeFrameSelect          `protobuf:"bytes,8,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
}

func (x *HorizontalBarChart_LogsQuery) Reset() {
	*x = HorizontalBarChart_LogsQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HorizontalBarChart_LogsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HorizontalBarChart_LogsQuery) ProtoMessage() {}

func (x *HorizontalBarChart_LogsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HorizontalBarChart_LogsQuery.ProtoReflect.Descriptor instead.
func (*HorizontalBarChart_LogsQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescGZIP(), []int{0, 3}
}

func (x *HorizontalBarChart_LogsQuery) GetLuceneQuery() *LuceneQuery {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *HorizontalBarChart_LogsQuery) GetAggregation() *LogsAggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

func (x *HorizontalBarChart_LogsQuery) GetFilters() []*Filter_LogsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *HorizontalBarChart_LogsQuery) GetGroupNames() []*wrapperspb.StringValue {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

func (x *HorizontalBarChart_LogsQuery) GetStackedGroupName() *wrapperspb.StringValue {
	if x != nil {
		return x.StackedGroupName
	}
	return nil
}

func (x *HorizontalBarChart_LogsQuery) GetGroupNamesFields() []*ObservationField {
	if x != nil {
		return x.GroupNamesFields
	}
	return nil
}

func (x *HorizontalBarChart_LogsQuery) GetStackedGroupNameField() *ObservationField {
	if x != nil {
		return x.StackedGroupNameField
	}
	return nil
}

func (x *HorizontalBarChart_LogsQuery) GetTimeFrame() *TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

type HorizontalBarChart_SpansQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LuceneQuery      *LuceneQuery          `protobuf:"bytes,1,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	Aggregation      *SpansAggregation     `protobuf:"bytes,2,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	Filters          []*Filter_SpansFilter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	GroupNames       []*SpanField          `protobuf:"bytes,4,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"`
	StackedGroupName *SpanField            `protobuf:"bytes,5,opt,name=stacked_group_name,json=stackedGroupName,proto3" json:"stacked_group_name,omitempty"`
	TimeFrame        *TimeFrameSelect      `protobuf:"bytes,6,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
}

func (x *HorizontalBarChart_SpansQuery) Reset() {
	*x = HorizontalBarChart_SpansQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HorizontalBarChart_SpansQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HorizontalBarChart_SpansQuery) ProtoMessage() {}

func (x *HorizontalBarChart_SpansQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HorizontalBarChart_SpansQuery.ProtoReflect.Descriptor instead.
func (*HorizontalBarChart_SpansQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescGZIP(), []int{0, 4}
}

func (x *HorizontalBarChart_SpansQuery) GetLuceneQuery() *LuceneQuery {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *HorizontalBarChart_SpansQuery) GetAggregation() *SpansAggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

func (x *HorizontalBarChart_SpansQuery) GetFilters() []*Filter_SpansFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *HorizontalBarChart_SpansQuery) GetGroupNames() []*SpanField {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

func (x *HorizontalBarChart_SpansQuery) GetStackedGroupName() *SpanField {
	if x != nil {
		return x.StackedGroupName
	}
	return nil
}

func (x *HorizontalBarChart_SpansQuery) GetTimeFrame() *TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

type HorizontalBarChart_MetricsQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromqlQuery      *PromQlQuery              `protobuf:"bytes,1,opt,name=promql_query,json=promqlQuery,proto3" json:"promql_query,omitempty"`
	Filters          []*Filter_MetricsFilter   `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	GroupNames       []*wrapperspb.StringValue `protobuf:"bytes,3,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"`
	StackedGroupName *wrapperspb.StringValue   `protobuf:"bytes,4,opt,name=stacked_group_name,json=stackedGroupName,proto3" json:"stacked_group_name,omitempty"`
	EditorMode       MetricsQueryEditorMode    `protobuf:"varint,5,opt,name=editor_mode,json=editorMode,proto3,enum=com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorMode" json:"editor_mode,omitempty"`
	TimeFrame        *TimeFrameSelect          `protobuf:"bytes,6,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
}

func (x *HorizontalBarChart_MetricsQuery) Reset() {
	*x = HorizontalBarChart_MetricsQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HorizontalBarChart_MetricsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HorizontalBarChart_MetricsQuery) ProtoMessage() {}

func (x *HorizontalBarChart_MetricsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HorizontalBarChart_MetricsQuery.ProtoReflect.Descriptor instead.
func (*HorizontalBarChart_MetricsQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescGZIP(), []int{0, 5}
}

func (x *HorizontalBarChart_MetricsQuery) GetPromqlQuery() *PromQlQuery {
	if x != nil {
		return x.PromqlQuery
	}
	return nil
}

func (x *HorizontalBarChart_MetricsQuery) GetFilters() []*Filter_MetricsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *HorizontalBarChart_MetricsQuery) GetGroupNames() []*wrapperspb.StringValue {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

func (x *HorizontalBarChart_MetricsQuery) GetStackedGroupName() *wrapperspb.StringValue {
	if x != nil {
		return x.StackedGroupName
	}
	return nil
}

func (x *HorizontalBarChart_MetricsQuery) GetEditorMode() MetricsQueryEditorMode {
	if x != nil {
		return x.EditorMode
	}
	return MetricsQueryEditorMode_METRICS_QUERY_EDITOR_MODE_UNSPECIFIED
}

func (x *HorizontalBarChart_MetricsQuery) GetTimeFrame() *TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

type HorizontalBarChart_DataprimeQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataprimeQuery   *DataprimeQuery           `protobuf:"bytes,1,opt,name=dataprime_query,json=dataprimeQuery,proto3" json:"dataprime_query,omitempty"`
	Filters          []*Filter_Source          `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	GroupNames       []*wrapperspb.StringValue `protobuf:"bytes,3,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"`
	StackedGroupName *wrapperspb.StringValue   `protobuf:"bytes,4,opt,name=stacked_group_name,json=stackedGroupName,proto3" json:"stacked_group_name,omitempty"`
	TimeFrame        *TimeFrameSelect          `protobuf:"bytes,5,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
}

func (x *HorizontalBarChart_DataprimeQuery) Reset() {
	*x = HorizontalBarChart_DataprimeQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HorizontalBarChart_DataprimeQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HorizontalBarChart_DataprimeQuery) ProtoMessage() {}

func (x *HorizontalBarChart_DataprimeQuery) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HorizontalBarChart_DataprimeQuery.ProtoReflect.Descriptor instead.
func (*HorizontalBarChart_DataprimeQuery) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescGZIP(), []int{0, 6}
}

func (x *HorizontalBarChart_DataprimeQuery) GetDataprimeQuery() *DataprimeQuery {
	if x != nil {
		return x.DataprimeQuery
	}
	return nil
}

func (x *HorizontalBarChart_DataprimeQuery) GetFilters() []*Filter_Source {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *HorizontalBarChart_DataprimeQuery) GetGroupNames() []*wrapperspb.StringValue {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

func (x *HorizontalBarChart_DataprimeQuery) GetStackedGroupName() *wrapperspb.StringValue {
	if x != nil {
		return x.StackedGroupName
	}
	return nil
}

func (x *HorizontalBarChart_DataprimeQuery) GetTimeFrame() *TimeFrameSelect {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

type HorizontalBarChart_YAxisViewBy_YAxisViewByCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HorizontalBarChart_YAxisViewBy_YAxisViewByCategory) Reset() {
	*x = HorizontalBarChart_YAxisViewBy_YAxisViewByCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HorizontalBarChart_YAxisViewBy_YAxisViewByCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HorizontalBarChart_YAxisViewBy_YAxisViewByCategory) ProtoMessage() {}

func (x *HorizontalBarChart_YAxisViewBy_YAxisViewByCategory) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HorizontalBarChart_YAxisViewBy_YAxisViewByCategory.ProtoReflect.Descriptor instead.
func (*HorizontalBarChart_YAxisViewBy_YAxisViewByCategory) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescGZIP(), []int{0, 2, 0}
}

type HorizontalBarChart_YAxisViewBy_YAxisViewByValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HorizontalBarChart_YAxisViewBy_YAxisViewByValue) Reset() {
	*x = HorizontalBarChart_YAxisViewBy_YAxisViewByValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HorizontalBarChart_YAxisViewBy_YAxisViewByValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HorizontalBarChart_YAxisViewBy_YAxisViewByValue) ProtoMessage() {}

func (x *HorizontalBarChart_YAxisViewBy_YAxisViewByValue) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HorizontalBarChart_YAxisViewBy_YAxisViewByValue.ProtoReflect.Descriptor instead.
func (*HorizontalBarChart_YAxisViewBy_YAxisViewByValue) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescGZIP(), []int{0, 2, 1}
}

var File_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto protoreflect.FileDescriptor

var file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDesc = []byte{
	0x0a, 0x46, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x73, 0x74, 0x2f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2f, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x68, 0x61,
	0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2b, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x77, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x73, 0x1a, 0x30, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x74, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x42, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x74, 0x2f, 0x77, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x73, 0x5f, 0x62, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x47, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x74,
	0x2f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x52, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x74, 0x2f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x40, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x74, 0x2f, 0x77, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x74, 0x2f,
	0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x40, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x74, 0x2f,
	0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73,
	0x74, 0x2f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x37, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa0, 0x22, 0x0a, 0x12, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c,
	0x42, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12, 0x5b, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x77, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c,
	0x42, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x62, 0x61, 0x72,
	0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f,
	0x6d, 0x61, 0x78, 0x42, 0x61, 0x72, 0x73, 0x50, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x12,
	0x4c, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x7a, 0x0a,
	0x10, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x77, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c,
	0x42, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x0a, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x73, 0x74, 0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x73, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74,
	0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x42, 0x79, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73,
	0x42, 0x79, 0x12, 0x4c, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x12, 0x40, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6f, 0x6e, 0x5f, 0x62,
	0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4f, 0x6e, 0x42,
	0x61, 0x72, 0x12, 0x70, 0x0a, 0x0e, 0x79, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74,
	0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e,
	0x74, 0x61, 0x6c, 0x42, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x59, 0x41, 0x78, 0x69,
	0x73, 0x56, 0x69, 0x65, 0x77, 0x42, 0x79, 0x52, 0x0b, 0x79, 0x41, 0x78, 0x69, 0x73, 0x56, 0x69,
	0x65, 0x77, 0x42, 0x79, 0x12, 0x57, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x77, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x3f, 0x0a,
	0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x66,
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x77, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x4d, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x1a, 0xaf, 0x03, 0x0a,
	0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x5f, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x77, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x73, 0x2e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x72,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x00, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x62, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x77, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x73, 0x2e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x42,
	0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x73, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x00, 0x52, 0x05, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x12, 0x68, 0x0a, 0x07, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x73, 0x74, 0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x48, 0x6f, 0x72, 0x69, 0x7a,
	0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x6e, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x77,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61,
	0x6c, 0x42, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72,
	0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x70, 0x72, 0x69, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xa9,
	0x01, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x6d, 0x61, 0x78,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x50, 0x65, 0x72, 0x42, 0x61, 0x72, 0x12, 0x4c, 0x0a, 0x13,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x11, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0xbc, 0x02, 0x0a, 0x0b, 0x59,
	0x41, 0x78, 0x69, 0x73, 0x56, 0x69, 0x65, 0x77, 0x42, 0x79, 0x12, 0x7d, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x73, 0x74, 0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x48, 0x6f, 0x72, 0x69, 0x7a,
	0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x59, 0x41,
	0x78, 0x69, 0x73, 0x56, 0x69, 0x65, 0x77, 0x42, 0x79, 0x2e, 0x59, 0x41, 0x78, 0x69, 0x73, 0x56,
	0x69, 0x65, 0x77, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x74, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x77,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61,
	0x6c, 0x42, 0x61, 0x72, 0x43, 0x68, 0x61, 0x72, 0x74, 0x2e, 0x59, 0x41, 0x78, 0x69, 0x73, 0x56,
	0x69, 0x65, 0x77, 0x42, 0x79, 0x2e, 0x59, 0x41, 0x78, 0x69, 0x73, 0x56, 0x69, 0x65, 0x77, 0x42,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x15, 0x0a, 0x13, 0x59, 0x41, 0x78, 0x69, 0x73, 0x56, 0x69, 0x65, 0x77, 0x42, 0x79, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x1a, 0x12, 0x0a, 0x10, 0x59, 0x41, 0x78, 0x69, 0x73, 0x56,
	0x69, 0x65, 0x77, 0x42, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x79, 0x5f,
	0x61, 0x78, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x1a, 0xda, 0x05, 0x0a, 0x09, 0x4c, 0x6f,
	0x67, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x62, 0x0a, 0x0c, 0x6c, 0x75, 0x63, 0x65, 0x6e,
	0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x61, 0x73, 0x74, 0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0b,
	0x6c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x59, 0x0a, 0x0b, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x10, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x66, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x71, 0x0a, 0x18, 0x73,
	0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x15, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x56,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0xac, 0x04, 0x0a, 0x0a, 0x53, 0x70, 0x61, 0x6e, 0x73,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x62, 0x0a, 0x0c, 0x6c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73,
	0x74, 0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0b, 0x6c, 0x75,
	0x63, 0x65, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x5a, 0x0a, 0x0b, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x73, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x52, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x12,
	0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x10, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a, 0x97, 0x04, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x62, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x71, 0x6c,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x73, 0x74, 0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x51, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x6d, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x53, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73,
	0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x3d, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x4a,
	0x0a, 0x12, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6b, 0x0a, 0x0b, 0x65, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x4a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x65, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x1a,
	0xa2, 0x03, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x5f, 0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x70, 0x72, 0x69, 0x6d, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x4c, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x3d, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x4a, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x73, 0x74, 0x61, 0x63,
	0x6b, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescOnce sync.Once
	file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescData = file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDesc
)

func file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescData)
	})
	return file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDescData
}

var file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_goTypes = []any{
	(*HorizontalBarChart)(nil),                                 // 0: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart
	(*HorizontalBarChart_Query)(nil),                           // 1: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.Query
	(*HorizontalBarChart_StackDefinition)(nil),                 // 2: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.StackDefinition
	(*HorizontalBarChart_YAxisViewBy)(nil),                     // 3: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.YAxisViewBy
	(*HorizontalBarChart_LogsQuery)(nil),                       // 4: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.LogsQuery
	(*HorizontalBarChart_SpansQuery)(nil),                      // 5: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.SpansQuery
	(*HorizontalBarChart_MetricsQuery)(nil),                    // 6: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.MetricsQuery
	(*HorizontalBarChart_DataprimeQuery)(nil),                  // 7: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.DataprimeQuery
	(*HorizontalBarChart_YAxisViewBy_YAxisViewByCategory)(nil), // 8: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.YAxisViewBy.YAxisViewByCategory
	(*HorizontalBarChart_YAxisViewBy_YAxisViewByValue)(nil),    // 9: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.YAxisViewBy.YAxisViewByValue
	(*wrapperspb.Int32Value)(nil),                              // 10: google.protobuf.Int32Value
	(*wrapperspb.StringValue)(nil),                             // 11: google.protobuf.StringValue
	(ScaleType)(0),                                             // 12: com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType
	(*ColorsBy)(nil),                                           // 13: com.coralogixapis.dashboards.v1.ast.widgets.common.ColorsBy
	(Unit)(0),                                                  // 14: com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	(*wrapperspb.BoolValue)(nil),                               // 15: google.protobuf.BoolValue
	(SortByType)(0),                                            // 16: com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType
	(DataModeType)(0),                                          // 17: com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType
	(*LuceneQuery)(nil),                                        // 18: com.coralogixapis.dashboards.v1.ast.widgets.common.LuceneQuery
	(*LogsAggregation)(nil),                                    // 19: com.coralogixapis.dashboards.v1.common.LogsAggregation
	(*Filter_LogsFilter)(nil),                                  // 20: com.coralogixapis.dashboards.v1.ast.Filter.LogsFilter
	(*ObservationField)(nil),                                   // 21: com.coralogixapis.dashboards.v1.common.ObservationField
	(*TimeFrameSelect)(nil),                                    // 22: com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	(*SpansAggregation)(nil),                                   // 23: com.coralogixapis.dashboards.v1.common.SpansAggregation
	(*Filter_SpansFilter)(nil),                                 // 24: com.coralogixapis.dashboards.v1.ast.Filter.SpansFilter
	(*SpanField)(nil),                                          // 25: com.coralogixapis.dashboards.v1.common.SpanField
	(*PromQlQuery)(nil),                                        // 26: com.coralogixapis.dashboards.v1.ast.widgets.common.PromQlQuery
	(*Filter_MetricsFilter)(nil),                               // 27: com.coralogixapis.dashboards.v1.ast.Filter.MetricsFilter
	(MetricsQueryEditorMode)(0),                                // 28: com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorMode
	(*DataprimeQuery)(nil),                                     // 29: com.coralogixapis.dashboards.v1.common.DataprimeQuery
	(*Filter_Source)(nil),                                      // 30: com.coralogixapis.dashboards.v1.ast.Filter.Source
}
var file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_depIdxs = []int32{
	1,  // 0: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.query:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.Query
	10, // 1: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.max_bars_per_chart:type_name -> google.protobuf.Int32Value
	11, // 2: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.group_name_template:type_name -> google.protobuf.StringValue
	2,  // 3: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.stack_definition:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.StackDefinition
	12, // 4: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.scale_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ScaleType
	13, // 5: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.colors_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.ColorsBy
	14, // 6: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.unit:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.Unit
	15, // 7: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.display_on_bar:type_name -> google.protobuf.BoolValue
	3,  // 8: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.y_axis_view_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.YAxisViewBy
	16, // 9: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.sort_by:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.SortByType
	11, // 10: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.color_scheme:type_name -> google.protobuf.StringValue
	17, // 11: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.data_mode_type:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.DataModeType
	11, // 12: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.custom_unit:type_name -> google.protobuf.StringValue
	10, // 13: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.decimal:type_name -> google.protobuf.Int32Value
	4,  // 14: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.Query.logs:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.LogsQuery
	5,  // 15: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.Query.spans:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.SpansQuery
	6,  // 16: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.Query.metrics:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.MetricsQuery
	7,  // 17: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.Query.dataprime:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.DataprimeQuery
	10, // 18: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.StackDefinition.max_slices_per_bar:type_name -> google.protobuf.Int32Value
	11, // 19: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.StackDefinition.stack_name_template:type_name -> google.protobuf.StringValue
	8,  // 20: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.YAxisViewBy.category:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.YAxisViewBy.YAxisViewByCategory
	9,  // 21: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.YAxisViewBy.value:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.YAxisViewBy.YAxisViewByValue
	18, // 22: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.LogsQuery.lucene_query:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.LuceneQuery
	19, // 23: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.LogsQuery.aggregation:type_name -> com.coralogixapis.dashboards.v1.common.LogsAggregation
	20, // 24: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.LogsQuery.filters:type_name -> com.coralogixapis.dashboards.v1.ast.Filter.LogsFilter
	11, // 25: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.LogsQuery.group_names:type_name -> google.protobuf.StringValue
	11, // 26: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.LogsQuery.stacked_group_name:type_name -> google.protobuf.StringValue
	21, // 27: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.LogsQuery.group_names_fields:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	21, // 28: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.LogsQuery.stacked_group_name_field:type_name -> com.coralogixapis.dashboards.v1.common.ObservationField
	22, // 29: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.LogsQuery.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	18, // 30: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.SpansQuery.lucene_query:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.LuceneQuery
	23, // 31: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.SpansQuery.aggregation:type_name -> com.coralogixapis.dashboards.v1.common.SpansAggregation
	24, // 32: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.SpansQuery.filters:type_name -> com.coralogixapis.dashboards.v1.ast.Filter.SpansFilter
	25, // 33: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.SpansQuery.group_names:type_name -> com.coralogixapis.dashboards.v1.common.SpanField
	25, // 34: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.SpansQuery.stacked_group_name:type_name -> com.coralogixapis.dashboards.v1.common.SpanField
	22, // 35: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.SpansQuery.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	26, // 36: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.MetricsQuery.promql_query:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.PromQlQuery
	27, // 37: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.MetricsQuery.filters:type_name -> com.coralogixapis.dashboards.v1.ast.Filter.MetricsFilter
	11, // 38: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.MetricsQuery.group_names:type_name -> google.protobuf.StringValue
	11, // 39: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.MetricsQuery.stacked_group_name:type_name -> google.protobuf.StringValue
	28, // 40: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.MetricsQuery.editor_mode:type_name -> com.coralogixapis.dashboards.v1.ast.widgets.common.MetricsQueryEditorMode
	22, // 41: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.MetricsQuery.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	29, // 42: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.DataprimeQuery.dataprime_query:type_name -> com.coralogixapis.dashboards.v1.common.DataprimeQuery
	30, // 43: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.DataprimeQuery.filters:type_name -> com.coralogixapis.dashboards.v1.ast.Filter.Source
	11, // 44: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.DataprimeQuery.group_names:type_name -> google.protobuf.StringValue
	11, // 45: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.DataprimeQuery.stacked_group_name:type_name -> google.protobuf.StringValue
	22, // 46: com.coralogixapis.dashboards.v1.ast.widgets.HorizontalBarChart.DataprimeQuery.time_frame:type_name -> com.coralogixapis.dashboards.v1.common.TimeFrameSelect
	47, // [47:47] is the sub-list for method output_type
	47, // [47:47] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_init() }
func file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_init() {
	if File_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto != nil {
		return
	}
	file_com_coralogixapis_dashboards_v1_ast_filter_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_colors_by_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_data_mode_type_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_metrics_query_editor_mode_proto_init()
	//file_com_coralogixapis_dashboards_v1_ast_widgets_common_queries_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_scale_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_sort_by_proto_init()
	file_com_coralogixapis_dashboards_v1_ast_widgets_common_units_proto_init()
	file_com_coralogixapis_dashboards_v1_common_logs_aggregation_proto_init()
	file_com_coralogixapis_dashboards_v1_common_observation_field_proto_init()
	file_com_coralogixapis_dashboards_v1_common_query_proto_init()
	file_com_coralogixapis_dashboards_v1_common_span_field_proto_init()
	file_com_coralogixapis_dashboards_v1_common_spans_aggregation_proto_init()
	file_com_coralogixapis_dashboards_v1_common_time_frame_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HorizontalBarChart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*HorizontalBarChart_Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*HorizontalBarChart_StackDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*HorizontalBarChart_YAxisViewBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*HorizontalBarChart_LogsQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*HorizontalBarChart_SpansQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*HorizontalBarChart_MetricsQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*HorizontalBarChart_DataprimeQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*HorizontalBarChart_YAxisViewBy_YAxisViewByCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*HorizontalBarChart_YAxisViewBy_YAxisViewByValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[1].OneofWrappers = []any{
		(*HorizontalBarChart_Query_Logs)(nil),
		(*HorizontalBarChart_Query_Spans)(nil),
		(*HorizontalBarChart_Query_Metrics)(nil),
		(*HorizontalBarChart_Query_Dataprime)(nil),
	}
	file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes[3].OneofWrappers = []any{
		(*HorizontalBarChart_YAxisViewBy_Category)(nil),
		(*HorizontalBarChart_YAxisViewBy_Value)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_depIdxs,
		MessageInfos:      file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto = out.File
	file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_rawDesc = nil
	file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_goTypes = nil
	file_com_coralogixapis_dashboards_v1_ast_widgets_horizontal_bar_chart_proto_depIdxs = nil
}
