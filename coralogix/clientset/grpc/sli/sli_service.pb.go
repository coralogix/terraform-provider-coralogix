// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: com/coralogix/catalog/v1/sli_service.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSlisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
}

func (x *GetSlisRequest) Reset() {
	*x = GetSlisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlisRequest) ProtoMessage() {}

func (x *GetSlisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlisRequest.ProtoReflect.Descriptor instead.
func (*GetSlisRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetSlisRequest) GetServiceName() *wrapperspb.StringValue {
	if x != nil {
		return x.ServiceName
	}
	return nil
}

type GetSlisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slis []*Sli `protobuf:"bytes,1,rep,name=slis,proto3" json:"slis,omitempty"`
}

func (x *GetSlisResponse) Reset() {
	*x = GetSlisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlisResponse) ProtoMessage() {}

func (x *GetSlisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlisResponse.ProtoReflect.Descriptor instead.
func (*GetSlisResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetSlisResponse) GetSlis() []*Sli {
	if x != nil {
		return x.Slis
	}
	return nil
}

type CreateSliRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sli *Sli `protobuf:"bytes,1,opt,name=sli,proto3" json:"sli,omitempty"`
}

func (x *CreateSliRequest) Reset() {
	*x = CreateSliRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSliRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSliRequest) ProtoMessage() {}

func (x *CreateSliRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSliRequest.ProtoReflect.Descriptor instead.
func (*CreateSliRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSliRequest) GetSli() *Sli {
	if x != nil {
		return x.Sli
	}
	return nil
}

type CreateSliResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sli *Sli `protobuf:"bytes,1,opt,name=sli,proto3" json:"sli,omitempty"`
}

func (x *CreateSliResponse) Reset() {
	*x = CreateSliResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSliResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSliResponse) ProtoMessage() {}

func (x *CreateSliResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSliResponse.ProtoReflect.Descriptor instead.
func (*CreateSliResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSliResponse) GetSli() *Sli {
	if x != nil {
		return x.Sli
	}
	return nil
}

type CreateSlisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slis []*Sli `protobuf:"bytes,1,rep,name=slis,proto3" json:"slis,omitempty"`
}

func (x *CreateSlisRequest) Reset() {
	*x = CreateSlisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSlisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSlisRequest) ProtoMessage() {}

func (x *CreateSlisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSlisRequest.ProtoReflect.Descriptor instead.
func (*CreateSlisRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSlisRequest) GetSlis() []*Sli {
	if x != nil {
		return x.Slis
	}
	return nil
}

type CreateSlisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slis []*Sli `protobuf:"bytes,1,rep,name=slis,proto3" json:"slis,omitempty"`
}

func (x *CreateSlisResponse) Reset() {
	*x = CreateSlisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSlisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSlisResponse) ProtoMessage() {}

func (x *CreateSlisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSlisResponse.ProtoReflect.Descriptor instead.
func (*CreateSlisResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSlisResponse) GetSlis() []*Sli {
	if x != nil {
		return x.Slis
	}
	return nil
}

type UpdateSliRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sli *Sli `protobuf:"bytes,1,opt,name=sli,proto3" json:"sli,omitempty"`
}

func (x *UpdateSliRequest) Reset() {
	*x = UpdateSliRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSliRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSliRequest) ProtoMessage() {}

func (x *UpdateSliRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSliRequest.ProtoReflect.Descriptor instead.
func (*UpdateSliRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateSliRequest) GetSli() *Sli {
	if x != nil {
		return x.Sli
	}
	return nil
}

type UpdateSliResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sli *Sli `protobuf:"bytes,1,opt,name=sli,proto3" json:"sli,omitempty"`
}

func (x *UpdateSliResponse) Reset() {
	*x = UpdateSliResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSliResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSliResponse) ProtoMessage() {}

func (x *UpdateSliResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSliResponse.ProtoReflect.Descriptor instead.
func (*UpdateSliResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSliResponse) GetSli() *Sli {
	if x != nil {
		return x.Sli
	}
	return nil
}

type UpdateSlisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slis []*Sli `protobuf:"bytes,1,rep,name=slis,proto3" json:"slis,omitempty"`
}

func (x *UpdateSlisRequest) Reset() {
	*x = UpdateSlisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSlisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSlisRequest) ProtoMessage() {}

func (x *UpdateSlisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSlisRequest.ProtoReflect.Descriptor instead.
func (*UpdateSlisRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateSlisRequest) GetSlis() []*Sli {
	if x != nil {
		return x.Slis
	}
	return nil
}

type UpdateSlisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slis []*Sli `protobuf:"bytes,1,rep,name=slis,proto3" json:"slis,omitempty"`
}

func (x *UpdateSlisResponse) Reset() {
	*x = UpdateSlisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSlisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSlisResponse) ProtoMessage() {}

func (x *UpdateSlisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSlisResponse.ProtoReflect.Descriptor instead.
func (*UpdateSlisResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateSlisResponse) GetSlis() []*Sli {
	if x != nil {
		return x.Slis
	}
	return nil
}

type DeleteSliRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SliId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=sli_id,json=sliId,proto3" json:"sli_id,omitempty"`
}

func (x *DeleteSliRequest) Reset() {
	*x = DeleteSliRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSliRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSliRequest) ProtoMessage() {}

func (x *DeleteSliRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSliRequest.ProtoReflect.Descriptor instead.
func (*DeleteSliRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteSliRequest) GetSliId() *wrapperspb.StringValue {
	if x != nil {
		return x.SliId
	}
	return nil
}

type DeleteSliResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SliId *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=sli_id,json=sliId,proto3" json:"sli_id,omitempty"`
}

func (x *DeleteSliResponse) Reset() {
	*x = DeleteSliResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSliResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSliResponse) ProtoMessage() {}

func (x *DeleteSliResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSliResponse.ProtoReflect.Descriptor instead.
func (*DeleteSliResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteSliResponse) GetSliId() *wrapperspb.StringValue {
	if x != nil {
		return x.SliId
	}
	return nil
}

type GetSliStatusHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SliId     *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=sli_id,json=sliId,proto3" json:"sli_id,omitempty"`
	TimeRange *TimeRange              `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
}

func (x *GetSliStatusHistoryRequest) Reset() {
	*x = GetSliStatusHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSliStatusHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSliStatusHistoryRequest) ProtoMessage() {}

func (x *GetSliStatusHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSliStatusHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetSliStatusHistoryRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetSliStatusHistoryRequest) GetSliId() *wrapperspb.StringValue {
	if x != nil {
		return x.SliId
	}
	return nil
}

func (x *GetSliStatusHistoryRequest) GetTimeRange() *TimeRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

type GetSliStatusHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SliStatusHistory []*SliStatusHistory `protobuf:"bytes,1,rep,name=sli_status_history,json=sliStatusHistory,proto3" json:"sli_status_history,omitempty"`
}

func (x *GetSliStatusHistoryResponse) Reset() {
	*x = GetSliStatusHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSliStatusHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSliStatusHistoryResponse) ProtoMessage() {}

func (x *GetSliStatusHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSliStatusHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetSliStatusHistoryResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetSliStatusHistoryResponse) GetSliStatusHistory() []*SliStatusHistory {
	if x != nil {
		return x.SliStatusHistory
	}
	return nil
}

var File_com_coralogix_catalog_v1_sli_service_proto protoreflect.FileDescriptor

var file_com_coralogix_catalog_v1_sli_service_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6c, 0x69, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x28, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x25, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x53, 0x6c, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x44,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x6c, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x52, 0x04,
	0x73, 0x6c, 0x69, 0x73, 0x22, 0x43, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x03, 0x73, 0x6c, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6c, 0x69, 0x52, 0x03, 0x73, 0x6c, 0x69, 0x22, 0x44, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x03, 0x73, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x52, 0x03, 0x73, 0x6c, 0x69, 0x22,
	0x46, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x6c, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c,
	0x69, 0x52, 0x04, 0x73, 0x6c, 0x69, 0x73, 0x22, 0x47, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6c, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x04, 0x73, 0x6c, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x52, 0x04, 0x73, 0x6c, 0x69, 0x73,
	0x22, 0x43, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x03, 0x73, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69,
	0x52, 0x03, 0x73, 0x6c, 0x69, 0x22, 0x44, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x6c, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x73, 0x6c,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x52, 0x03, 0x73, 0x6c, 0x69, 0x22, 0x46, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x04, 0x73, 0x6c, 0x69, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x52, 0x04, 0x73,
	0x6c, 0x69, 0x73, 0x22, 0x47, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x73, 0x6c, 0x69,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x52, 0x04, 0x73, 0x6c, 0x69, 0x73, 0x22, 0x47, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x06, 0x73, 0x6c, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x73, 0x6c, 0x69, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x6c, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x6c,
	0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x73, 0x6c, 0x69, 0x49, 0x64, 0x22,
	0x95, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33,
	0x0a, 0x06, 0x73, 0x6c, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x73, 0x6c,
	0x69, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x6c,
	0x69, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x12, 0x73, 0x6c, 0x69, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c,
	0x69, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x10,
	0x73, 0x6c, 0x69, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x32, 0xff, 0x06, 0x0a, 0x0a, 0x53, 0x6c, 0x69, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x6e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x73, 0x12, 0x28, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x0e, 0xe2, 0xb8, 0x02, 0x0a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x20, 0x53, 0x6c, 0x69, 0x73, 0x12,
	0x76, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x12, 0x2a, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c,
	0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0xe2, 0xb8, 0x02, 0x0c, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x20, 0x53, 0x6c, 0x69, 0x12, 0x7a, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6c, 0x69, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x11, 0xe2, 0xb8, 0x02, 0x0d, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x53,
	0x6c, 0x69, 0x73, 0x12, 0x76, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69,
	0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x6c, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74,
	0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c,
	0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0xe2, 0xb8, 0x02, 0x0c, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x53, 0x6c, 0x69, 0x12, 0x7a, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x73, 0x12, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0xe2, 0xb8, 0x02, 0x0d, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x20, 0x53, 0x6c, 0x69, 0x73, 0x12, 0x76, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x6c, 0x69, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x6c, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0xe2,
	0xb8, 0x02, 0x0c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x53, 0x6c, 0x69, 0x12,
	0xa0, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x63, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x69, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0xe2, 0xb8, 0x02, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x20,
	0x53, 0x6c, 0x69, 0x20, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x20, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_catalog_v1_sli_service_proto_rawDescOnce sync.Once
	file_com_coralogix_catalog_v1_sli_service_proto_rawDescData = file_com_coralogix_catalog_v1_sli_service_proto_rawDesc
)

func file_com_coralogix_catalog_v1_sli_service_proto_rawDescGZIP() []byte {
	file_com_coralogix_catalog_v1_sli_service_proto_rawDescOnce.Do(func() {
		file_com_coralogix_catalog_v1_sli_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_catalog_v1_sli_service_proto_rawDescData)
	})
	return file_com_coralogix_catalog_v1_sli_service_proto_rawDescData
}

var file_com_coralogix_catalog_v1_sli_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_com_coralogix_catalog_v1_sli_service_proto_goTypes = []interface{}{
	(*GetSlisRequest)(nil),              // 0: com.coralogix.catalog.v1.GetSlisRequest
	(*GetSlisResponse)(nil),             // 1: com.coralogix.catalog.v1.GetSlisResponse
	(*CreateSliRequest)(nil),            // 2: com.coralogix.catalog.v1.CreateSliRequest
	(*CreateSliResponse)(nil),           // 3: com.coralogix.catalog.v1.CreateSliResponse
	(*CreateSlisRequest)(nil),           // 4: com.coralogix.catalog.v1.CreateSlisRequest
	(*CreateSlisResponse)(nil),          // 5: com.coralogix.catalog.v1.CreateSlisResponse
	(*UpdateSliRequest)(nil),            // 6: com.coralogix.catalog.v1.UpdateSliRequest
	(*UpdateSliResponse)(nil),           // 7: com.coralogix.catalog.v1.UpdateSliResponse
	(*UpdateSlisRequest)(nil),           // 8: com.coralogix.catalog.v1.UpdateSlisRequest
	(*UpdateSlisResponse)(nil),          // 9: com.coralogix.catalog.v1.UpdateSlisResponse
	(*DeleteSliRequest)(nil),            // 10: com.coralogix.catalog.v1.DeleteSliRequest
	(*DeleteSliResponse)(nil),           // 11: com.coralogix.catalog.v1.DeleteSliResponse
	(*GetSliStatusHistoryRequest)(nil),  // 12: com.coralogix.catalog.v1.GetSliStatusHistoryRequest
	(*GetSliStatusHistoryResponse)(nil), // 13: com.coralogix.catalog.v1.GetSliStatusHistoryResponse
	(*wrapperspb.StringValue)(nil),      // 14: google.protobuf.StringValue
	(*Sli)(nil),                         // 15: com.coralogix.catalog.v1.Sli
	(*TimeRange)(nil),                   // 16: com.coralogix.catalog.v1.TimeRange
	(*SliStatusHistory)(nil),            // 17: com.coralogix.catalog.v1.SliStatusHistory
}
var file_com_coralogix_catalog_v1_sli_service_proto_depIdxs = []int32{
	14, // 0: com.coralogix.catalog.v1.GetSlisRequest.service_name:type_name -> google.protobuf.StringValue
	15, // 1: com.coralogix.catalog.v1.GetSlisResponse.slis:type_name -> com.coralogix.catalog.v1.Sli
	15, // 2: com.coralogix.catalog.v1.CreateSliRequest.sli:type_name -> com.coralogix.catalog.v1.Sli
	15, // 3: com.coralogix.catalog.v1.CreateSliResponse.sli:type_name -> com.coralogix.catalog.v1.Sli
	15, // 4: com.coralogix.catalog.v1.CreateSlisRequest.slis:type_name -> com.coralogix.catalog.v1.Sli
	15, // 5: com.coralogix.catalog.v1.CreateSlisResponse.slis:type_name -> com.coralogix.catalog.v1.Sli
	15, // 6: com.coralogix.catalog.v1.UpdateSliRequest.sli:type_name -> com.coralogix.catalog.v1.Sli
	15, // 7: com.coralogix.catalog.v1.UpdateSliResponse.sli:type_name -> com.coralogix.catalog.v1.Sli
	15, // 8: com.coralogix.catalog.v1.UpdateSlisRequest.slis:type_name -> com.coralogix.catalog.v1.Sli
	15, // 9: com.coralogix.catalog.v1.UpdateSlisResponse.slis:type_name -> com.coralogix.catalog.v1.Sli
	14, // 10: com.coralogix.catalog.v1.DeleteSliRequest.sli_id:type_name -> google.protobuf.StringValue
	14, // 11: com.coralogix.catalog.v1.DeleteSliResponse.sli_id:type_name -> google.protobuf.StringValue
	14, // 12: com.coralogix.catalog.v1.GetSliStatusHistoryRequest.sli_id:type_name -> google.protobuf.StringValue
	16, // 13: com.coralogix.catalog.v1.GetSliStatusHistoryRequest.time_range:type_name -> com.coralogix.catalog.v1.TimeRange
	17, // 14: com.coralogix.catalog.v1.GetSliStatusHistoryResponse.sli_status_history:type_name -> com.coralogix.catalog.v1.SliStatusHistory
	0,  // 15: com.coralogix.catalog.v1.SliService.GetSlis:input_type -> com.coralogix.catalog.v1.GetSlisRequest
	2,  // 16: com.coralogix.catalog.v1.SliService.CreateSli:input_type -> com.coralogix.catalog.v1.CreateSliRequest
	4,  // 17: com.coralogix.catalog.v1.SliService.CreateSlis:input_type -> com.coralogix.catalog.v1.CreateSlisRequest
	6,  // 18: com.coralogix.catalog.v1.SliService.UpdateSli:input_type -> com.coralogix.catalog.v1.UpdateSliRequest
	8,  // 19: com.coralogix.catalog.v1.SliService.UpdateSlis:input_type -> com.coralogix.catalog.v1.UpdateSlisRequest
	10, // 20: com.coralogix.catalog.v1.SliService.DeleteSli:input_type -> com.coralogix.catalog.v1.DeleteSliRequest
	12, // 21: com.coralogix.catalog.v1.SliService.GetSliStatusHistory:input_type -> com.coralogix.catalog.v1.GetSliStatusHistoryRequest
	1,  // 22: com.coralogix.catalog.v1.SliService.GetSlis:output_type -> com.coralogix.catalog.v1.GetSlisResponse
	3,  // 23: com.coralogix.catalog.v1.SliService.CreateSli:output_type -> com.coralogix.catalog.v1.CreateSliResponse
	5,  // 24: com.coralogix.catalog.v1.SliService.CreateSlis:output_type -> com.coralogix.catalog.v1.CreateSlisResponse
	7,  // 25: com.coralogix.catalog.v1.SliService.UpdateSli:output_type -> com.coralogix.catalog.v1.UpdateSliResponse
	9,  // 26: com.coralogix.catalog.v1.SliService.UpdateSlis:output_type -> com.coralogix.catalog.v1.UpdateSlisResponse
	11, // 27: com.coralogix.catalog.v1.SliService.DeleteSli:output_type -> com.coralogix.catalog.v1.DeleteSliResponse
	13, // 28: com.coralogix.catalog.v1.SliService.GetSliStatusHistory:output_type -> com.coralogix.catalog.v1.GetSliStatusHistoryResponse
	22, // [22:29] is the sub-list for method output_type
	15, // [15:22] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_com_coralogix_catalog_v1_sli_service_proto_init() }
func file_com_coralogix_catalog_v1_sli_service_proto_init() {
	if File_com_coralogix_catalog_v1_sli_service_proto != nil {
		return
	}
	file_com_coralogix_catalog_v1_audit_log_proto_init()
	file_com_coralogix_catalog_v1_common_proto_init()
	file_com_coralogix_catalog_v1_sli_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSliRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSliResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSlisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSlisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSliRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSliResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSlisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSlisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSliRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSliResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSliStatusHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_catalog_v1_sli_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSliStatusHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_catalog_v1_sli_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogix_catalog_v1_sli_service_proto_goTypes,
		DependencyIndexes: file_com_coralogix_catalog_v1_sli_service_proto_depIdxs,
		MessageInfos:      file_com_coralogix_catalog_v1_sli_service_proto_msgTypes,
	}.Build()
	File_com_coralogix_catalog_v1_sli_service_proto = out.File
	file_com_coralogix_catalog_v1_sli_service_proto_rawDesc = nil
	file_com_coralogix_catalog_v1_sli_service_proto_goTypes = nil
	file_com_coralogix_catalog_v1_sli_service_proto_depIdxs = nil
}
