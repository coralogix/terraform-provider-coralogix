// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: com/coralogixapis/dashboards/v1/services/logs_data_source_service.proto

package __

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchLogsTimeSeriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFrame    *TimeFrame         `protobuf:"bytes,1,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	Interval     *durationpb.Duration      `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Filters      []*Filter_LogsFilter  `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	GroupBy      []*wrapperspb.StringValue `protobuf:"bytes,4,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Aggregations []*LogsAggregation `protobuf:"bytes,5,rep,name=aggregations,proto3" json:"aggregations,omitempty"`
	Limit        *wrapperspb.Int32Value    `protobuf:"bytes,6,opt,name=limit,proto3" json:"limit,omitempty"`
	LuceneQuery  *wrapperspb.StringValue   `protobuf:"bytes,7,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
}

func (x *SearchLogsTimeSeriesRequest) Reset() {
	*x = SearchLogsTimeSeriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsTimeSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsTimeSeriesRequest) ProtoMessage() {}

func (x *SearchLogsTimeSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsTimeSeriesRequest.ProtoReflect.Descriptor instead.
func (*SearchLogsTimeSeriesRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{0}
}

func (x *SearchLogsTimeSeriesRequest) GetTimeFrame() *TimeFrame {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

func (x *SearchLogsTimeSeriesRequest) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *SearchLogsTimeSeriesRequest) GetFilters() []*Filter_LogsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SearchLogsTimeSeriesRequest) GetGroupBy() []*wrapperspb.StringValue {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *SearchLogsTimeSeriesRequest) GetAggregations() []*LogsAggregation {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

func (x *SearchLogsTimeSeriesRequest) GetLimit() *wrapperspb.Int32Value {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *SearchLogsTimeSeriesRequest) GetLuceneQuery() *wrapperspb.StringValue {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

type SearchLogsTimeSeriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeSeries []*TimeSeries   `protobuf:"bytes,1,rep,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
	Total      *wrapperspb.Int64Value `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchLogsTimeSeriesResponse) Reset() {
	*x = SearchLogsTimeSeriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsTimeSeriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsTimeSeriesResponse) ProtoMessage() {}

func (x *SearchLogsTimeSeriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsTimeSeriesResponse.ProtoReflect.Descriptor instead.
func (*SearchLogsTimeSeriesResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{1}
}

func (x *SearchLogsTimeSeriesResponse) GetTimeSeries() []*TimeSeries {
	if x != nil {
		return x.TimeSeries
	}
	return nil
}

func (x *SearchLogsTimeSeriesResponse) GetTotal() *wrapperspb.Int64Value {
	if x != nil {
		return x.Total
	}
	return nil
}

type SearchLogsEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFrame   *TimeFrame                   `protobuf:"bytes,1,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	Filters     []*Filter_LogsFilter            `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	LuceneQuery *wrapperspb.StringValue             `protobuf:"bytes,3,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	OrderBy     []*OrderingField             `protobuf:"bytes,5,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Pagination  *SearchLogsEventsRequest_Pagination `protobuf:"bytes,6,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchLogsEventsRequest) Reset() {
	*x = SearchLogsEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsEventsRequest) ProtoMessage() {}

func (x *SearchLogsEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsEventsRequest.ProtoReflect.Descriptor instead.
func (*SearchLogsEventsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{2}
}

func (x *SearchLogsEventsRequest) GetTimeFrame() *TimeFrame {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

func (x *SearchLogsEventsRequest) GetFilters() []*Filter_LogsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SearchLogsEventsRequest) GetLuceneQuery() *wrapperspb.StringValue {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *SearchLogsEventsRequest) GetOrderBy() []*OrderingField {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *SearchLogsEventsRequest) GetPagination() *SearchLogsEventsRequest_Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchLogsEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  *wrapperspb.Int64Value `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	Events []*LogsEvent           `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *SearchLogsEventsResponse) Reset() {
	*x = SearchLogsEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsEventsResponse) ProtoMessage() {}

func (x *SearchLogsEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsEventsResponse.ProtoReflect.Descriptor instead.
func (*SearchLogsEventsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{3}
}

func (x *SearchLogsEventsResponse) GetTotal() *wrapperspb.Int64Value {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *SearchLogsEventsResponse) GetEvents() []*LogsEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type SearchLogsEventGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFrame    *TimeFrame                       `protobuf:"bytes,1,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	Filters      []*Filter_LogsFilter                `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	LuceneQuery  *wrapperspb.StringValue                 `protobuf:"bytes,3,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	GroupBy      []*wrapperspb.StringValue               `protobuf:"bytes,4,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Aggregations []*LogsAggregation               `protobuf:"bytes,5,rep,name=aggregations,proto3" json:"aggregations,omitempty"`
	OrderBy      []*SearchLogsEventGroupsRequest_OrderBy `protobuf:"bytes,6,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	Pagination   *Pagination                      `protobuf:"bytes,7,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchLogsEventGroupsRequest) Reset() {
	*x = SearchLogsEventGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsEventGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsEventGroupsRequest) ProtoMessage() {}

func (x *SearchLogsEventGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsEventGroupsRequest.ProtoReflect.Descriptor instead.
func (*SearchLogsEventGroupsRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{4}
}

func (x *SearchLogsEventGroupsRequest) GetTimeFrame() *TimeFrame {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

func (x *SearchLogsEventGroupsRequest) GetFilters() []*Filter_LogsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SearchLogsEventGroupsRequest) GetLuceneQuery() *wrapperspb.StringValue {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *SearchLogsEventGroupsRequest) GetGroupBy() []*wrapperspb.StringValue {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *SearchLogsEventGroupsRequest) GetAggregations() []*LogsAggregation {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

func (x *SearchLogsEventGroupsRequest) GetOrderBy() []*SearchLogsEventGroupsRequest_OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *SearchLogsEventGroupsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SearchLogsEventGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*MultiGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *SearchLogsEventGroupsResponse) Reset() {
	*x = SearchLogsEventGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsEventGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsEventGroupsResponse) ProtoMessage() {}

func (x *SearchLogsEventGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsEventGroupsResponse.ProtoReflect.Descriptor instead.
func (*SearchLogsEventGroupsResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{5}
}

func (x *SearchLogsEventGroupsResponse) GetGroups() []*MultiGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type SearchGroupedLogsSeriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFrame     *TimeFrame                       `protobuf:"bytes,1,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	Filters       []*Filter_LogsFilter                `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	GroupByFields []*wrapperspb.StringValue               `protobuf:"bytes,3,rep,name=group_by_fields,json=groupByFields,proto3" json:"group_by_fields,omitempty"`
	Aggregation   *LogsAggregation                 `protobuf:"bytes,4,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	LuceneQuery   *wrapperspb.StringValue                 `protobuf:"bytes,5,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	Limits        []*SearchGroupedLogsSeriesRequest_Limit `protobuf:"bytes,6,rep,name=limits,proto3" json:"limits,omitempty"`
}

func (x *SearchGroupedLogsSeriesRequest) Reset() {
	*x = SearchGroupedLogsSeriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGroupedLogsSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGroupedLogsSeriesRequest) ProtoMessage() {}

func (x *SearchGroupedLogsSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGroupedLogsSeriesRequest.ProtoReflect.Descriptor instead.
func (*SearchGroupedLogsSeriesRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{6}
}

func (x *SearchGroupedLogsSeriesRequest) GetTimeFrame() *TimeFrame {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

func (x *SearchGroupedLogsSeriesRequest) GetFilters() []*Filter_LogsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SearchGroupedLogsSeriesRequest) GetGroupByFields() []*wrapperspb.StringValue {
	if x != nil {
		return x.GroupByFields
	}
	return nil
}

func (x *SearchGroupedLogsSeriesRequest) GetAggregation() *LogsAggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

func (x *SearchGroupedLogsSeriesRequest) GetLuceneQuery() *wrapperspb.StringValue {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *SearchGroupedLogsSeriesRequest) GetLimits() []*SearchGroupedLogsSeriesRequest_Limit {
	if x != nil {
		return x.Limits
	}
	return nil
}

type SearchGroupedLogsSeriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Series []*GroupedSeries `protobuf:"bytes,1,rep,name=series,proto3" json:"series,omitempty"`
}

func (x *SearchGroupedLogsSeriesResponse) Reset() {
	*x = SearchGroupedLogsSeriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGroupedLogsSeriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGroupedLogsSeriesResponse) ProtoMessage() {}

func (x *SearchGroupedLogsSeriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGroupedLogsSeriesResponse.ProtoReflect.Descriptor instead.
func (*SearchGroupedLogsSeriesResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{7}
}

func (x *SearchGroupedLogsSeriesResponse) GetSeries() []*GroupedSeries {
	if x != nil {
		return x.Series
	}
	return nil
}

type SearchLogsGroupedTimeSeriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFrame   *TimeFrame                             `protobuf:"bytes,1,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	Interval    *durationpb.Duration                          `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	Filters     []*Filter_LogsFilter                      `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	Aggregation *LogsAggregation                       `protobuf:"bytes,4,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	LuceneQuery *wrapperspb.StringValue                       `protobuf:"bytes,5,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	GroupBy     []*SearchLogsGroupedTimeSeriesRequest_GroupBy `protobuf:"bytes,6,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
}

func (x *SearchLogsGroupedTimeSeriesRequest) Reset() {
	*x = SearchLogsGroupedTimeSeriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsGroupedTimeSeriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsGroupedTimeSeriesRequest) ProtoMessage() {}

func (x *SearchLogsGroupedTimeSeriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsGroupedTimeSeriesRequest.ProtoReflect.Descriptor instead.
func (*SearchLogsGroupedTimeSeriesRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{8}
}

func (x *SearchLogsGroupedTimeSeriesRequest) GetTimeFrame() *TimeFrame {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

func (x *SearchLogsGroupedTimeSeriesRequest) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *SearchLogsGroupedTimeSeriesRequest) GetFilters() []*Filter_LogsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SearchLogsGroupedTimeSeriesRequest) GetAggregation() *LogsAggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

func (x *SearchLogsGroupedTimeSeriesRequest) GetLuceneQuery() *wrapperspb.StringValue {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *SearchLogsGroupedTimeSeriesRequest) GetGroupBy() []*SearchLogsGroupedTimeSeriesRequest_GroupBy {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

type SearchLogsGroupedTimeSeriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Series []*GroupedSeries `protobuf:"bytes,1,rep,name=series,proto3" json:"series,omitempty"`
}

func (x *SearchLogsGroupedTimeSeriesResponse) Reset() {
	*x = SearchLogsGroupedTimeSeriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsGroupedTimeSeriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsGroupedTimeSeriesResponse) ProtoMessage() {}

func (x *SearchLogsGroupedTimeSeriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsGroupedTimeSeriesResponse.ProtoReflect.Descriptor instead.
func (*SearchLogsGroupedTimeSeriesResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{9}
}

func (x *SearchLogsGroupedTimeSeriesResponse) GetSeries() []*GroupedSeries {
	if x != nil {
		return x.Series
	}
	return nil
}

type LogsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId        *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	Timestamp    *timestamppb.Timestamp  `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Text         *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Json         *structpb.Struct `protobuf:"bytes,5,opt,name=json,proto3" json:"json,omitempty"`
	LogsMetadata *LogsMetadata    `protobuf:"bytes,6,opt,name=logs_metadata,json=logsMetadata,proto3" json:"logs_metadata,omitempty"`
}

func (x *LogsEvent) Reset() {
	*x = LogsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsEvent) ProtoMessage() {}

func (x *LogsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsEvent.ProtoReflect.Descriptor instead.
func (*LogsEvent) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{10}
}

func (x *LogsEvent) GetLogId() *wrapperspb.StringValue {
	if x != nil {
		return x.LogId
	}
	return nil
}

func (x *LogsEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LogsEvent) GetText() *wrapperspb.StringValue {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *LogsEvent) GetJson() *structpb.Struct {
	if x != nil {
		return x.Json
	}
	return nil
}

func (x *LogsEvent) GetLogsMetadata() *LogsMetadata {
	if x != nil {
		return x.LogsMetadata
	}
	return nil
}

type LogsMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	SubsystemName   *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=subsystem_name,json=subsystemName,proto3" json:"subsystem_name,omitempty"`
	Severity        LogSeverityLevel `protobuf:"varint,3,opt,name=severity,proto3,enum=com.coralogixapis.dashboards.v1.LogSeverityLevel" json:"severity,omitempty"`
}

func (x *LogsMetadata) Reset() {
	*x = LogsMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsMetadata) ProtoMessage() {}

func (x *LogsMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsMetadata.ProtoReflect.Descriptor instead.
func (*LogsMetadata) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{11}
}

func (x *LogsMetadata) GetApplicationName() *wrapperspb.StringValue {
	if x != nil {
		return x.ApplicationName
	}
	return nil
}

func (x *LogsMetadata) GetSubsystemName() *wrapperspb.StringValue {
	if x != nil {
		return x.SubsystemName
	}
	return nil
}

func (x *LogsMetadata) GetSeverity() LogSeverityLevel {
	if x != nil {
		return x.Severity
	}
	return LogSeverityLevel(0)
}

type SearchLogsTimeValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFrame   *TimeFrame        `protobuf:"bytes,1,opt,name=time_frame,json=timeFrame,proto3" json:"time_frame,omitempty"`
	Filters     []*Filter_LogsFilter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	LuceneQuery *wrapperspb.StringValue  `protobuf:"bytes,3,opt,name=lucene_query,json=luceneQuery,proto3" json:"lucene_query,omitempty"`
	Aggregation *LogsAggregation  `protobuf:"bytes,4,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
}

func (x *SearchLogsTimeValueRequest) Reset() {
	*x = SearchLogsTimeValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsTimeValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsTimeValueRequest) ProtoMessage() {}

func (x *SearchLogsTimeValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsTimeValueRequest.ProtoReflect.Descriptor instead.
func (*SearchLogsTimeValueRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{12}
}

func (x *SearchLogsTimeValueRequest) GetTimeFrame() *TimeFrame {
	if x != nil {
		return x.TimeFrame
	}
	return nil
}

func (x *SearchLogsTimeValueRequest) GetFilters() []*Filter_LogsFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *SearchLogsTimeValueRequest) GetLuceneQuery() *wrapperspb.StringValue {
	if x != nil {
		return x.LuceneQuery
	}
	return nil
}

func (x *SearchLogsTimeValueRequest) GetAggregation() *LogsAggregation {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

type SearchLogsTimeValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *wrapperspb.DoubleValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SearchLogsTimeValueResponse) Reset() {
	*x = SearchLogsTimeValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsTimeValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsTimeValueResponse) ProtoMessage() {}

func (x *SearchLogsTimeValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsTimeValueResponse.ProtoReflect.Descriptor instead.
func (*SearchLogsTimeValueResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{13}
}

func (x *SearchLogsTimeValueResponse) GetValue() *wrapperspb.DoubleValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type SearchLogsEventsRequest_Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  *wrapperspb.Int32Value `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SearchLogsEventsRequest_Pagination) Reset() {
	*x = SearchLogsEventsRequest_Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsEventsRequest_Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsEventsRequest_Pagination) ProtoMessage() {}

func (x *SearchLogsEventsRequest_Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsEventsRequest_Pagination.ProtoReflect.Descriptor instead.
func (*SearchLogsEventsRequest_Pagination) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SearchLogsEventsRequest_Pagination) GetOffset() *wrapperspb.Int32Value {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *SearchLogsEventsRequest_Pagination) GetLimit() *wrapperspb.Int32Value {
	if x != nil {
		return x.Limit
	}
	return nil
}

type SearchLogsEventGroupsRequest_OrderBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Field:
	//	*SearchLogsEventGroupsRequest_OrderBy_Grouping
	//	*SearchLogsEventGroupsRequest_OrderBy_Aggregation
	Field          isSearchLogsEventGroupsRequest_OrderBy_Field `protobuf_oneof:"field"`
	OrderDirection OrderDirection                        `protobuf:"varint,3,opt,name=order_direction,json=orderDirection,proto3,enum=com.coralogixapis.dashboards.v1.OrderDirection" json:"order_direction,omitempty"`
}

func (x *SearchLogsEventGroupsRequest_OrderBy) Reset() {
	*x = SearchLogsEventGroupsRequest_OrderBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsEventGroupsRequest_OrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsEventGroupsRequest_OrderBy) ProtoMessage() {}

func (x *SearchLogsEventGroupsRequest_OrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsEventGroupsRequest_OrderBy.ProtoReflect.Descriptor instead.
func (*SearchLogsEventGroupsRequest_OrderBy) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{4, 0}
}

func (m *SearchLogsEventGroupsRequest_OrderBy) GetField() isSearchLogsEventGroupsRequest_OrderBy_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (x *SearchLogsEventGroupsRequest_OrderBy) GetGrouping() *wrapperspb.StringValue {
	if x, ok := x.GetField().(*SearchLogsEventGroupsRequest_OrderBy_Grouping); ok {
		return x.Grouping
	}
	return nil
}

func (x *SearchLogsEventGroupsRequest_OrderBy) GetAggregation() *LogsAggregation {
	if x, ok := x.GetField().(*SearchLogsEventGroupsRequest_OrderBy_Aggregation); ok {
		return x.Aggregation
	}
	return nil
}

func (x *SearchLogsEventGroupsRequest_OrderBy) GetOrderDirection() OrderDirection {
	if x != nil {
		return x.OrderDirection
	}
	return OrderDirection(0)
}

type isSearchLogsEventGroupsRequest_OrderBy_Field interface {
	isSearchLogsEventGroupsRequest_OrderBy_Field()
}

type SearchLogsEventGroupsRequest_OrderBy_Grouping struct {
	Grouping *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=grouping,proto3,oneof"`
}

type SearchLogsEventGroupsRequest_OrderBy_Aggregation struct {
	Aggregation *LogsAggregation `protobuf:"bytes,2,opt,name=aggregation,proto3,oneof"`
}

func (*SearchLogsEventGroupsRequest_OrderBy_Grouping) isSearchLogsEventGroupsRequest_OrderBy_Field() {
}

func (*SearchLogsEventGroupsRequest_OrderBy_Aggregation) isSearchLogsEventGroupsRequest_OrderBy_Field() {
}

type SearchGroupedLogsSeriesRequest_Limit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupByFields []*wrapperspb.StringValue `protobuf:"bytes,1,rep,name=group_by_fields,json=groupByFields,proto3" json:"group_by_fields,omitempty"`
	Limit         *wrapperspb.Int32Value    `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
	MinPercentage *wrapperspb.Int32Value    `protobuf:"bytes,3,opt,name=min_percentage,json=minPercentage,proto3" json:"min_percentage,omitempty"`
}

func (x *SearchGroupedLogsSeriesRequest_Limit) Reset() {
	*x = SearchGroupedLogsSeriesRequest_Limit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGroupedLogsSeriesRequest_Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGroupedLogsSeriesRequest_Limit) ProtoMessage() {}

func (x *SearchGroupedLogsSeriesRequest_Limit) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGroupedLogsSeriesRequest_Limit.ProtoReflect.Descriptor instead.
func (*SearchGroupedLogsSeriesRequest_Limit) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{6, 0}
}

func (x *SearchGroupedLogsSeriesRequest_Limit) GetGroupByFields() []*wrapperspb.StringValue {
	if x != nil {
		return x.GroupByFields
	}
	return nil
}

func (x *SearchGroupedLogsSeriesRequest_Limit) GetLimit() *wrapperspb.Int32Value {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *SearchGroupedLogsSeriesRequest_Limit) GetMinPercentage() *wrapperspb.Int32Value {
	if x != nil {
		return x.MinPercentage
	}
	return nil
}

type SearchLogsGroupedTimeSeriesRequest_GroupBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields        []*wrapperspb.StringValue `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Limit         *wrapperspb.Int32Value    `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
	MinPercentage *wrapperspb.Int32Value    `protobuf:"bytes,3,opt,name=min_percentage,json=minPercentage,proto3" json:"min_percentage,omitempty"`
}

func (x *SearchLogsGroupedTimeSeriesRequest_GroupBy) Reset() {
	*x = SearchLogsGroupedTimeSeriesRequest_GroupBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLogsGroupedTimeSeriesRequest_GroupBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLogsGroupedTimeSeriesRequest_GroupBy) ProtoMessage() {}

func (x *SearchLogsGroupedTimeSeriesRequest_GroupBy) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLogsGroupedTimeSeriesRequest_GroupBy.ProtoReflect.Descriptor instead.
func (*SearchLogsGroupedTimeSeriesRequest_GroupBy) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP(), []int{8, 0}
}

func (x *SearchLogsGroupedTimeSeriesRequest_GroupBy) GetFields() []*wrapperspb.StringValue {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchLogsGroupedTimeSeriesRequest_GroupBy) GetLimit() *wrapperspb.Int32Value {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *SearchLogsGroupedTimeSeriesRequest_GroupBy) GetMinPercentage() *wrapperspb.Int32Value {
	if x != nil {
		return x.MinPercentage
	}
	return nil
}

var File_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto protoreflect.FileDescriptor

var file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDesc = []byte{
	0x0a, 0x47, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x1a, 0x30, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x74, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3c, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x37, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x04,
	0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12,
	0x35, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x50, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42,
	0x79, 0x12, 0x5b, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x6c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x22, 0xa6, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67,
	0x73, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xba, 0x04, 0x0a, 0x17,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x6c,
	0x75, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x6c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x50, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x6c,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x74, 0x0a, 0x0a,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x31, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x9a, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x4b, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xe7, 0x06, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x6c, 0x75,
	0x63, 0x65, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b,
	0x6c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x79, 0x12, 0x5b, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x69, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x52, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x8c, 0x02, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x3a, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x5b, 0x0a, 0x0b, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22,
	0x6b, 0x0a, 0x1d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xd5, 0x05, 0x0a,
	0x1e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x4c, 0x6f,
	0x67, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x50, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x12, 0x50, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e,
	0x4c, 0x6f, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x42, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x59, 0x0a, 0x0b, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0c, 0x6c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6c, 0x75, 0x63, 0x65, 0x6e, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x66, 0x0a, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x4c, 0x6f,
	0x67, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x1a, 0xc4, 0x01,
	0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x44, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x31, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x42, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x22, 0x70, 0x0a, 0x1f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x22, 0xc5, 0x05, 0x0a, 0x22, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4c, 0x6f, 0x67, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12,
	0x35, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x50, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x59, 0x0a, 0x0b, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0c, 0x6c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x6c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x6f, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x62, 0x79,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x79, 0x1a, 0xb6, 0x01, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x42,
	0x79, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x6d, 0x69,
	0x6e, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0d, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x22, 0x74,
	0x0a, 0x23, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x06, 0x73, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x22, 0xbc, 0x02, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e,
	0x12, 0x5b, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x0c, 0x6c, 0x6f, 0x67, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4a, 0x04, 0x08,
	0x03, 0x10, 0x04, 0x22, 0xf2, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x73, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a,
	0x0e, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x54, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f,
	0x67, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x22, 0xdc, 0x02, 0x0a, 0x1a, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74,
	0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x6c,
	0x75, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0b, 0x6c, 0x75, 0x63, 0x65, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x59, 0x0a, 0x0b,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4c, 0x6f, 0x67, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0xd1, 0x09, 0x0a, 0x15, 0x4c,
	0x6f, 0x67, 0x73, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xc4, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c,
	0x6f, 0x67, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x45, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c,
	0x6f, 0x67, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0xba, 0xb8,
	0x02, 0x19, 0x0a, 0x17, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x6c, 0x6f, 0x67, 0x73, 0x20,
	0x74, 0x69, 0x6d, 0x65, 0x20, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0xb3, 0x01, 0x0a, 0x10,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0xba, 0xb8, 0x02, 0x14, 0x0a, 0x12, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x6c, 0x6f, 0x67, 0x73, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0xc9, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x48, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64,
	0x4c, 0x6f, 0x67, 0x73, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x19, 0xba, 0xb8, 0x02, 0x15, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65,
	0x64, 0x20, 0x6c, 0x6f, 0x67, 0x73, 0x20, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0xda, 0x01,
	0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x4c, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c,
	0x6f, 0x67, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67,
	0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0xba, 0xb8, 0x02, 0x1a,
	0x0a, 0x18, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x20, 0x6c, 0x6f, 0x67, 0x73, 0x20, 0x74,
	0x69, 0x6d, 0x65, 0x20, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0xc8, 0x01, 0x0a, 0x15, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f,
	0x67, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0xba, 0xb8, 0x02, 0x1a, 0x0a, 0x18, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x20, 0x6c, 0x6f, 0x67, 0x73, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x20, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0xc6, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4c, 0x6f, 0x67, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x44, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c,
	0x6f, 0x67, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0xba, 0xb8, 0x02, 0x1e,
	0x0a, 0x1c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x6c, 0x6f, 0x67, 0x73, 0x20, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x2a,
	0x5a, 0x28, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescOnce sync.Once
	file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescData = file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDesc
)

func file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescData)
	})
	return file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDescData
}

var file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_goTypes = []interface{}{
	(*SearchLogsTimeSeriesRequest)(nil),                // 0: com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesRequest
	(*SearchLogsTimeSeriesResponse)(nil),               // 1: com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesResponse
	(*SearchLogsEventsRequest)(nil),                    // 2: com.coralogixapis.dashboards.v1.services.SearchLogsEventsRequest
	(*SearchLogsEventsResponse)(nil),                   // 3: com.coralogixapis.dashboards.v1.services.SearchLogsEventsResponse
	(*SearchLogsEventGroupsRequest)(nil),               // 4: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest
	(*SearchLogsEventGroupsResponse)(nil),              // 5: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsResponse
	(*SearchGroupedLogsSeriesRequest)(nil),             // 6: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest
	(*SearchGroupedLogsSeriesResponse)(nil),            // 7: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesResponse
	(*SearchLogsGroupedTimeSeriesRequest)(nil),         // 8: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest
	(*SearchLogsGroupedTimeSeriesResponse)(nil),        // 9: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesResponse
	(*LogsEvent)(nil),                                  // 10: com.coralogixapis.dashboards.v1.services.LogsEvent
	(*LogsMetadata)(nil),                               // 11: com.coralogixapis.dashboards.v1.services.LogsMetadata
	(*SearchLogsTimeValueRequest)(nil),                 // 12: com.coralogixapis.dashboards.v1.services.SearchLogsTimeValueRequest
	(*SearchLogsTimeValueResponse)(nil),                // 13: com.coralogixapis.dashboards.v1.services.SearchLogsTimeValueResponse
	(*SearchLogsEventsRequest_Pagination)(nil),         // 14: com.coralogixapis.dashboards.v1.services.SearchLogsEventsRequest.Pagination
	(*SearchLogsEventGroupsRequest_OrderBy)(nil),       // 15: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest.OrderBy
	(*SearchGroupedLogsSeriesRequest_Limit)(nil),       // 16: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest.Limit
	(*SearchLogsGroupedTimeSeriesRequest_GroupBy)(nil), // 17: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest.GroupBy
	(*TimeFrame)(nil),                           // 18: com.coralogixapis.dashboards.v1.TimeFrame
	(*durationpb.Duration)(nil),                        // 19: google.protobuf.Duration
	(*Filter_LogsFilter)(nil),                      // 20: com.coralogixapis.dashboards.v1.Filter.LogsFilter
	(*wrapperspb.StringValue)(nil),                     // 21: google.protobuf.StringValue
	(*LogsAggregation)(nil),                     // 22: com.coralogixapis.dashboards.v1.LogsAggregation
	(*wrapperspb.Int32Value)(nil),                      // 23: google.protobuf.Int32Value
	(*TimeSeries)(nil),                          // 24: com.coralogixapis.dashboards.v1.TimeSeries
	(*wrapperspb.Int64Value)(nil),                      // 25: google.protobuf.Int64Value
	(*OrderingField)(nil),                       // 26: com.coralogixapis.dashboards.v1.OrderingField
	(*Pagination)(nil),                          // 27: com.coralogixapis.dashboards.v1.Pagination
	(*MultiGroup)(nil),                          // 28: com.coralogixapis.dashboards.v1.MultiGroup
	(*GroupedSeries)(nil),                       // 29: com.coralogixapis.dashboards.v1.GroupedSeries
	(*timestamppb.Timestamp)(nil),                      // 30: google.protobuf.Timestamp
	(*structpb.Struct)(nil),                            // 31: google.protobuf.Struct
	(LogSeverityLevel)(0),                       // 32: com.coralogixapis.dashboards.v1.LogSeverityLevel
	(*wrapperspb.DoubleValue)(nil),                     // 33: google.protobuf.DoubleValue
	(OrderDirection)(0),                         // 34: com.coralogixapis.dashboards.v1.OrderDirection
}
var file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_depIdxs = []int32{
	18, // 0: com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesRequest.time_frame:type_name -> com.coralogixapis.dashboards.v1.TimeFrame
	19, // 1: com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesRequest.interval:type_name -> google.protobuf.Duration
	20, // 2: com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesRequest.filters:type_name -> com.coralogixapis.dashboards.v1.Filter.LogsFilter
	21, // 3: com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesRequest.group_by:type_name -> google.protobuf.StringValue
	22, // 4: com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesRequest.aggregations:type_name -> com.coralogixapis.dashboards.v1.LogsAggregation
	23, // 5: com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesRequest.limit:type_name -> google.protobuf.Int32Value
	21, // 6: com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesRequest.lucene_query:type_name -> google.protobuf.StringValue
	24, // 7: com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesResponse.time_series:type_name -> com.coralogixapis.dashboards.v1.TimeSeries
	25, // 8: com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesResponse.total:type_name -> google.protobuf.Int64Value
	18, // 9: com.coralogixapis.dashboards.v1.services.SearchLogsEventsRequest.time_frame:type_name -> com.coralogixapis.dashboards.v1.TimeFrame
	20, // 10: com.coralogixapis.dashboards.v1.services.SearchLogsEventsRequest.filters:type_name -> com.coralogixapis.dashboards.v1.Filter.LogsFilter
	21, // 11: com.coralogixapis.dashboards.v1.services.SearchLogsEventsRequest.lucene_query:type_name -> google.protobuf.StringValue
	26, // 12: com.coralogixapis.dashboards.v1.services.SearchLogsEventsRequest.order_by:type_name -> com.coralogixapis.dashboards.v1.OrderingField
	14, // 13: com.coralogixapis.dashboards.v1.services.SearchLogsEventsRequest.pagination:type_name -> com.coralogixapis.dashboards.v1.services.SearchLogsEventsRequest.Pagination
	25, // 14: com.coralogixapis.dashboards.v1.services.SearchLogsEventsResponse.total:type_name -> google.protobuf.Int64Value
	10, // 15: com.coralogixapis.dashboards.v1.services.SearchLogsEventsResponse.events:type_name -> com.coralogixapis.dashboards.v1.services.LogsEvent
	18, // 16: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest.time_frame:type_name -> com.coralogixapis.dashboards.v1.TimeFrame
	20, // 17: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest.filters:type_name -> com.coralogixapis.dashboards.v1.Filter.LogsFilter
	21, // 18: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest.lucene_query:type_name -> google.protobuf.StringValue
	21, // 19: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest.group_by:type_name -> google.protobuf.StringValue
	22, // 20: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest.aggregations:type_name -> com.coralogixapis.dashboards.v1.LogsAggregation
	15, // 21: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest.order_by:type_name -> com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest.OrderBy
	27, // 22: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest.pagination:type_name -> com.coralogixapis.dashboards.v1.Pagination
	28, // 23: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsResponse.groups:type_name -> com.coralogixapis.dashboards.v1.MultiGroup
	18, // 24: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest.time_frame:type_name -> com.coralogixapis.dashboards.v1.TimeFrame
	20, // 25: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest.filters:type_name -> com.coralogixapis.dashboards.v1.Filter.LogsFilter
	21, // 26: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest.group_by_fields:type_name -> google.protobuf.StringValue
	22, // 27: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest.aggregation:type_name -> com.coralogixapis.dashboards.v1.LogsAggregation
	21, // 28: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest.lucene_query:type_name -> google.protobuf.StringValue
	16, // 29: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest.limits:type_name -> com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest.Limit
	29, // 30: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesResponse.series:type_name -> com.coralogixapis.dashboards.v1.GroupedSeries
	18, // 31: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest.time_frame:type_name -> com.coralogixapis.dashboards.v1.TimeFrame
	19, // 32: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest.interval:type_name -> google.protobuf.Duration
	20, // 33: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest.filters:type_name -> com.coralogixapis.dashboards.v1.Filter.LogsFilter
	22, // 34: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest.aggregation:type_name -> com.coralogixapis.dashboards.v1.LogsAggregation
	21, // 35: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest.lucene_query:type_name -> google.protobuf.StringValue
	17, // 36: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest.group_by:type_name -> com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest.GroupBy
	29, // 37: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesResponse.series:type_name -> com.coralogixapis.dashboards.v1.GroupedSeries
	21, // 38: com.coralogixapis.dashboards.v1.services.LogsEvent.log_id:type_name -> google.protobuf.StringValue
	30, // 39: com.coralogixapis.dashboards.v1.services.LogsEvent.timestamp:type_name -> google.protobuf.Timestamp
	21, // 40: com.coralogixapis.dashboards.v1.services.LogsEvent.text:type_name -> google.protobuf.StringValue
	31, // 41: com.coralogixapis.dashboards.v1.services.LogsEvent.json:type_name -> google.protobuf.Struct
	11, // 42: com.coralogixapis.dashboards.v1.services.LogsEvent.logs_metadata:type_name -> com.coralogixapis.dashboards.v1.services.LogsMetadata
	21, // 43: com.coralogixapis.dashboards.v1.services.LogsMetadata.application_name:type_name -> google.protobuf.StringValue
	21, // 44: com.coralogixapis.dashboards.v1.services.LogsMetadata.subsystem_name:type_name -> google.protobuf.StringValue
	32, // 45: com.coralogixapis.dashboards.v1.services.LogsMetadata.severity:type_name -> com.coralogixapis.dashboards.v1.LogSeverityLevel
	18, // 46: com.coralogixapis.dashboards.v1.services.SearchLogsTimeValueRequest.time_frame:type_name -> com.coralogixapis.dashboards.v1.TimeFrame
	20, // 47: com.coralogixapis.dashboards.v1.services.SearchLogsTimeValueRequest.filters:type_name -> com.coralogixapis.dashboards.v1.Filter.LogsFilter
	21, // 48: com.coralogixapis.dashboards.v1.services.SearchLogsTimeValueRequest.lucene_query:type_name -> google.protobuf.StringValue
	22, // 49: com.coralogixapis.dashboards.v1.services.SearchLogsTimeValueRequest.aggregation:type_name -> com.coralogixapis.dashboards.v1.LogsAggregation
	33, // 50: com.coralogixapis.dashboards.v1.services.SearchLogsTimeValueResponse.value:type_name -> google.protobuf.DoubleValue
	23, // 51: com.coralogixapis.dashboards.v1.services.SearchLogsEventsRequest.Pagination.offset:type_name -> google.protobuf.Int32Value
	23, // 52: com.coralogixapis.dashboards.v1.services.SearchLogsEventsRequest.Pagination.limit:type_name -> google.protobuf.Int32Value
	21, // 53: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest.OrderBy.grouping:type_name -> google.protobuf.StringValue
	22, // 54: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest.OrderBy.aggregation:type_name -> com.coralogixapis.dashboards.v1.LogsAggregation
	34, // 55: com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest.OrderBy.order_direction:type_name -> com.coralogixapis.dashboards.v1.OrderDirection
	21, // 56: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest.Limit.group_by_fields:type_name -> google.protobuf.StringValue
	23, // 57: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest.Limit.limit:type_name -> google.protobuf.Int32Value
	23, // 58: com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest.Limit.min_percentage:type_name -> google.protobuf.Int32Value
	21, // 59: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest.GroupBy.fields:type_name -> google.protobuf.StringValue
	23, // 60: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest.GroupBy.limit:type_name -> google.protobuf.Int32Value
	23, // 61: com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest.GroupBy.min_percentage:type_name -> google.protobuf.Int32Value
	0,  // 62: com.coralogixapis.dashboards.v1.services.LogsDataSourceService.SearchLogsTimeSeries:input_type -> com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesRequest
	2,  // 63: com.coralogixapis.dashboards.v1.services.LogsDataSourceService.SearchLogsEvents:input_type -> com.coralogixapis.dashboards.v1.services.SearchLogsEventsRequest
	6,  // 64: com.coralogixapis.dashboards.v1.services.LogsDataSourceService.SearchGroupedLogsSeries:input_type -> com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesRequest
	8,  // 65: com.coralogixapis.dashboards.v1.services.LogsDataSourceService.SearchLogsGroupedTimeSeries:input_type -> com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesRequest
	4,  // 66: com.coralogixapis.dashboards.v1.services.LogsDataSourceService.SearchLogsEventGroups:input_type -> com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsRequest
	12, // 67: com.coralogixapis.dashboards.v1.services.LogsDataSourceService.SearchLogsTimeValue:input_type -> com.coralogixapis.dashboards.v1.services.SearchLogsTimeValueRequest
	1,  // 68: com.coralogixapis.dashboards.v1.services.LogsDataSourceService.SearchLogsTimeSeries:output_type -> com.coralogixapis.dashboards.v1.services.SearchLogsTimeSeriesResponse
	3,  // 69: com.coralogixapis.dashboards.v1.services.LogsDataSourceService.SearchLogsEvents:output_type -> com.coralogixapis.dashboards.v1.services.SearchLogsEventsResponse
	7,  // 70: com.coralogixapis.dashboards.v1.services.LogsDataSourceService.SearchGroupedLogsSeries:output_type -> com.coralogixapis.dashboards.v1.services.SearchGroupedLogsSeriesResponse
	9,  // 71: com.coralogixapis.dashboards.v1.services.LogsDataSourceService.SearchLogsGroupedTimeSeries:output_type -> com.coralogixapis.dashboards.v1.services.SearchLogsGroupedTimeSeriesResponse
	5,  // 72: com.coralogixapis.dashboards.v1.services.LogsDataSourceService.SearchLogsEventGroups:output_type -> com.coralogixapis.dashboards.v1.services.SearchLogsEventGroupsResponse
	13, // 73: com.coralogixapis.dashboards.v1.services.LogsDataSourceService.SearchLogsTimeValue:output_type -> com.coralogixapis.dashboards.v1.services.SearchLogsTimeValueResponse
	68, // [68:74] is the sub-list for method output_type
	62, // [62:68] is the sub-list for method input_type
	62, // [62:62] is the sub-list for extension type_name
	62, // [62:62] is the sub-list for extension extendee
	0,  // [0:62] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_init() }
func file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_init() {
	if File_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsTimeSeriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsTimeSeriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsEventGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsEventGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGroupedLogsSeriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGroupedLogsSeriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsGroupedTimeSeriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsGroupedTimeSeriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsTimeValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsTimeValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsEventsRequest_Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsEventGroupsRequest_OrderBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGroupedLogsSeriesRequest_Limit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLogsGroupedTimeSeriesRequest_GroupBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*SearchLogsEventGroupsRequest_OrderBy_Grouping)(nil),
		(*SearchLogsEventGroupsRequest_OrderBy_Aggregation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_depIdxs,
		MessageInfos:      file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto = out.File
	file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_rawDesc = nil
	file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_goTypes = nil
	file_com_coralogixapis_dashboards_v1_services_logs_data_source_service_proto_depIdxs = nil
}
