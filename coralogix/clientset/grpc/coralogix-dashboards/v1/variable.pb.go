// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: com/coralogixapis/dashboards/v1/ast/variable.proto

package __

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Variable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Definition  *Variable_Definition    `protobuf:"bytes,2,opt,name=definition,proto3" json:"definition,omitempty"`
	DisplayName *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *Variable) Reset() {
	*x = Variable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable) ProtoMessage() {}

func (x *Variable) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable.ProtoReflect.Descriptor instead.
func (*Variable) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP(), []int{0}
}

func (x *Variable) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Variable) GetDefinition() *Variable_Definition {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *Variable) GetDisplayName() *wrapperspb.StringValue {
	if x != nil {
		return x.DisplayName
	}
	return nil
}

type Constant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Constant) Reset() {
	*x = Constant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Constant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Constant) ProtoMessage() {}

func (x *Constant) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Constant.ProtoReflect.Descriptor instead.
func (*Constant) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP(), []int{1}
}

func (x *Constant) GetValue() *wrapperspb.StringValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type MultiSelect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	Selected             []*wrapperspb.StringValue `protobuf:"bytes,1,rep,name=selected,proto3" json:"selected,omitempty"`
	Source               *MultiSelect_Source       `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Selection            *MultiSelect_Selection `protobuf:"bytes,3,opt,name=selection,proto3" json:"selection,omitempty"`
	ValuesOrderDirection OrderDirection         `protobuf:"varint,4,opt,name=values_order_direction,json=valuesOrderDirection,proto3,enum=com.coralogixapis.dashboards.v1.common.OrderDirection" json:"values_order_direction,omitempty"`
}

func (x *MultiSelect) Reset() {
	*x = MultiSelect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSelect) ProtoMessage() {}

func (x *MultiSelect) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSelect.ProtoReflect.Descriptor instead.
func (*MultiSelect) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP(), []int{2}
}

// Deprecated: Do not use.
func (x *MultiSelect) GetSelected() []*wrapperspb.StringValue {
	if x != nil {
		return x.Selected
	}
	return nil
}

func (x *MultiSelect) GetSource() *MultiSelect_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *MultiSelect) GetSelection() *MultiSelect_Selection {
	if x != nil {
		return x.Selection
	}
	return nil
}

func (x *MultiSelect) GetValuesOrderDirection() OrderDirection {
	if x != nil {
		return x.ValuesOrderDirection
	}
	return OrderDirection(0)
}

type Variable_Definition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*Variable_Definition_Constant
	//	*Variable_Definition_MultiSelect
	Value isVariable_Definition_Value `protobuf_oneof:"value"`
}

func (x *Variable_Definition) Reset() {
	*x = Variable_Definition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variable_Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable_Definition) ProtoMessage() {}

func (x *Variable_Definition) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable_Definition.ProtoReflect.Descriptor instead.
func (*Variable_Definition) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP(), []int{0, 0}
}

func (m *Variable_Definition) GetValue() isVariable_Definition_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Variable_Definition) GetConstant() *Constant {
	if x, ok := x.GetValue().(*Variable_Definition_Constant); ok {
		return x.Constant
	}
	return nil
}

func (x *Variable_Definition) GetMultiSelect() *MultiSelect {
	if x, ok := x.GetValue().(*Variable_Definition_MultiSelect); ok {
		return x.MultiSelect
	}
	return nil
}

type isVariable_Definition_Value interface {
	isVariable_Definition_Value()
}

type Variable_Definition_Constant struct {
	Constant *Constant `protobuf:"bytes,1,opt,name=constant,proto3,oneof"`
}

type Variable_Definition_MultiSelect struct {
	MultiSelect *MultiSelect `protobuf:"bytes,2,opt,name=multi_select,json=multiSelect,proto3,oneof"`
}

func (*Variable_Definition_Constant) isVariable_Definition_Value() {}

func (*Variable_Definition_MultiSelect) isVariable_Definition_Value() {}

type MultiSelect_Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*MultiSelect_Source_LogsPath
	//	*MultiSelect_Source_MetricLabel
	//	*MultiSelect_Source_ConstantList
	//	*MultiSelect_Source_SpanField
	Value isMultiSelect_Source_Value `protobuf_oneof:"value"`
}

func (x *MultiSelect_Source) Reset() {
	*x = MultiSelect_Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSelect_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSelect_Source) ProtoMessage() {}

func (x *MultiSelect_Source) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSelect_Source.ProtoReflect.Descriptor instead.
func (*MultiSelect_Source) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP(), []int{2, 0}
}

func (m *MultiSelect_Source) GetValue() isMultiSelect_Source_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *MultiSelect_Source) GetLogsPath() *MultiSelect_LogsPathSource {
	if x, ok := x.GetValue().(*MultiSelect_Source_LogsPath); ok {
		return x.LogsPath
	}
	return nil
}

func (x *MultiSelect_Source) GetMetricLabel() *MultiSelect_MetricLabelSource {
	if x, ok := x.GetValue().(*MultiSelect_Source_MetricLabel); ok {
		return x.MetricLabel
	}
	return nil
}

func (x *MultiSelect_Source) GetConstantList() *MultiSelect_ConstantListSource {
	if x, ok := x.GetValue().(*MultiSelect_Source_ConstantList); ok {
		return x.ConstantList
	}
	return nil
}

func (x *MultiSelect_Source) GetSpanField() *MultiSelect_SpanFieldSource {
	if x, ok := x.GetValue().(*MultiSelect_Source_SpanField); ok {
		return x.SpanField
	}
	return nil
}

type isMultiSelect_Source_Value interface {
	isMultiSelect_Source_Value()
}

type MultiSelect_Source_LogsPath struct {
	LogsPath *MultiSelect_LogsPathSource `protobuf:"bytes,1,opt,name=logs_path,json=logsPath,proto3,oneof"`
}

type MultiSelect_Source_MetricLabel struct {
	MetricLabel *MultiSelect_MetricLabelSource `protobuf:"bytes,2,opt,name=metric_label,json=metricLabel,proto3,oneof"`
}

type MultiSelect_Source_ConstantList struct {
	ConstantList *MultiSelect_ConstantListSource `protobuf:"bytes,3,opt,name=constant_list,json=constantList,proto3,oneof"`
}

type MultiSelect_Source_SpanField struct {
	SpanField *MultiSelect_SpanFieldSource `protobuf:"bytes,4,opt,name=span_field,json=spanField,proto3,oneof"`
}

func (*MultiSelect_Source_LogsPath) isMultiSelect_Source_Value() {}

func (*MultiSelect_Source_MetricLabel) isMultiSelect_Source_Value() {}

func (*MultiSelect_Source_ConstantList) isMultiSelect_Source_Value() {}

func (*MultiSelect_Source_SpanField) isMultiSelect_Source_Value() {}

type MultiSelect_LogsPathSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MultiSelect_LogsPathSource) Reset() {
	*x = MultiSelect_LogsPathSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSelect_LogsPathSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSelect_LogsPathSource) ProtoMessage() {}

func (x *MultiSelect_LogsPathSource) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSelect_LogsPathSource.ProtoReflect.Descriptor instead.
func (*MultiSelect_LogsPathSource) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP(), []int{2, 1}
}

func (x *MultiSelect_LogsPathSource) GetValue() *wrapperspb.StringValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type MultiSelect_MetricLabelSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricName *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	Label      *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *MultiSelect_MetricLabelSource) Reset() {
	*x = MultiSelect_MetricLabelSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSelect_MetricLabelSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSelect_MetricLabelSource) ProtoMessage() {}

func (x *MultiSelect_MetricLabelSource) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSelect_MetricLabelSource.ProtoReflect.Descriptor instead.
func (*MultiSelect_MetricLabelSource) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP(), []int{2, 2}
}

func (x *MultiSelect_MetricLabelSource) GetMetricName() *wrapperspb.StringValue {
	if x != nil {
		return x.MetricName
	}
	return nil
}

func (x *MultiSelect_MetricLabelSource) GetLabel() *wrapperspb.StringValue {
	if x != nil {
		return x.Label
	}
	return nil
}

type MultiSelect_SpanFieldSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *SpanField `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MultiSelect_SpanFieldSource) Reset() {
	*x = MultiSelect_SpanFieldSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSelect_SpanFieldSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSelect_SpanFieldSource) ProtoMessage() {}

func (x *MultiSelect_SpanFieldSource) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSelect_SpanFieldSource.ProtoReflect.Descriptor instead.
func (*MultiSelect_SpanFieldSource) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP(), []int{2, 3}
}

func (x *MultiSelect_SpanFieldSource) GetValue() *SpanField {
	if x != nil {
		return x.Value
	}
	return nil
}

type MultiSelect_ConstantListSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*wrapperspb.StringValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *MultiSelect_ConstantListSource) Reset() {
	*x = MultiSelect_ConstantListSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSelect_ConstantListSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSelect_ConstantListSource) ProtoMessage() {}

func (x *MultiSelect_ConstantListSource) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSelect_ConstantListSource.ProtoReflect.Descriptor instead.
func (*MultiSelect_ConstantListSource) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP(), []int{2, 4}
}

func (x *MultiSelect_ConstantListSource) GetValues() []*wrapperspb.StringValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type MultiSelect_Selection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*MultiSelect_Selection_All
	//	*MultiSelect_Selection_List
	Value isMultiSelect_Selection_Value `protobuf_oneof:"value"`
}

func (x *MultiSelect_Selection) Reset() {
	*x = MultiSelect_Selection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSelect_Selection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSelect_Selection) ProtoMessage() {}

func (x *MultiSelect_Selection) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSelect_Selection.ProtoReflect.Descriptor instead.
func (*MultiSelect_Selection) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP(), []int{2, 5}
}

func (m *MultiSelect_Selection) GetValue() isMultiSelect_Selection_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *MultiSelect_Selection) GetAll() *MultiSelect_Selection_AllSelection {
	if x, ok := x.GetValue().(*MultiSelect_Selection_All); ok {
		return x.All
	}
	return nil
}

func (x *MultiSelect_Selection) GetList() *MultiSelect_Selection_ListSelection {
	if x, ok := x.GetValue().(*MultiSelect_Selection_List); ok {
		return x.List
	}
	return nil
}

type isMultiSelect_Selection_Value interface {
	isMultiSelect_Selection_Value()
}

type MultiSelect_Selection_All struct {
	All *MultiSelect_Selection_AllSelection `protobuf:"bytes,1,opt,name=all,proto3,oneof"`
}

type MultiSelect_Selection_List struct {
	List *MultiSelect_Selection_ListSelection `protobuf:"bytes,2,opt,name=list,proto3,oneof"`
}

func (*MultiSelect_Selection_All) isMultiSelect_Selection_Value() {}

func (*MultiSelect_Selection_List) isMultiSelect_Selection_Value() {}

type MultiSelect_Selection_AllSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MultiSelect_Selection_AllSelection) Reset() {
	*x = MultiSelect_Selection_AllSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSelect_Selection_AllSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSelect_Selection_AllSelection) ProtoMessage() {}

func (x *MultiSelect_Selection_AllSelection) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSelect_Selection_AllSelection.ProtoReflect.Descriptor instead.
func (*MultiSelect_Selection_AllSelection) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP(), []int{2, 5, 0}
}

type MultiSelect_Selection_ListSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*wrapperspb.StringValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *MultiSelect_Selection_ListSelection) Reset() {
	*x = MultiSelect_Selection_ListSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiSelect_Selection_ListSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiSelect_Selection_ListSelection) ProtoMessage() {}

func (x *MultiSelect_Selection_ListSelection) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiSelect_Selection_ListSelection.ProtoReflect.Descriptor instead.
func (*MultiSelect_Selection_ListSelection) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP(), []int{2, 5, 1}
}

func (x *MultiSelect_Selection_ListSelection) GetValues() []*wrapperspb.StringValue {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_com_coralogixapis_dashboards_v1_ast_variable_proto protoreflect.FileDescriptor

var file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDesc = []byte{
	0x0a, 0x32, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x73, 0x74, 0x2f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x1a, 0x3c, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x64, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x73, 0x70, 0x61, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x93, 0x03, 0x0a, 0x08, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x30, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x58, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0xb9, 0x01, 0x0a, 0x0a, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x08, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73,
	0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x73, 0x74, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x48, 0x00,
	0x52, 0x0b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x07, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb2, 0x0b, 0x0a, 0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x4f, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x6c, 0x0a, 0x16, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa9, 0x03,
	0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x73,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73,
	0x74, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x6f,
	0x67, 0x73, 0x50, 0x61, 0x74, 0x68, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08,
	0x6c, 0x6f, 0x67, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x67, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x6a, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73,
	0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x61, 0x0a,
	0x0a, 0x73, 0x70, 0x61, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x70, 0x61, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x44, 0x0a, 0x0e, 0x4c, 0x6f, 0x67,
	0x73, 0x50, 0x61, 0x74, 0x68, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x86, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x1a, 0x5a, 0x0a, 0x0f, 0x53, 0x70, 0x61, 0x6e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x4a, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x1a, 0xa8, 0x02, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5b,
	0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73,
	0x74, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x03, 0x61, 0x6c, 0x6c, 0x12, 0x5e, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x64, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x73, 0x74, 0x2e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x0e, 0x0a, 0x0c, 0x41,
	0x6c, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x45, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x25, 0x5a, 0x23, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescOnce sync.Once
	file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescData = file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDesc
)

func file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescData)
	})
	return file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDescData
}

var file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_com_coralogixapis_dashboards_v1_ast_variable_proto_goTypes = []interface{}{
	(*Variable)(nil),                            // 0: com.coralogixapis.dashboards.v1.ast.Variable
	(*Constant)(nil),                            // 1: com.coralogixapis.dashboards.v1.ast.Constant
	(*MultiSelect)(nil),                         // 2: com.coralogixapis.dashboards.v1.ast.MultiSelect
	(*Variable_Definition)(nil),                 // 3: com.coralogixapis.dashboards.v1.ast.Variable.Definition
	(*MultiSelect_Source)(nil),                  // 4: com.coralogixapis.dashboards.v1.ast.MultiSelect.Source
	(*MultiSelect_LogsPathSource)(nil),          // 5: com.coralogixapis.dashboards.v1.ast.MultiSelect.LogsPathSource
	(*MultiSelect_MetricLabelSource)(nil),       // 6: com.coralogixapis.dashboards.v1.ast.MultiSelect.MetricLabelSource
	(*MultiSelect_SpanFieldSource)(nil),         // 7: com.coralogixapis.dashboards.v1.ast.MultiSelect.SpanFieldSource
	(*MultiSelect_ConstantListSource)(nil),      // 8: com.coralogixapis.dashboards.v1.ast.MultiSelect.ConstantListSource
	(*MultiSelect_Selection)(nil),               // 9: com.coralogixapis.dashboards.v1.ast.MultiSelect.Selection
	(*MultiSelect_Selection_AllSelection)(nil),  // 10: com.coralogixapis.dashboards.v1.ast.MultiSelect.Selection.AllSelection
	(*MultiSelect_Selection_ListSelection)(nil), // 11: com.coralogixapis.dashboards.v1.ast.MultiSelect.Selection.ListSelection
	(*wrapperspb.StringValue)(nil),              // 12: google.protobuf.StringValue
	(OrderDirection)(0),                         // 13: com.coralogixapis.dashboards.v1.common.OrderDirection
	(*SpanField)(nil),                           // 14: com.coralogixapis.dashboards.v1.common.SpanField
}
var file_com_coralogixapis_dashboards_v1_ast_variable_proto_depIdxs = []int32{
	12, // 0: com.coralogixapis.dashboards.v1.ast.Variable.name:type_name -> google.protobuf.StringValue
	3,  // 1: com.coralogixapis.dashboards.v1.ast.Variable.definition:type_name -> com.coralogixapis.dashboards.v1.ast.Variable.Definition
	12, // 2: com.coralogixapis.dashboards.v1.ast.Variable.display_name:type_name -> google.protobuf.StringValue
	12, // 3: com.coralogixapis.dashboards.v1.ast.Constant.value:type_name -> google.protobuf.StringValue
	12, // 4: com.coralogixapis.dashboards.v1.ast.MultiSelect.selected:type_name -> google.protobuf.StringValue
	4,  // 5: com.coralogixapis.dashboards.v1.ast.MultiSelect.source:type_name -> com.coralogixapis.dashboards.v1.ast.MultiSelect.Source
	9,  // 6: com.coralogixapis.dashboards.v1.ast.MultiSelect.selection:type_name -> com.coralogixapis.dashboards.v1.ast.MultiSelect.Selection
	13, // 7: com.coralogixapis.dashboards.v1.ast.MultiSelect.values_order_direction:type_name -> com.coralogixapis.dashboards.v1.common.OrderDirection
	1,  // 8: com.coralogixapis.dashboards.v1.ast.Variable.Definition.constant:type_name -> com.coralogixapis.dashboards.v1.ast.Constant
	2,  // 9: com.coralogixapis.dashboards.v1.ast.Variable.Definition.multi_select:type_name -> com.coralogixapis.dashboards.v1.ast.MultiSelect
	5,  // 10: com.coralogixapis.dashboards.v1.ast.MultiSelect.Source.logs_path:type_name -> com.coralogixapis.dashboards.v1.ast.MultiSelect.LogsPathSource
	6,  // 11: com.coralogixapis.dashboards.v1.ast.MultiSelect.Source.metric_label:type_name -> com.coralogixapis.dashboards.v1.ast.MultiSelect.MetricLabelSource
	8,  // 12: com.coralogixapis.dashboards.v1.ast.MultiSelect.Source.constant_list:type_name -> com.coralogixapis.dashboards.v1.ast.MultiSelect.ConstantListSource
	7,  // 13: com.coralogixapis.dashboards.v1.ast.MultiSelect.Source.span_field:type_name -> com.coralogixapis.dashboards.v1.ast.MultiSelect.SpanFieldSource
	12, // 14: com.coralogixapis.dashboards.v1.ast.MultiSelect.LogsPathSource.value:type_name -> google.protobuf.StringValue
	12, // 15: com.coralogixapis.dashboards.v1.ast.MultiSelect.MetricLabelSource.metric_name:type_name -> google.protobuf.StringValue
	12, // 16: com.coralogixapis.dashboards.v1.ast.MultiSelect.MetricLabelSource.label:type_name -> google.protobuf.StringValue
	14, // 17: com.coralogixapis.dashboards.v1.ast.MultiSelect.SpanFieldSource.value:type_name -> com.coralogixapis.dashboards.v1.common.SpanField
	12, // 18: com.coralogixapis.dashboards.v1.ast.MultiSelect.ConstantListSource.values:type_name -> google.protobuf.StringValue
	10, // 19: com.coralogixapis.dashboards.v1.ast.MultiSelect.Selection.all:type_name -> com.coralogixapis.dashboards.v1.ast.MultiSelect.Selection.AllSelection
	11, // 20: com.coralogixapis.dashboards.v1.ast.MultiSelect.Selection.list:type_name -> com.coralogixapis.dashboards.v1.ast.MultiSelect.Selection.ListSelection
	12, // 21: com.coralogixapis.dashboards.v1.ast.MultiSelect.Selection.ListSelection.values:type_name -> google.protobuf.StringValue
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_dashboards_v1_ast_variable_proto_init() }
func file_com_coralogixapis_dashboards_v1_ast_variable_proto_init() {
	if File_com_coralogixapis_dashboards_v1_ast_variable_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Constant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSelect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variable_Definition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSelect_Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSelect_LogsPathSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSelect_MetricLabelSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSelect_SpanFieldSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSelect_ConstantListSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSelect_Selection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSelect_Selection_AllSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiSelect_Selection_ListSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Variable_Definition_Constant)(nil),
		(*Variable_Definition_MultiSelect)(nil),
	}
	file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*MultiSelect_Source_LogsPath)(nil),
		(*MultiSelect_Source_MetricLabel)(nil),
		(*MultiSelect_Source_ConstantList)(nil),
		(*MultiSelect_Source_SpanField)(nil),
	}
	file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*MultiSelect_Selection_All)(nil),
		(*MultiSelect_Selection_List)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogixapis_dashboards_v1_ast_variable_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_dashboards_v1_ast_variable_proto_depIdxs,
		MessageInfos:      file_com_coralogixapis_dashboards_v1_ast_variable_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_dashboards_v1_ast_variable_proto = out.File
	file_com_coralogixapis_dashboards_v1_ast_variable_proto_rawDesc = nil
	file_com_coralogixapis_dashboards_v1_ast_variable_proto_goTypes = nil
	file_com_coralogixapis_dashboards_v1_ast_variable_proto_depIdxs = nil
}
