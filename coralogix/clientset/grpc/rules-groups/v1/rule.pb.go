// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.3
// source: com/coralogix/rules/v1/rule.proto

package __

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JsonExtractParameters_DestinationField int32

const (
	JsonExtractParameters_DESTINATION_FIELD_CATEGORY_OR_UNSPECIFIED JsonExtractParameters_DestinationField = 0
	JsonExtractParameters_DESTINATION_FIELD_CLASSNAME               JsonExtractParameters_DestinationField = 1
	JsonExtractParameters_DESTINATION_FIELD_METHODNAME              JsonExtractParameters_DestinationField = 2
	JsonExtractParameters_DESTINATION_FIELD_THREADID                JsonExtractParameters_DestinationField = 3
	JsonExtractParameters_DESTINATION_FIELD_SEVERITY                JsonExtractParameters_DestinationField = 4
)

// Enum value maps for JsonExtractParameters_DestinationField.
var (
	JsonExtractParameters_DestinationField_name = map[int32]string{
		0: "DESTINATION_FIELD_CATEGORY_OR_UNSPECIFIED",
		1: "DESTINATION_FIELD_CLASSNAME",
		2: "DESTINATION_FIELD_METHODNAME",
		3: "DESTINATION_FIELD_THREADID",
		4: "DESTINATION_FIELD_SEVERITY",
	}
	JsonExtractParameters_DestinationField_value = map[string]int32{
		"DESTINATION_FIELD_CATEGORY_OR_UNSPECIFIED": 0,
		"DESTINATION_FIELD_CLASSNAME":               1,
		"DESTINATION_FIELD_METHODNAME":              2,
		"DESTINATION_FIELD_THREADID":                3,
		"DESTINATION_FIELD_SEVERITY":                4,
	}
)

func (x JsonExtractParameters_DestinationField) Enum() *JsonExtractParameters_DestinationField {
	p := new(JsonExtractParameters_DestinationField)
	*p = x
	return p
}

func (x JsonExtractParameters_DestinationField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JsonExtractParameters_DestinationField) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_rules_v1_rule_proto_enumTypes[0].Descriptor()
}

func (JsonExtractParameters_DestinationField) Type() protoreflect.EnumType {
	return &file_com_coralogix_rules_v1_rule_proto_enumTypes[0]
}

func (x JsonExtractParameters_DestinationField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JsonExtractParameters_DestinationField.Descriptor instead.
func (JsonExtractParameters_DestinationField) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{3, 0}
}

type ExtractTimestampParameters_FormatStandard int32

const (
	ExtractTimestampParameters_FORMAT_STANDARD_STRFTIME_OR_UNSPECIFIED ExtractTimestampParameters_FormatStandard = 0
	ExtractTimestampParameters_FORMAT_STANDARD_JAVASDF                 ExtractTimestampParameters_FormatStandard = 1
	ExtractTimestampParameters_FORMAT_STANDARD_GOLANG                  ExtractTimestampParameters_FormatStandard = 2
	ExtractTimestampParameters_FORMAT_STANDARD_SECONDSTS               ExtractTimestampParameters_FormatStandard = 3
	ExtractTimestampParameters_FORMAT_STANDARD_MILLITS                 ExtractTimestampParameters_FormatStandard = 4
	ExtractTimestampParameters_FORMAT_STANDARD_MICROTS                 ExtractTimestampParameters_FormatStandard = 5
	ExtractTimestampParameters_FORMAT_STANDARD_NANOTS                  ExtractTimestampParameters_FormatStandard = 6
)

// Enum value maps for ExtractTimestampParameters_FormatStandard.
var (
	ExtractTimestampParameters_FormatStandard_name = map[int32]string{
		0: "FORMAT_STANDARD_STRFTIME_OR_UNSPECIFIED",
		1: "FORMAT_STANDARD_JAVASDF",
		2: "FORMAT_STANDARD_GOLANG",
		3: "FORMAT_STANDARD_SECONDSTS",
		4: "FORMAT_STANDARD_MILLITS",
		5: "FORMAT_STANDARD_MICROTS",
		6: "FORMAT_STANDARD_NANOTS",
	}
	ExtractTimestampParameters_FormatStandard_value = map[string]int32{
		"FORMAT_STANDARD_STRFTIME_OR_UNSPECIFIED": 0,
		"FORMAT_STANDARD_JAVASDF":                 1,
		"FORMAT_STANDARD_GOLANG":                  2,
		"FORMAT_STANDARD_SECONDSTS":               3,
		"FORMAT_STANDARD_MILLITS":                 4,
		"FORMAT_STANDARD_MICROTS":                 5,
		"FORMAT_STANDARD_NANOTS":                  6,
	}
)

func (x ExtractTimestampParameters_FormatStandard) Enum() *ExtractTimestampParameters_FormatStandard {
	p := new(ExtractTimestampParameters_FormatStandard)
	*p = x
	return p
}

func (x ExtractTimestampParameters_FormatStandard) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExtractTimestampParameters_FormatStandard) Descriptor() protoreflect.EnumDescriptor {
	return file_com_coralogix_rules_v1_rule_proto_enumTypes[1].Descriptor()
}

func (ExtractTimestampParameters_FormatStandard) Type() protoreflect.EnumType {
	return &file_com_coralogix_rules_v1_rule_proto_enumTypes[1]
}

func (x ExtractTimestampParameters_FormatStandard) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExtractTimestampParameters_FormatStandard.Descriptor instead.
func (ExtractTimestampParameters_FormatStandard) EnumDescriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{8, 0}
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SourceField *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=source_field,json=sourceField,proto3" json:"source_field,omitempty"`
	Parameters  *RuleParameters         `protobuf:"bytes,6,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Enabled     *wrapperspb.BoolValue   `protobuf:"bytes,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Order       *wrapperspb.UInt32Value `protobuf:"bytes,8,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{0}
}

func (x *Rule) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Rule) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Rule) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Rule) GetSourceField() *wrapperspb.StringValue {
	if x != nil {
		return x.SourceField
	}
	return nil
}

func (x *Rule) GetParameters() *RuleParameters {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Rule) GetEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.Enabled
	}
	return nil
}

func (x *Rule) GetOrder() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Order
	}
	return nil
}

type RuleParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RuleParameters:
	//	*RuleParameters_ExtractParameters
	//	*RuleParameters_JsonExtractParameters
	//	*RuleParameters_ReplaceParameters
	//	*RuleParameters_ParseParameters
	//	*RuleParameters_AllowParameters
	//	*RuleParameters_BlockParameters
	//	*RuleParameters_ExtractTimestampParameters
	//	*RuleParameters_RemoveFieldsParameters
	//	*RuleParameters_JsonStringifyParameters
	//	*RuleParameters_JsonParseParameters
	RuleParameters isRuleParameters_RuleParameters `protobuf_oneof:"rule_parameters"`
}

func (x *RuleParameters) Reset() {
	*x = RuleParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RuleParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleParameters) ProtoMessage() {}

func (x *RuleParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleParameters.ProtoReflect.Descriptor instead.
func (*RuleParameters) Descriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{1}
}

func (m *RuleParameters) GetRuleParameters() isRuleParameters_RuleParameters {
	if m != nil {
		return m.RuleParameters
	}
	return nil
}

func (x *RuleParameters) GetExtractParameters() *ExtractParameters {
	if x, ok := x.GetRuleParameters().(*RuleParameters_ExtractParameters); ok {
		return x.ExtractParameters
	}
	return nil
}

func (x *RuleParameters) GetJsonExtractParameters() *JsonExtractParameters {
	if x, ok := x.GetRuleParameters().(*RuleParameters_JsonExtractParameters); ok {
		return x.JsonExtractParameters
	}
	return nil
}

func (x *RuleParameters) GetReplaceParameters() *ReplaceParameters {
	if x, ok := x.GetRuleParameters().(*RuleParameters_ReplaceParameters); ok {
		return x.ReplaceParameters
	}
	return nil
}

func (x *RuleParameters) GetParseParameters() *ParseParameters {
	if x, ok := x.GetRuleParameters().(*RuleParameters_ParseParameters); ok {
		return x.ParseParameters
	}
	return nil
}

func (x *RuleParameters) GetAllowParameters() *AllowParameters {
	if x, ok := x.GetRuleParameters().(*RuleParameters_AllowParameters); ok {
		return x.AllowParameters
	}
	return nil
}

func (x *RuleParameters) GetBlockParameters() *BlockParameters {
	if x, ok := x.GetRuleParameters().(*RuleParameters_BlockParameters); ok {
		return x.BlockParameters
	}
	return nil
}

func (x *RuleParameters) GetExtractTimestampParameters() *ExtractTimestampParameters {
	if x, ok := x.GetRuleParameters().(*RuleParameters_ExtractTimestampParameters); ok {
		return x.ExtractTimestampParameters
	}
	return nil
}

func (x *RuleParameters) GetRemoveFieldsParameters() *RemoveFieldsParameters {
	if x, ok := x.GetRuleParameters().(*RuleParameters_RemoveFieldsParameters); ok {
		return x.RemoveFieldsParameters
	}
	return nil
}

func (x *RuleParameters) GetJsonStringifyParameters() *JsonStringifyParameters {
	if x, ok := x.GetRuleParameters().(*RuleParameters_JsonStringifyParameters); ok {
		return x.JsonStringifyParameters
	}
	return nil
}

func (x *RuleParameters) GetJsonParseParameters() *JsonParseParameters {
	if x, ok := x.GetRuleParameters().(*RuleParameters_JsonParseParameters); ok {
		return x.JsonParseParameters
	}
	return nil
}

type isRuleParameters_RuleParameters interface {
	isRuleParameters_RuleParameters()
}

type RuleParameters_ExtractParameters struct {
	ExtractParameters *ExtractParameters `protobuf:"bytes,1,opt,name=extract_parameters,json=extractParameters,proto3,oneof"`
}

type RuleParameters_JsonExtractParameters struct {
	JsonExtractParameters *JsonExtractParameters `protobuf:"bytes,2,opt,name=json_extract_parameters,json=jsonExtractParameters,proto3,oneof"`
}

type RuleParameters_ReplaceParameters struct {
	ReplaceParameters *ReplaceParameters `protobuf:"bytes,3,opt,name=replace_parameters,json=replaceParameters,proto3,oneof"`
}

type RuleParameters_ParseParameters struct {
	ParseParameters *ParseParameters `protobuf:"bytes,4,opt,name=parse_parameters,json=parseParameters,proto3,oneof"`
}

type RuleParameters_AllowParameters struct {
	AllowParameters *AllowParameters `protobuf:"bytes,5,opt,name=allow_parameters,json=allowParameters,proto3,oneof"`
}

type RuleParameters_BlockParameters struct {
	BlockParameters *BlockParameters `protobuf:"bytes,6,opt,name=block_parameters,json=blockParameters,proto3,oneof"`
}

type RuleParameters_ExtractTimestampParameters struct {
	ExtractTimestampParameters *ExtractTimestampParameters `protobuf:"bytes,7,opt,name=extract_timestamp_parameters,json=extractTimestampParameters,proto3,oneof"`
}

type RuleParameters_RemoveFieldsParameters struct {
	RemoveFieldsParameters *RemoveFieldsParameters `protobuf:"bytes,8,opt,name=remove_fields_parameters,json=removeFieldsParameters,proto3,oneof"`
}

type RuleParameters_JsonStringifyParameters struct {
	JsonStringifyParameters *JsonStringifyParameters `protobuf:"bytes,9,opt,name=json_stringify_parameters,json=jsonStringifyParameters,proto3,oneof"`
}

type RuleParameters_JsonParseParameters struct {
	JsonParseParameters *JsonParseParameters `protobuf:"bytes,10,opt,name=json_parse_parameters,json=jsonParseParameters,proto3,oneof"`
}

func (*RuleParameters_ExtractParameters) isRuleParameters_RuleParameters() {}

func (*RuleParameters_JsonExtractParameters) isRuleParameters_RuleParameters() {}

func (*RuleParameters_ReplaceParameters) isRuleParameters_RuleParameters() {}

func (*RuleParameters_ParseParameters) isRuleParameters_RuleParameters() {}

func (*RuleParameters_AllowParameters) isRuleParameters_RuleParameters() {}

func (*RuleParameters_BlockParameters) isRuleParameters_RuleParameters() {}

func (*RuleParameters_ExtractTimestampParameters) isRuleParameters_RuleParameters() {}

func (*RuleParameters_RemoveFieldsParameters) isRuleParameters_RuleParameters() {}

func (*RuleParameters_JsonStringifyParameters) isRuleParameters_RuleParameters() {}

func (*RuleParameters_JsonParseParameters) isRuleParameters_RuleParameters() {}

type ExtractParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *ExtractParameters) Reset() {
	*x = ExtractParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractParameters) ProtoMessage() {}

func (x *ExtractParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractParameters.ProtoReflect.Descriptor instead.
func (*ExtractParameters) Descriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{2}
}

func (x *ExtractParameters) GetRule() *wrapperspb.StringValue {
	if x != nil {
		return x.Rule
	}
	return nil
}

type JsonExtractParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationField JsonExtractParameters_DestinationField `protobuf:"varint,1,opt,name=destination_field,json=destinationField,proto3,enum=com.coralogix.rules.v1.JsonExtractParameters_DestinationField" json:"destination_field,omitempty"`
	Rule             *wrapperspb.StringValue                `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *JsonExtractParameters) Reset() {
	*x = JsonExtractParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonExtractParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonExtractParameters) ProtoMessage() {}

func (x *JsonExtractParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonExtractParameters.ProtoReflect.Descriptor instead.
func (*JsonExtractParameters) Descriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{3}
}

func (x *JsonExtractParameters) GetDestinationField() JsonExtractParameters_DestinationField {
	if x != nil {
		return x.DestinationField
	}
	return JsonExtractParameters_DESTINATION_FIELD_CATEGORY_OR_UNSPECIFIED
}

func (x *JsonExtractParameters) GetRule() *wrapperspb.StringValue {
	if x != nil {
		return x.Rule
	}
	return nil
}

type ReplaceParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationField *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=destination_field,json=destinationField,proto3" json:"destination_field,omitempty"`
	ReplaceNewVal    *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=replace_new_val,json=replaceNewVal,proto3" json:"replace_new_val,omitempty"`
	Rule             *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *ReplaceParameters) Reset() {
	*x = ReplaceParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceParameters) ProtoMessage() {}

func (x *ReplaceParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceParameters.ProtoReflect.Descriptor instead.
func (*ReplaceParameters) Descriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{4}
}

func (x *ReplaceParameters) GetDestinationField() *wrapperspb.StringValue {
	if x != nil {
		return x.DestinationField
	}
	return nil
}

func (x *ReplaceParameters) GetReplaceNewVal() *wrapperspb.StringValue {
	if x != nil {
		return x.ReplaceNewVal
	}
	return nil
}

func (x *ReplaceParameters) GetRule() *wrapperspb.StringValue {
	if x != nil {
		return x.Rule
	}
	return nil
}

type ParseParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationField *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=destination_field,json=destinationField,proto3" json:"destination_field,omitempty"`
	Rule             *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *ParseParameters) Reset() {
	*x = ParseParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseParameters) ProtoMessage() {}

func (x *ParseParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseParameters.ProtoReflect.Descriptor instead.
func (*ParseParameters) Descriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{5}
}

func (x *ParseParameters) GetDestinationField() *wrapperspb.StringValue {
	if x != nil {
		return x.DestinationField
	}
	return nil
}

func (x *ParseParameters) GetRule() *wrapperspb.StringValue {
	if x != nil {
		return x.Rule
	}
	return nil
}

type AllowParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeepBlockedLogs *wrapperspb.BoolValue   `protobuf:"bytes,1,opt,name=keep_blocked_logs,json=keepBlockedLogs,proto3" json:"keep_blocked_logs,omitempty"`
	Rule            *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *AllowParameters) Reset() {
	*x = AllowParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllowParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowParameters) ProtoMessage() {}

func (x *AllowParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowParameters.ProtoReflect.Descriptor instead.
func (*AllowParameters) Descriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{6}
}

func (x *AllowParameters) GetKeepBlockedLogs() *wrapperspb.BoolValue {
	if x != nil {
		return x.KeepBlockedLogs
	}
	return nil
}

func (x *AllowParameters) GetRule() *wrapperspb.StringValue {
	if x != nil {
		return x.Rule
	}
	return nil
}

type BlockParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeepBlockedLogs *wrapperspb.BoolValue   `protobuf:"bytes,1,opt,name=keep_blocked_logs,json=keepBlockedLogs,proto3" json:"keep_blocked_logs,omitempty"`
	Rule            *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *BlockParameters) Reset() {
	*x = BlockParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockParameters) ProtoMessage() {}

func (x *BlockParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockParameters.ProtoReflect.Descriptor instead.
func (*BlockParameters) Descriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{7}
}

func (x *BlockParameters) GetKeepBlockedLogs() *wrapperspb.BoolValue {
	if x != nil {
		return x.KeepBlockedLogs
	}
	return nil
}

func (x *BlockParameters) GetRule() *wrapperspb.StringValue {
	if x != nil {
		return x.Rule
	}
	return nil
}

type ExtractTimestampParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Standard ExtractTimestampParameters_FormatStandard `protobuf:"varint,1,opt,name=standard,proto3,enum=com.coralogix.rules.v1.ExtractTimestampParameters_FormatStandard" json:"standard,omitempty"`
	Format   *wrapperspb.StringValue                   `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *ExtractTimestampParameters) Reset() {
	*x = ExtractTimestampParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractTimestampParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractTimestampParameters) ProtoMessage() {}

func (x *ExtractTimestampParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractTimestampParameters.ProtoReflect.Descriptor instead.
func (*ExtractTimestampParameters) Descriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{8}
}

func (x *ExtractTimestampParameters) GetStandard() ExtractTimestampParameters_FormatStandard {
	if x != nil {
		return x.Standard
	}
	return ExtractTimestampParameters_FORMAT_STANDARD_STRFTIME_OR_UNSPECIFIED
}

func (x *ExtractTimestampParameters) GetFormat() *wrapperspb.StringValue {
	if x != nil {
		return x.Format
	}
	return nil
}

type RemoveFieldsParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *RemoveFieldsParameters) Reset() {
	*x = RemoveFieldsParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveFieldsParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFieldsParameters) ProtoMessage() {}

func (x *RemoveFieldsParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFieldsParameters.ProtoReflect.Descriptor instead.
func (*RemoveFieldsParameters) Descriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveFieldsParameters) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type JsonStringifyParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationField *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=destination_field,json=destinationField,proto3" json:"destination_field,omitempty"`
	DeleteSource     *wrapperspb.BoolValue   `protobuf:"bytes,2,opt,name=delete_source,json=deleteSource,proto3" json:"delete_source,omitempty"`
}

func (x *JsonStringifyParameters) Reset() {
	*x = JsonStringifyParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonStringifyParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonStringifyParameters) ProtoMessage() {}

func (x *JsonStringifyParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonStringifyParameters.ProtoReflect.Descriptor instead.
func (*JsonStringifyParameters) Descriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{10}
}

func (x *JsonStringifyParameters) GetDestinationField() *wrapperspb.StringValue {
	if x != nil {
		return x.DestinationField
	}
	return nil
}

func (x *JsonStringifyParameters) GetDeleteSource() *wrapperspb.BoolValue {
	if x != nil {
		return x.DeleteSource
	}
	return nil
}

type JsonParseParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationField *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=destination_field,json=destinationField,proto3" json:"destination_field,omitempty"`
	DeleteSource     *wrapperspb.BoolValue   `protobuf:"bytes,2,opt,name=delete_source,json=deleteSource,proto3" json:"delete_source,omitempty"`
	EscapedValue     *wrapperspb.BoolValue   `protobuf:"bytes,3,opt,name=escaped_value,json=escapedValue,proto3" json:"escaped_value,omitempty"`
	OverrideDest     *wrapperspb.BoolValue   `protobuf:"bytes,4,opt,name=override_dest,json=overrideDest,proto3" json:"override_dest,omitempty"`
}

func (x *JsonParseParameters) Reset() {
	*x = JsonParseParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonParseParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonParseParameters) ProtoMessage() {}

func (x *JsonParseParameters) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogix_rules_v1_rule_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonParseParameters.ProtoReflect.Descriptor instead.
func (*JsonParseParameters) Descriptor() ([]byte, []int) {
	return file_com_coralogix_rules_v1_rule_proto_rawDescGZIP(), []int{11}
}

func (x *JsonParseParameters) GetDestinationField() *wrapperspb.StringValue {
	if x != nil {
		return x.DestinationField
	}
	return nil
}

func (x *JsonParseParameters) GetDeleteSource() *wrapperspb.BoolValue {
	if x != nil {
		return x.DeleteSource
	}
	return nil
}

func (x *JsonParseParameters) GetEscapedValue() *wrapperspb.BoolValue {
	if x != nil {
		return x.EscapedValue
	}
	return nil
}

func (x *JsonParseParameters) GetOverrideDest() *wrapperspb.BoolValue {
	if x != nil {
		return x.OverrideDest
	}
	return nil
}

var File_com_coralogix_rules_v1_rule_proto protoreflect.FileDescriptor

var file_com_coralogix_rules_v1_rule_proto_rawDesc = []byte{
	0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x03, 0x0a, 0x04,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x52, 0x04, 0x72,
	0x75, 0x6c, 0x65, 0x22, 0xfc, 0x07, 0x0a, 0x0e, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x5a, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52,
	0x11, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x67, 0x0a, 0x17, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x73, 0x6f,
	0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x48, 0x00, 0x52, 0x15, 0x6a, 0x73, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x5a, 0x0a, 0x12, 0x72,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x54, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x54, 0x0a,
	0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x48, 0x00, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x54, 0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x76, 0x0a, 0x1c, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x1a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x6a, 0x0a, 0x18, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x16, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x6d, 0x0a,
	0x19, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x69, 0x66, 0x79, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x69, 0x66, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x48, 0x00, 0x52, 0x17, 0x6a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x69,
	0x66, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x61, 0x0a, 0x15,
	0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x72, 0x75, 0x6c, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x13, 0x6a, 0x73, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42,
	0x11, 0x0a, 0x0f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x5d, 0x0a, 0x11, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x52,
	0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x22, 0xfd, 0x02, 0x0a, 0x15, 0x4a, 0x73, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x6b, 0x0a, 0x11, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4a, 0x73, 0x6f, 0x6e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x10, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x2d, 0x0a, 0x29, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x4f, 0x52,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f,
	0x0a, 0x1b, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12,
	0x20, 0x0a, 0x1c, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x4e, 0x41, 0x4d, 0x45, 0x10,
	0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x49, 0x44, 0x10,
	0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x10,
	0x04, 0x22, 0xd6, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x49, 0x0a, 0x11, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x44, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x65,
	0x77, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x4e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x0f, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x49,
	0x0a, 0x11, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x72, 0x75, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0f,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x46, 0x0a, 0x11, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f,
	0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x6b, 0x65, 0x65, 0x70, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x46, 0x0a,
	0x11, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x6c, 0x6f,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x6b, 0x65, 0x65, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22, 0x9f, 0x03, 0x0a, 0x1a, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x5d, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x0e,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x2b,
	0x0a, 0x27, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52,
	0x44, 0x5f, 0x53, 0x54, 0x52, 0x46, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x4f, 0x52, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x4a,
	0x41, 0x56, 0x41, 0x53, 0x44, 0x46, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x47, 0x4f, 0x4c, 0x41,
	0x4e, 0x47, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x53, 0x54,
	0x53, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x4e, 0x44, 0x41, 0x52, 0x44, 0x5f, 0x4d, 0x49, 0x4c, 0x4c, 0x49, 0x54, 0x53, 0x10, 0x04,
	0x12, 0x1b, 0x0a, 0x17, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44,
	0x41, 0x52, 0x44, 0x5f, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x54, 0x53, 0x10, 0x05, 0x12, 0x1a, 0x0a,
	0x16, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x41, 0x52, 0x44,
	0x5f, 0x4e, 0x41, 0x4e, 0x4f, 0x54, 0x53, 0x10, 0x06, 0x22, 0x30, 0x0a, 0x16, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x17,
	0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x69, 0x66, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x49, 0x0a, 0x11, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0xa3, 0x02, 0x0a, 0x13, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x49, 0x0a, 0x11, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x65, 0x73, 0x63, 0x61, 0x70,
	0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x65, 0x73, 0x63, 0x61,
	0x70, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x6f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x6f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x44, 0x65, 0x73, 0x74, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogix_rules_v1_rule_proto_rawDescOnce sync.Once
	file_com_coralogix_rules_v1_rule_proto_rawDescData = file_com_coralogix_rules_v1_rule_proto_rawDesc
)

func file_com_coralogix_rules_v1_rule_proto_rawDescGZIP() []byte {
	file_com_coralogix_rules_v1_rule_proto_rawDescOnce.Do(func() {
		file_com_coralogix_rules_v1_rule_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogix_rules_v1_rule_proto_rawDescData)
	})
	return file_com_coralogix_rules_v1_rule_proto_rawDescData
}

var file_com_coralogix_rules_v1_rule_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_com_coralogix_rules_v1_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_com_coralogix_rules_v1_rule_proto_goTypes = []interface{}{
	(JsonExtractParameters_DestinationField)(0),    // 0: com.coralogix.rules.v1.JsonExtractParameters.DestinationField
	(ExtractTimestampParameters_FormatStandard)(0), // 1: com.coralogix.rules.v1.ExtractTimestampParameters.FormatStandard
	(*Rule)(nil),                       // 2: com.coralogix.rules.v1.Rule
	(*RuleParameters)(nil),             // 3: com.coralogix.rules.v1.RuleParameters
	(*ExtractParameters)(nil),          // 4: com.coralogix.rules.v1.ExtractParameters
	(*JsonExtractParameters)(nil),      // 5: com.coralogix.rules.v1.JsonExtractParameters
	(*ReplaceParameters)(nil),          // 6: com.coralogix.rules.v1.ReplaceParameters
	(*ParseParameters)(nil),            // 7: com.coralogix.rules.v1.ParseParameters
	(*AllowParameters)(nil),            // 8: com.coralogix.rules.v1.AllowParameters
	(*BlockParameters)(nil),            // 9: com.coralogix.rules.v1.BlockParameters
	(*ExtractTimestampParameters)(nil), // 10: com.coralogix.rules.v1.ExtractTimestampParameters
	(*RemoveFieldsParameters)(nil),     // 11: com.coralogix.rules.v1.RemoveFieldsParameters
	(*JsonStringifyParameters)(nil),    // 12: com.coralogix.rules.v1.JsonStringifyParameters
	(*JsonParseParameters)(nil),        // 13: com.coralogix.rules.v1.JsonParseParameters
	(*wrapperspb.StringValue)(nil),     // 14: google.protobuf.StringValue
	(*wrapperspb.BoolValue)(nil),       // 15: google.protobuf.BoolValue
	(*wrapperspb.UInt32Value)(nil),     // 16: google.protobuf.UInt32Value
}
var file_com_coralogix_rules_v1_rule_proto_depIdxs = []int32{
	14, // 0: com.coralogix.rules.v1.Rule.id:type_name -> google.protobuf.StringValue
	14, // 1: com.coralogix.rules.v1.Rule.name:type_name -> google.protobuf.StringValue
	14, // 2: com.coralogix.rules.v1.Rule.description:type_name -> google.protobuf.StringValue
	14, // 3: com.coralogix.rules.v1.Rule.source_field:type_name -> google.protobuf.StringValue
	3,  // 4: com.coralogix.rules.v1.Rule.parameters:type_name -> com.coralogix.rules.v1.RuleParameters
	15, // 5: com.coralogix.rules.v1.Rule.enabled:type_name -> google.protobuf.BoolValue
	16, // 6: com.coralogix.rules.v1.Rule.order:type_name -> google.protobuf.UInt32Value
	4,  // 7: com.coralogix.rules.v1.RuleParameters.extract_parameters:type_name -> com.coralogix.rules.v1.ExtractParameters
	5,  // 8: com.coralogix.rules.v1.RuleParameters.json_extract_parameters:type_name -> com.coralogix.rules.v1.JsonExtractParameters
	6,  // 9: com.coralogix.rules.v1.RuleParameters.replace_parameters:type_name -> com.coralogix.rules.v1.ReplaceParameters
	7,  // 10: com.coralogix.rules.v1.RuleParameters.parse_parameters:type_name -> com.coralogix.rules.v1.ParseParameters
	8,  // 11: com.coralogix.rules.v1.RuleParameters.allow_parameters:type_name -> com.coralogix.rules.v1.AllowParameters
	9,  // 12: com.coralogix.rules.v1.RuleParameters.block_parameters:type_name -> com.coralogix.rules.v1.BlockParameters
	10, // 13: com.coralogix.rules.v1.RuleParameters.extract_timestamp_parameters:type_name -> com.coralogix.rules.v1.ExtractTimestampParameters
	11, // 14: com.coralogix.rules.v1.RuleParameters.remove_fields_parameters:type_name -> com.coralogix.rules.v1.RemoveFieldsParameters
	12, // 15: com.coralogix.rules.v1.RuleParameters.json_stringify_parameters:type_name -> com.coralogix.rules.v1.JsonStringifyParameters
	13, // 16: com.coralogix.rules.v1.RuleParameters.json_parse_parameters:type_name -> com.coralogix.rules.v1.JsonParseParameters
	14, // 17: com.coralogix.rules.v1.ExtractParameters.rule:type_name -> google.protobuf.StringValue
	0,  // 18: com.coralogix.rules.v1.JsonExtractParameters.destination_field:type_name -> com.coralogix.rules.v1.JsonExtractParameters.DestinationField
	14, // 19: com.coralogix.rules.v1.JsonExtractParameters.rule:type_name -> google.protobuf.StringValue
	14, // 20: com.coralogix.rules.v1.ReplaceParameters.destination_field:type_name -> google.protobuf.StringValue
	14, // 21: com.coralogix.rules.v1.ReplaceParameters.replace_new_val:type_name -> google.protobuf.StringValue
	14, // 22: com.coralogix.rules.v1.ReplaceParameters.rule:type_name -> google.protobuf.StringValue
	14, // 23: com.coralogix.rules.v1.ParseParameters.destination_field:type_name -> google.protobuf.StringValue
	14, // 24: com.coralogix.rules.v1.ParseParameters.rule:type_name -> google.protobuf.StringValue
	15, // 25: com.coralogix.rules.v1.AllowParameters.keep_blocked_logs:type_name -> google.protobuf.BoolValue
	14, // 26: com.coralogix.rules.v1.AllowParameters.rule:type_name -> google.protobuf.StringValue
	15, // 27: com.coralogix.rules.v1.BlockParameters.keep_blocked_logs:type_name -> google.protobuf.BoolValue
	14, // 28: com.coralogix.rules.v1.BlockParameters.rule:type_name -> google.protobuf.StringValue
	1,  // 29: com.coralogix.rules.v1.ExtractTimestampParameters.standard:type_name -> com.coralogix.rules.v1.ExtractTimestampParameters.FormatStandard
	14, // 30: com.coralogix.rules.v1.ExtractTimestampParameters.format:type_name -> google.protobuf.StringValue
	14, // 31: com.coralogix.rules.v1.JsonStringifyParameters.destination_field:type_name -> google.protobuf.StringValue
	15, // 32: com.coralogix.rules.v1.JsonStringifyParameters.delete_source:type_name -> google.protobuf.BoolValue
	14, // 33: com.coralogix.rules.v1.JsonParseParameters.destination_field:type_name -> google.protobuf.StringValue
	15, // 34: com.coralogix.rules.v1.JsonParseParameters.delete_source:type_name -> google.protobuf.BoolValue
	15, // 35: com.coralogix.rules.v1.JsonParseParameters.escaped_value:type_name -> google.protobuf.BoolValue
	15, // 36: com.coralogix.rules.v1.JsonParseParameters.override_dest:type_name -> google.protobuf.BoolValue
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_com_coralogix_rules_v1_rule_proto_init() }

//gocyclo:ignore
func file_com_coralogix_rules_v1_rule_proto_init() {
	if File_com_coralogix_rules_v1_rule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_com_coralogix_rules_v1_rule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_rules_v1_rule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RuleParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_rules_v1_rule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_rules_v1_rule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonExtractParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_rules_v1_rule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_rules_v1_rule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_rules_v1_rule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllowParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_rules_v1_rule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_rules_v1_rule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractTimestampParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_rules_v1_rule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveFieldsParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_rules_v1_rule_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonStringifyParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogix_rules_v1_rule_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonParseParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_com_coralogix_rules_v1_rule_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*RuleParameters_ExtractParameters)(nil),
		(*RuleParameters_JsonExtractParameters)(nil),
		(*RuleParameters_ReplaceParameters)(nil),
		(*RuleParameters_ParseParameters)(nil),
		(*RuleParameters_AllowParameters)(nil),
		(*RuleParameters_BlockParameters)(nil),
		(*RuleParameters_ExtractTimestampParameters)(nil),
		(*RuleParameters_RemoveFieldsParameters)(nil),
		(*RuleParameters_JsonStringifyParameters)(nil),
		(*RuleParameters_JsonParseParameters)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogix_rules_v1_rule_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_com_coralogix_rules_v1_rule_proto_goTypes,
		DependencyIndexes: file_com_coralogix_rules_v1_rule_proto_depIdxs,
		EnumInfos:         file_com_coralogix_rules_v1_rule_proto_enumTypes,
		MessageInfos:      file_com_coralogix_rules_v1_rule_proto_msgTypes,
	}.Build()
	File_com_coralogix_rules_v1_rule_proto = out.File
	file_com_coralogix_rules_v1_rule_proto_rawDesc = nil
	file_com_coralogix_rules_v1_rule_proto_goTypes = nil
	file_com_coralogix_rules_v1_rule_proto_depIdxs = nil
}
