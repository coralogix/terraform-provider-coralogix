// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: proto/com/coralogix/metrics/metrics-configurator.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RetentionPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resolution    int32 `protobuf:"varint,1,opt,name=resolution,proto3" json:"resolution,omitempty"`
	RetentionDays int32 `protobuf:"varint,2,opt,name=retention_days,json=retentionDays,proto3" json:"retention_days,omitempty"`
}

func (x *RetentionPolicy) Reset() {
	*x = RetentionPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetentionPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetentionPolicy) ProtoMessage() {}

func (x *RetentionPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetentionPolicy.ProtoReflect.Descriptor instead.
func (*RetentionPolicy) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{0}
}

func (x *RetentionPolicy) GetResolution() int32 {
	if x != nil {
		return x.Resolution
	}
	return 0
}

func (x *RetentionPolicy) GetRetentionDays() int32 {
	if x != nil {
		return x.RetentionDays
	}
	return 0
}

type S3Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *S3Config) Reset() {
	*x = S3Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3Config) ProtoMessage() {}

func (x *S3Config) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3Config.ProtoReflect.Descriptor instead.
func (*S3Config) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{1}
}

func (x *S3Config) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *S3Config) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type IbmConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket   string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Region   string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Crn      string `protobuf:"bytes,4,opt,name=crn,proto3" json:"crn,omitempty"`
}

func (x *IbmConfig) Reset() {
	*x = IbmConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IbmConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IbmConfig) ProtoMessage() {}

func (x *IbmConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IbmConfig.ProtoReflect.Descriptor instead.
func (*IbmConfig) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{2}
}

func (x *IbmConfig) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *IbmConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *IbmConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *IbmConfig) GetCrn() string {
	if x != nil {
		return x.Crn
	}
	return ""
}

type IbmConfigV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Crn      string `protobuf:"bytes,4,opt,name=crn,proto3" json:"crn,omitempty"`
}

func (x *IbmConfigV2) Reset() {
	*x = IbmConfigV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IbmConfigV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IbmConfigV2) ProtoMessage() {}

func (x *IbmConfigV2) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IbmConfigV2.ProtoReflect.Descriptor instead.
func (*IbmConfigV2) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{3}
}

func (x *IbmConfigV2) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *IbmConfigV2) GetCrn() string {
	if x != nil {
		return x.Crn
	}
	return ""
}

type TenantConfigV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId        uint32                  `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	RetentionPolicy *RetentionPolicyRequest `protobuf:"bytes,4,opt,name=retention_policy,json=retentionPolicy,proto3" json:"retention_policy,omitempty"`
	// Types that are assignable to StorageConfig:
	//	*TenantConfigV2_Ibm
	//	*TenantConfigV2_S3
	StorageConfig isTenantConfigV2_StorageConfig `protobuf_oneof:"storage_config"`
	Prefix        string                         `protobuf:"bytes,7,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *TenantConfigV2) Reset() {
	*x = TenantConfigV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantConfigV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantConfigV2) ProtoMessage() {}

func (x *TenantConfigV2) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantConfigV2.ProtoReflect.Descriptor instead.
func (*TenantConfigV2) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{4}
}

func (x *TenantConfigV2) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *TenantConfigV2) GetRetentionPolicy() *RetentionPolicyRequest {
	if x != nil {
		return x.RetentionPolicy
	}
	return nil
}

func (m *TenantConfigV2) GetStorageConfig() isTenantConfigV2_StorageConfig {
	if m != nil {
		return m.StorageConfig
	}
	return nil
}

func (x *TenantConfigV2) GetIbm() *IbmConfigV2 {
	if x, ok := x.GetStorageConfig().(*TenantConfigV2_Ibm); ok {
		return x.Ibm
	}
	return nil
}

func (x *TenantConfigV2) GetS3() *S3Config {
	if x, ok := x.GetStorageConfig().(*TenantConfigV2_S3); ok {
		return x.S3
	}
	return nil
}

func (x *TenantConfigV2) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type isTenantConfigV2_StorageConfig interface {
	isTenantConfigV2_StorageConfig()
}

type TenantConfigV2_Ibm struct {
	Ibm *IbmConfigV2 `protobuf:"bytes,5,opt,name=ibm,proto3,oneof"`
}

type TenantConfigV2_S3 struct {
	S3 *S3Config `protobuf:"bytes,6,opt,name=s3,proto3,oneof"`
}

func (*TenantConfigV2_Ibm) isTenantConfigV2_StorageConfig() {}

func (*TenantConfigV2_S3) isTenantConfigV2_StorageConfig() {}

type ConfigureTenantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetentionPolicy *RetentionPolicyRequest `protobuf:"bytes,1,opt,name=retention_policy,json=retentionPolicy,proto3" json:"retention_policy,omitempty"`
	// Types that are assignable to StorageConfig:
	//	*ConfigureTenantRequest_Ibm
	//	*ConfigureTenantRequest_S3
	StorageConfig isConfigureTenantRequest_StorageConfig `protobuf_oneof:"storage_config"`
}

func (x *ConfigureTenantRequest) Reset() {
	*x = ConfigureTenantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureTenantRequest) ProtoMessage() {}

func (x *ConfigureTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureTenantRequest.ProtoReflect.Descriptor instead.
func (*ConfigureTenantRequest) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigureTenantRequest) GetRetentionPolicy() *RetentionPolicyRequest {
	if x != nil {
		return x.RetentionPolicy
	}
	return nil
}

func (m *ConfigureTenantRequest) GetStorageConfig() isConfigureTenantRequest_StorageConfig {
	if m != nil {
		return m.StorageConfig
	}
	return nil
}

func (x *ConfigureTenantRequest) GetIbm() *IbmConfigV2 {
	if x, ok := x.GetStorageConfig().(*ConfigureTenantRequest_Ibm); ok {
		return x.Ibm
	}
	return nil
}

func (x *ConfigureTenantRequest) GetS3() *S3Config {
	if x, ok := x.GetStorageConfig().(*ConfigureTenantRequest_S3); ok {
		return x.S3
	}
	return nil
}

type isConfigureTenantRequest_StorageConfig interface {
	isConfigureTenantRequest_StorageConfig()
}

type ConfigureTenantRequest_Ibm struct {
	Ibm *IbmConfigV2 `protobuf:"bytes,2,opt,name=ibm,proto3,oneof"`
}

type ConfigureTenantRequest_S3 struct {
	S3 *S3Config `protobuf:"bytes,3,opt,name=s3,proto3,oneof"`
}

func (*ConfigureTenantRequest_Ibm) isConfigureTenantRequest_StorageConfig() {}

func (*ConfigureTenantRequest_S3) isConfigureTenantRequest_StorageConfig() {}

type ValidateBucketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to StorageConfig:
	//	*ValidateBucketRequest_Ibm
	//	*ValidateBucketRequest_S3
	StorageConfig isValidateBucketRequest_StorageConfig `protobuf_oneof:"storage_config"`
}

func (x *ValidateBucketRequest) Reset() {
	*x = ValidateBucketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidateBucketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateBucketRequest) ProtoMessage() {}

func (x *ValidateBucketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateBucketRequest.ProtoReflect.Descriptor instead.
func (*ValidateBucketRequest) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{6}
}

func (m *ValidateBucketRequest) GetStorageConfig() isValidateBucketRequest_StorageConfig {
	if m != nil {
		return m.StorageConfig
	}
	return nil
}

func (x *ValidateBucketRequest) GetIbm() *IbmConfigV2 {
	if x, ok := x.GetStorageConfig().(*ValidateBucketRequest_Ibm); ok {
		return x.Ibm
	}
	return nil
}

func (x *ValidateBucketRequest) GetS3() *S3Config {
	if x, ok := x.GetStorageConfig().(*ValidateBucketRequest_S3); ok {
		return x.S3
	}
	return nil
}

type isValidateBucketRequest_StorageConfig interface {
	isValidateBucketRequest_StorageConfig()
}

type ValidateBucketRequest_Ibm struct {
	Ibm *IbmConfigV2 `protobuf:"bytes,1,opt,name=ibm,proto3,oneof"`
}

type ValidateBucketRequest_S3 struct {
	S3 *S3Config `protobuf:"bytes,2,opt,name=s3,proto3,oneof"`
}

func (*ValidateBucketRequest_Ibm) isValidateBucketRequest_StorageConfig() {}

func (*ValidateBucketRequest_S3) isValidateBucketRequest_StorageConfig() {}

type RetentionPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawResolution         uint32 `protobuf:"varint,1,opt,name=raw_resolution,json=rawResolution,proto3" json:"raw_resolution,omitempty"`
	FiveMinutesResolution uint32 `protobuf:"varint,2,opt,name=five_minutes_resolution,json=fiveMinutesResolution,proto3" json:"five_minutes_resolution,omitempty"`
	OneHourResolution     uint32 `protobuf:"varint,3,opt,name=one_hour_resolution,json=oneHourResolution,proto3" json:"one_hour_resolution,omitempty"`
}

func (x *RetentionPolicyRequest) Reset() {
	*x = RetentionPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetentionPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetentionPolicyRequest) ProtoMessage() {}

func (x *RetentionPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetentionPolicyRequest.ProtoReflect.Descriptor instead.
func (*RetentionPolicyRequest) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{7}
}

func (x *RetentionPolicyRequest) GetRawResolution() uint32 {
	if x != nil {
		return x.RawResolution
	}
	return 0
}

func (x *RetentionPolicyRequest) GetFiveMinutesResolution() uint32 {
	if x != nil {
		return x.FiveMinutesResolution
	}
	return 0
}

func (x *RetentionPolicyRequest) GetOneHourResolution() uint32 {
	if x != nil {
		return x.OneHourResolution
	}
	return 0
}

type TenantConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId uint32 `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Deprecated: Do not use.
	BucketName string `protobuf:"bytes,2,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	// Deprecated: Do not use.
	Region          string             `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	RetentionPolicy []*RetentionPolicy `protobuf:"bytes,4,rep,name=retention_policy,json=retentionPolicy,proto3" json:"retention_policy,omitempty"`
	// Types that are assignable to StorageConfig:
	//	*TenantConfig_Ibm
	//	*TenantConfig_S3
	StorageConfig isTenantConfig_StorageConfig `protobuf_oneof:"storage_config"`
	Prefix        string                       `protobuf:"bytes,7,opt,name=prefix,proto3" json:"prefix,omitempty"`
}

func (x *TenantConfig) Reset() {
	*x = TenantConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantConfig) ProtoMessage() {}

func (x *TenantConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantConfig.ProtoReflect.Descriptor instead.
func (*TenantConfig) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{8}
}

func (x *TenantConfig) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// Deprecated: Do not use.
func (x *TenantConfig) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

// Deprecated: Do not use.
func (x *TenantConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *TenantConfig) GetRetentionPolicy() []*RetentionPolicy {
	if x != nil {
		return x.RetentionPolicy
	}
	return nil
}

func (m *TenantConfig) GetStorageConfig() isTenantConfig_StorageConfig {
	if m != nil {
		return m.StorageConfig
	}
	return nil
}

func (x *TenantConfig) GetIbm() *IbmConfig {
	if x, ok := x.GetStorageConfig().(*TenantConfig_Ibm); ok {
		return x.Ibm
	}
	return nil
}

func (x *TenantConfig) GetS3() *S3Config {
	if x, ok := x.GetStorageConfig().(*TenantConfig_S3); ok {
		return x.S3
	}
	return nil
}

func (x *TenantConfig) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type isTenantConfig_StorageConfig interface {
	isTenantConfig_StorageConfig()
}

type TenantConfig_Ibm struct {
	Ibm *IbmConfig `protobuf:"bytes,5,opt,name=ibm,proto3,oneof"`
}

type TenantConfig_S3 struct {
	S3 *S3Config `protobuf:"bytes,6,opt,name=s3,proto3,oneof"`
}

func (*TenantConfig_Ibm) isTenantConfig_StorageConfig() {}

func (*TenantConfig_S3) isTenantConfig_StorageConfig() {}

type GetTenantConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId uint32 `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *GetTenantConfigRequest) Reset() {
	*x = GetTenantConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTenantConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantConfigRequest) ProtoMessage() {}

func (x *GetTenantConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantConfigRequest.ProtoReflect.Descriptor instead.
func (*GetTenantConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{9}
}

func (x *GetTenantConfigRequest) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

type GetTenantConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantConfig *TenantConfig `protobuf:"bytes,1,opt,name=tenant_config,json=tenantConfig,proto3" json:"tenant_config,omitempty"`
}

func (x *GetTenantConfigResponse) Reset() {
	*x = GetTenantConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTenantConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantConfigResponse) ProtoMessage() {}

func (x *GetTenantConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantConfigResponse.ProtoReflect.Descriptor instead.
func (*GetTenantConfigResponse) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{10}
}

func (x *GetTenantConfigResponse) GetTenantConfig() *TenantConfig {
	if x != nil {
		return x.TenantConfig
	}
	return nil
}

type GetTenantConfigResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantConfig *TenantConfigV2 `protobuf:"bytes,1,opt,name=tenant_config,json=tenantConfig,proto3" json:"tenant_config,omitempty"`
}

func (x *GetTenantConfigResponseV2) Reset() {
	*x = GetTenantConfigResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTenantConfigResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantConfigResponseV2) ProtoMessage() {}

func (x *GetTenantConfigResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantConfigResponseV2.ProtoReflect.Descriptor instead.
func (*GetTenantConfigResponseV2) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{11}
}

func (x *GetTenantConfigResponseV2) GetTenantConfig() *TenantConfigV2 {
	if x != nil {
		return x.TenantConfig
	}
	return nil
}

type ListTenantConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTenantConfigsRequest) Reset() {
	*x = ListTenantConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTenantConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTenantConfigsRequest) ProtoMessage() {}

func (x *ListTenantConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTenantConfigsRequest.ProtoReflect.Descriptor instead.
func (*ListTenantConfigsRequest) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{12}
}

type ListTenantConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantConfigs []*TenantConfig `protobuf:"bytes,1,rep,name=tenant_configs,json=tenantConfigs,proto3" json:"tenant_configs,omitempty"`
}

func (x *ListTenantConfigsResponse) Reset() {
	*x = ListTenantConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTenantConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTenantConfigsResponse) ProtoMessage() {}

func (x *ListTenantConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTenantConfigsResponse.ProtoReflect.Descriptor instead.
func (*ListTenantConfigsResponse) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{13}
}

func (x *ListTenantConfigsResponse) GetTenantConfigs() []*TenantConfig {
	if x != nil {
		return x.TenantConfigs
	}
	return nil
}

type HotStoreConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId    uint32 `protobuf:"varint,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	ClusterName string `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
}

func (x *HotStoreConfig) Reset() {
	*x = HotStoreConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotStoreConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotStoreConfig) ProtoMessage() {}

func (x *HotStoreConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotStoreConfig.ProtoReflect.Descriptor instead.
func (*HotStoreConfig) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{14}
}

func (x *HotStoreConfig) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *HotStoreConfig) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type ListHotStoreConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListHotStoreConfigsRequest) Reset() {
	*x = ListHotStoreConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHotStoreConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHotStoreConfigsRequest) ProtoMessage() {}

func (x *ListHotStoreConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHotStoreConfigsRequest.ProtoReflect.Descriptor instead.
func (*ListHotStoreConfigsRequest) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{15}
}

type ListHotStoreConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configs []*HotStoreConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
}

func (x *ListHotStoreConfigsResponse) Reset() {
	*x = ListHotStoreConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHotStoreConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHotStoreConfigsResponse) ProtoMessage() {}

func (x *ListHotStoreConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHotStoreConfigsResponse.ProtoReflect.Descriptor instead.
func (*ListHotStoreConfigsResponse) Descriptor() ([]byte, []int) {
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP(), []int{16}
}

func (x *ListHotStoreConfigsResponse) GetConfigs() []*HotStoreConfig {
	if x != nil {
		return x.Configs
	}
	return nil
}

var File_proto_com_coralogix_metrics_metrics_configurator_proto protoreflect.FileDescriptor

var file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDesc = []byte{
	0x0a, 0x36, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2a, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x58, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x22, 0x3a, 0x0a, 0x08, 0x53,
	0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x09, 0x49, 0x62, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x72, 0x6e, 0x22, 0x3b, 0x0a, 0x0b, 0x49, 0x62, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56,
	0x32, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x72, 0x6e, 0x22,
	0xdb, 0x02, 0x0a, 0x0e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x6d, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x72,
	0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x4b,
	0x0a, 0x03, 0x69, 0x62, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x62, 0x6d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x56, 0x32, 0x48, 0x00, 0x52, 0x03, 0x69, 0x62, 0x6d, 0x12, 0x46, 0x0a, 0x02, 0x73,
	0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52,
	0x02, 0x73, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42, 0x10, 0x0a, 0x0e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xae, 0x02,
	0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6d, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x4b, 0x0a, 0x03, 0x69, 0x62, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x49, 0x62, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x32, 0x48, 0x00, 0x52,
	0x03, 0x69, 0x62, 0x6d, 0x12, 0x46, 0x0a, 0x02, 0x73, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x33,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x02, 0x73, 0x33, 0x42, 0x10, 0x0a, 0x0e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xbe,
	0x01, 0x0a, 0x15, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x03, 0x69, 0x62, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x49, 0x62, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x32, 0x48, 0x00,
	0x52, 0x03, 0x69, 0x62, 0x6d, 0x12, 0x46, 0x0a, 0x02, 0x73, 0x33, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53,
	0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x02, 0x73, 0x33, 0x42, 0x10, 0x0a,
	0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0xa7, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x61,
	0x77, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x72, 0x61, 0x77, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x36, 0x0a, 0x17, 0x66, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x15, 0x66, 0x69, 0x76, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x6f, 0x6e, 0x65,
	0x5f, 0x68, 0x6f, 0x75, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6f, 0x6e, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x91, 0x03, 0x0a, 0x0c, 0x54, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x10, 0x72, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x0f, 0x72, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x49, 0x0a, 0x03, 0x69, 0x62, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x62, 0x6d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x03, 0x69, 0x62, 0x6d, 0x12, 0x46, 0x0a, 0x02, 0x73,
	0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x53, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52,
	0x02, 0x73, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42, 0x10, 0x0a, 0x0e, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x35, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5d, 0x0a, 0x0d, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0c, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x7c,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x5f, 0x0a, 0x0d, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x32, 0x52, 0x0c,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x1a, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7c, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x50, 0x0a, 0x0e, 0x48, 0x6f, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x73, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x48, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x32, 0xf6, 0x02, 0x0a, 0x20,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6f, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x54, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x12, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x6d, 0x0a, 0x0e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x72, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x45, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x56, 0x32, 0x22, 0x00, 0x32, 0x8c, 0x04, 0x0a, 0x1a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xa2, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x44, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa9, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x12, 0x46, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x6f, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescOnce sync.Once
	file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescData = file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDesc
)

func file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescGZIP() []byte {
	file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescOnce.Do(func() {
		file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescData)
	})
	return file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDescData
}

var file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_com_coralogix_metrics_metrics_configurator_proto_goTypes = []interface{}{
	(*RetentionPolicy)(nil),             // 0: com.coralogix.metrics.metrics_configurator.RetentionPolicy
	(*S3Config)(nil),                    // 1: com.coralogix.metrics.metrics_configurator.S3Config
	(*IbmConfig)(nil),                   // 2: com.coralogix.metrics.metrics_configurator.IbmConfig
	(*IbmConfigV2)(nil),                 // 3: com.coralogix.metrics.metrics_configurator.IbmConfigV2
	(*TenantConfigV2)(nil),              // 4: com.coralogix.metrics.metrics_configurator.TenantConfigV2
	(*ConfigureTenantRequest)(nil),      // 5: com.coralogix.metrics.metrics_configurator.ConfigureTenantRequest
	(*ValidateBucketRequest)(nil),       // 6: com.coralogix.metrics.metrics_configurator.ValidateBucketRequest
	(*RetentionPolicyRequest)(nil),      // 7: com.coralogix.metrics.metrics_configurator.RetentionPolicyRequest
	(*TenantConfig)(nil),                // 8: com.coralogix.metrics.metrics_configurator.TenantConfig
	(*GetTenantConfigRequest)(nil),      // 9: com.coralogix.metrics.metrics_configurator.GetTenantConfigRequest
	(*GetTenantConfigResponse)(nil),     // 10: com.coralogix.metrics.metrics_configurator.GetTenantConfigResponse
	(*GetTenantConfigResponseV2)(nil),   // 11: com.coralogix.metrics.metrics_configurator.GetTenantConfigResponseV2
	(*ListTenantConfigsRequest)(nil),    // 12: com.coralogix.metrics.metrics_configurator.ListTenantConfigsRequest
	(*ListTenantConfigsResponse)(nil),   // 13: com.coralogix.metrics.metrics_configurator.ListTenantConfigsResponse
	(*HotStoreConfig)(nil),              // 14: com.coralogix.metrics.metrics_configurator.HotStoreConfig
	(*ListHotStoreConfigsRequest)(nil),  // 15: com.coralogix.metrics.metrics_configurator.ListHotStoreConfigsRequest
	(*ListHotStoreConfigsResponse)(nil), // 16: com.coralogix.metrics.metrics_configurator.ListHotStoreConfigsResponse
	(*emptypb.Empty)(nil),               // 17: google.protobuf.Empty
}
var file_proto_com_coralogix_metrics_metrics_configurator_proto_depIdxs = []int32{
	7,  // 0: com.coralogix.metrics.metrics_configurator.TenantConfigV2.retention_policy:type_name -> com.coralogix.metrics.metrics_configurator.RetentionPolicyRequest
	3,  // 1: com.coralogix.metrics.metrics_configurator.TenantConfigV2.ibm:type_name -> com.coralogix.metrics.metrics_configurator.IbmConfigV2
	1,  // 2: com.coralogix.metrics.metrics_configurator.TenantConfigV2.s3:type_name -> com.coralogix.metrics.metrics_configurator.S3Config
	7,  // 3: com.coralogix.metrics.metrics_configurator.ConfigureTenantRequest.retention_policy:type_name -> com.coralogix.metrics.metrics_configurator.RetentionPolicyRequest
	3,  // 4: com.coralogix.metrics.metrics_configurator.ConfigureTenantRequest.ibm:type_name -> com.coralogix.metrics.metrics_configurator.IbmConfigV2
	1,  // 5: com.coralogix.metrics.metrics_configurator.ConfigureTenantRequest.s3:type_name -> com.coralogix.metrics.metrics_configurator.S3Config
	3,  // 6: com.coralogix.metrics.metrics_configurator.ValidateBucketRequest.ibm:type_name -> com.coralogix.metrics.metrics_configurator.IbmConfigV2
	1,  // 7: com.coralogix.metrics.metrics_configurator.ValidateBucketRequest.s3:type_name -> com.coralogix.metrics.metrics_configurator.S3Config
	0,  // 8: com.coralogix.metrics.metrics_configurator.TenantConfig.retention_policy:type_name -> com.coralogix.metrics.metrics_configurator.RetentionPolicy
	2,  // 9: com.coralogix.metrics.metrics_configurator.TenantConfig.ibm:type_name -> com.coralogix.metrics.metrics_configurator.IbmConfig
	1,  // 10: com.coralogix.metrics.metrics_configurator.TenantConfig.s3:type_name -> com.coralogix.metrics.metrics_configurator.S3Config
	8,  // 11: com.coralogix.metrics.metrics_configurator.GetTenantConfigResponse.tenant_config:type_name -> com.coralogix.metrics.metrics_configurator.TenantConfig
	4,  // 12: com.coralogix.metrics.metrics_configurator.GetTenantConfigResponseV2.tenant_config:type_name -> com.coralogix.metrics.metrics_configurator.TenantConfigV2
	8,  // 13: com.coralogix.metrics.metrics_configurator.ListTenantConfigsResponse.tenant_configs:type_name -> com.coralogix.metrics.metrics_configurator.TenantConfig
	14, // 14: com.coralogix.metrics.metrics_configurator.ListHotStoreConfigsResponse.configs:type_name -> com.coralogix.metrics.metrics_configurator.HotStoreConfig
	5,  // 15: com.coralogix.metrics.metrics_configurator.MetricsConfiguratorPublicService.ConfigureTenant:input_type -> com.coralogix.metrics.metrics_configurator.ConfigureTenantRequest
	6,  // 16: com.coralogix.metrics.metrics_configurator.MetricsConfiguratorPublicService.ValidateBucket:input_type -> com.coralogix.metrics.metrics_configurator.ValidateBucketRequest
	17, // 17: com.coralogix.metrics.metrics_configurator.MetricsConfiguratorPublicService.GetTenantConfig:input_type -> google.protobuf.Empty
	9,  // 18: com.coralogix.metrics.metrics_configurator.MetricsConfiguratorService.GetTenantConfig:input_type -> com.coralogix.metrics.metrics_configurator.GetTenantConfigRequest
	12, // 19: com.coralogix.metrics.metrics_configurator.MetricsConfiguratorService.ListTenantConfigs:input_type -> com.coralogix.metrics.metrics_configurator.ListTenantConfigsRequest
	15, // 20: com.coralogix.metrics.metrics_configurator.MetricsConfiguratorService.ListHostStoreConfigs:input_type -> com.coralogix.metrics.metrics_configurator.ListHotStoreConfigsRequest
	17, // 21: com.coralogix.metrics.metrics_configurator.MetricsConfiguratorPublicService.ConfigureTenant:output_type -> google.protobuf.Empty
	17, // 22: com.coralogix.metrics.metrics_configurator.MetricsConfiguratorPublicService.ValidateBucket:output_type -> google.protobuf.Empty
	11, // 23: com.coralogix.metrics.metrics_configurator.MetricsConfiguratorPublicService.GetTenantConfig:output_type -> com.coralogix.metrics.metrics_configurator.GetTenantConfigResponseV2
	10, // 24: com.coralogix.metrics.metrics_configurator.MetricsConfiguratorService.GetTenantConfig:output_type -> com.coralogix.metrics.metrics_configurator.GetTenantConfigResponse
	13, // 25: com.coralogix.metrics.metrics_configurator.MetricsConfiguratorService.ListTenantConfigs:output_type -> com.coralogix.metrics.metrics_configurator.ListTenantConfigsResponse
	16, // 26: com.coralogix.metrics.metrics_configurator.MetricsConfiguratorService.ListHostStoreConfigs:output_type -> com.coralogix.metrics.metrics_configurator.ListHotStoreConfigsResponse
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_com_coralogix_metrics_metrics_configurator_proto_init() }
func file_proto_com_coralogix_metrics_metrics_configurator_proto_init() {
	if File_proto_com_coralogix_metrics_metrics_configurator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetentionPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IbmConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IbmConfigV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantConfigV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureTenantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidateBucketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetentionPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TenantConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTenantConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTenantConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTenantConfigResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTenantConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTenantConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotStoreConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHotStoreConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHotStoreConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*TenantConfigV2_Ibm)(nil),
		(*TenantConfigV2_S3)(nil),
	}
	file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ConfigureTenantRequest_Ibm)(nil),
		(*ConfigureTenantRequest_S3)(nil),
	}
	file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ValidateBucketRequest_Ibm)(nil),
		(*ValidateBucketRequest_S3)(nil),
	}
	file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*TenantConfig_Ibm)(nil),
		(*TenantConfig_S3)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_com_coralogix_metrics_metrics_configurator_proto_goTypes,
		DependencyIndexes: file_proto_com_coralogix_metrics_metrics_configurator_proto_depIdxs,
		MessageInfos:      file_proto_com_coralogix_metrics_metrics_configurator_proto_msgTypes,
	}.Build()
	File_proto_com_coralogix_metrics_metrics_configurator_proto = out.File
	file_proto_com_coralogix_metrics_metrics_configurator_proto_rawDesc = nil
	file_proto_com_coralogix_metrics_metrics_configurator_proto_goTypes = nil
	file_proto_com_coralogix_metrics_metrics_configurator_proto_depIdxs = nil
}
