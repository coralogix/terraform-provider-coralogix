// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: com/coralogixapis/events2metrics/v2/events2metrics_service.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	l2m "terraform-provider-coralogix/coralogix/clientset/grpc/logs2metrics/v2"

	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateE2MRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E2M *E2MCreateParams `protobuf:"bytes,1,opt,name=e2m,proto3" json:"e2m,omitempty"`
}

func (x *CreateE2MRequest) Reset() {
	*x = CreateE2MRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateE2MRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateE2MRequest) ProtoMessage() {}

func (x *CreateE2MRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateE2MRequest.ProtoReflect.Descriptor instead.
func (*CreateE2MRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateE2MRequest) GetE2M() *E2MCreateParams {
	if x != nil {
		return x.E2M
	}
	return nil
}

type CreateE2MResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E2M *E2M `protobuf:"bytes,1,opt,name=e2m,proto3" json:"e2m,omitempty"`
}

func (x *CreateE2MResponse) Reset() {
	*x = CreateE2MResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateE2MResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateE2MResponse) ProtoMessage() {}

func (x *CreateE2MResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateE2MResponse.ProtoReflect.Descriptor instead.
func (*CreateE2MResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateE2MResponse) GetE2M() *E2M {
	if x != nil {
		return x.E2M
	}
	return nil
}

type ListE2MRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListE2MRequest) Reset() {
	*x = ListE2MRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListE2MRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListE2MRequest) ProtoMessage() {}

func (x *ListE2MRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListE2MRequest.ProtoReflect.Descriptor instead.
func (*ListE2MRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{2}
}

type ListE2MResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E2M []*E2M `protobuf:"bytes,1,rep,name=e2m,proto3" json:"e2m,omitempty"`
}

func (x *ListE2MResponse) Reset() {
	*x = ListE2MResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListE2MResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListE2MResponse) ProtoMessage() {}

func (x *ListE2MResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListE2MResponse.ProtoReflect.Descriptor instead.
func (*ListE2MResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListE2MResponse) GetE2M() []*E2M {
	if x != nil {
		return x.E2M
	}
	return nil
}

type ReplaceE2MRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E2M *E2M `protobuf:"bytes,1,opt,name=e2m,proto3" json:"e2m,omitempty"`
}

func (x *ReplaceE2MRequest) Reset() {
	*x = ReplaceE2MRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceE2MRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceE2MRequest) ProtoMessage() {}

func (x *ReplaceE2MRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceE2MRequest.ProtoReflect.Descriptor instead.
func (*ReplaceE2MRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{4}
}

func (x *ReplaceE2MRequest) GetE2M() *E2M {
	if x != nil {
		return x.E2M
	}
	return nil
}

type ReplaceE2MResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E2M *E2M `protobuf:"bytes,1,opt,name=e2m,proto3" json:"e2m,omitempty"`
}

func (x *ReplaceE2MResponse) Reset() {
	*x = ReplaceE2MResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceE2MResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceE2MResponse) ProtoMessage() {}

func (x *ReplaceE2MResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplaceE2MResponse.ProtoReflect.Descriptor instead.
func (*ReplaceE2MResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{5}
}

func (x *ReplaceE2MResponse) GetE2M() *E2M {
	if x != nil {
		return x.E2M
	}
	return nil
}

type GetE2MRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetE2MRequest) Reset() {
	*x = GetE2MRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetE2MRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetE2MRequest) ProtoMessage() {}

func (x *GetE2MRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetE2MRequest.ProtoReflect.Descriptor instead.
func (*GetE2MRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetE2MRequest) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetE2MResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E2M *E2M `protobuf:"bytes,1,opt,name=e2m,proto3" json:"e2m,omitempty"`
}

func (x *GetE2MResponse) Reset() {
	*x = GetE2MResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetE2MResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetE2MResponse) ProtoMessage() {}

func (x *GetE2MResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetE2MResponse.ProtoReflect.Descriptor instead.
func (*GetE2MResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetE2MResponse) GetE2M() *E2M {
	if x != nil {
		return x.E2M
	}
	return nil
}

type DeleteE2MRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteE2MRequest) Reset() {
	*x = DeleteE2MRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteE2MRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteE2MRequest) ProtoMessage() {}

func (x *DeleteE2MRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteE2MRequest.ProtoReflect.Descriptor instead.
func (*DeleteE2MRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteE2MRequest) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteE2MResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteE2MResponse) Reset() {
	*x = DeleteE2MResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteE2MResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteE2MResponse) ProtoMessage() {}

func (x *DeleteE2MResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteE2MResponse.ProtoReflect.Descriptor instead.
func (*DeleteE2MResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteE2MResponse) GetId() *wrapperspb.StringValue {
	if x != nil {
		return x.Id
	}
	return nil
}

type E2MExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*E2MExecutionRequest_Create
	//	*E2MExecutionRequest_Replace
	//	*E2MExecutionRequest_Delete
	Request isE2MExecutionRequest_Request `protobuf_oneof:"request"`
}

func (x *E2MExecutionRequest) Reset() {
	*x = E2MExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2MExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2MExecutionRequest) ProtoMessage() {}

func (x *E2MExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2MExecutionRequest.ProtoReflect.Descriptor instead.
func (*E2MExecutionRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{10}
}

func (m *E2MExecutionRequest) GetRequest() isE2MExecutionRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *E2MExecutionRequest) GetCreate() *CreateE2MRequest {
	if x, ok := x.GetRequest().(*E2MExecutionRequest_Create); ok {
		return x.Create
	}
	return nil
}

func (x *E2MExecutionRequest) GetReplace() *ReplaceE2MRequest {
	if x, ok := x.GetRequest().(*E2MExecutionRequest_Replace); ok {
		return x.Replace
	}
	return nil
}

func (x *E2MExecutionRequest) GetDelete() *DeleteE2MRequest {
	if x, ok := x.GetRequest().(*E2MExecutionRequest_Delete); ok {
		return x.Delete
	}
	return nil
}

type isE2MExecutionRequest_Request interface {
	isE2MExecutionRequest_Request()
}

type E2MExecutionRequest_Create struct {
	Create *CreateE2MRequest `protobuf:"bytes,1,opt,name=create,proto3,oneof"`
}

type E2MExecutionRequest_Replace struct {
	Replace *ReplaceE2MRequest `protobuf:"bytes,2,opt,name=replace,proto3,oneof"`
}

type E2MExecutionRequest_Delete struct {
	Delete *DeleteE2MRequest `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

func (*E2MExecutionRequest_Create) isE2MExecutionRequest_Request() {}

func (*E2MExecutionRequest_Replace) isE2MExecutionRequest_Request() {}

func (*E2MExecutionRequest_Delete) isE2MExecutionRequest_Request() {}

type AtomicBatchExecuteE2MRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*E2MExecutionRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *AtomicBatchExecuteE2MRequest) Reset() {
	*x = AtomicBatchExecuteE2MRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtomicBatchExecuteE2MRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtomicBatchExecuteE2MRequest) ProtoMessage() {}

func (x *AtomicBatchExecuteE2MRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtomicBatchExecuteE2MRequest.ProtoReflect.Descriptor instead.
func (*AtomicBatchExecuteE2MRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{11}
}

func (x *AtomicBatchExecuteE2MRequest) GetRequests() []*E2MExecutionRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

type E2MExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*E2MExecutionResponse_Created
	//	*E2MExecutionResponse_Replaced
	//	*E2MExecutionResponse_Deleted
	Response isE2MExecutionResponse_Response `protobuf_oneof:"response"`
}

func (x *E2MExecutionResponse) Reset() {
	*x = E2MExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2MExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2MExecutionResponse) ProtoMessage() {}

func (x *E2MExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2MExecutionResponse.ProtoReflect.Descriptor instead.
func (*E2MExecutionResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{12}
}

func (m *E2MExecutionResponse) GetResponse() isE2MExecutionResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *E2MExecutionResponse) GetCreated() *CreateE2MResponse {
	if x, ok := x.GetResponse().(*E2MExecutionResponse_Created); ok {
		return x.Created
	}
	return nil
}

func (x *E2MExecutionResponse) GetReplaced() *ReplaceE2MResponse {
	if x, ok := x.GetResponse().(*E2MExecutionResponse_Replaced); ok {
		return x.Replaced
	}
	return nil
}

func (x *E2MExecutionResponse) GetDeleted() *DeleteE2MResponse {
	if x, ok := x.GetResponse().(*E2MExecutionResponse_Deleted); ok {
		return x.Deleted
	}
	return nil
}

type isE2MExecutionResponse_Response interface {
	isE2MExecutionResponse_Response()
}

type E2MExecutionResponse_Created struct {
	Created *CreateE2MResponse `protobuf:"bytes,1,opt,name=created,proto3,oneof"`
}

type E2MExecutionResponse_Replaced struct {
	Replaced *ReplaceE2MResponse `protobuf:"bytes,2,opt,name=replaced,proto3,oneof"`
}

type E2MExecutionResponse_Deleted struct {
	Deleted *DeleteE2MResponse `protobuf:"bytes,3,opt,name=deleted,proto3,oneof"`
}

func (*E2MExecutionResponse_Created) isE2MExecutionResponse_Response() {}

func (*E2MExecutionResponse_Replaced) isE2MExecutionResponse_Response() {}

func (*E2MExecutionResponse_Deleted) isE2MExecutionResponse_Response() {}

type AtomicBatchExecuteE2MResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchingResponses []*E2MExecutionResponse `protobuf:"bytes,1,rep,name=matching_responses,json=matchingResponses,proto3" json:"matching_responses,omitempty"`
}

func (x *AtomicBatchExecuteE2MResponse) Reset() {
	*x = AtomicBatchExecuteE2MResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AtomicBatchExecuteE2MResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AtomicBatchExecuteE2MResponse) ProtoMessage() {}

func (x *AtomicBatchExecuteE2MResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AtomicBatchExecuteE2MResponse.ProtoReflect.Descriptor instead.
func (*AtomicBatchExecuteE2MResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{13}
}

func (x *AtomicBatchExecuteE2MResponse) GetMatchingResponses() []*E2MExecutionResponse {
	if x != nil {
		return x.MatchingResponses
	}
	return nil
}

type ListLabelsCardinalityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Query:
	//	*ListLabelsCardinalityRequest_SpansQuery
	//	*ListLabelsCardinalityRequest_LogsQuery
	Query        isListLabelsCardinalityRequest_Query `protobuf_oneof:"query"`
	MetricLabels []*MetricLabel                       `protobuf:"bytes,3,rep,name=metric_labels,json=metricLabels,proto3" json:"metric_labels,omitempty"`
}

func (x *ListLabelsCardinalityRequest) Reset() {
	*x = ListLabelsCardinalityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLabelsCardinalityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLabelsCardinalityRequest) ProtoMessage() {}

func (x *ListLabelsCardinalityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLabelsCardinalityRequest.ProtoReflect.Descriptor instead.
func (*ListLabelsCardinalityRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{14}
}

func (m *ListLabelsCardinalityRequest) GetQuery() isListLabelsCardinalityRequest_Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (x *ListLabelsCardinalityRequest) GetSpansQuery() *SpansQuery {
	if x, ok := x.GetQuery().(*ListLabelsCardinalityRequest_SpansQuery); ok {
		return x.SpansQuery
	}
	return nil
}

func (x *ListLabelsCardinalityRequest) GetLogsQuery() *l2m.LogsQuery {
	if x, ok := x.GetQuery().(*ListLabelsCardinalityRequest_LogsQuery); ok {
		return x.LogsQuery
	}
	return nil
}

func (x *ListLabelsCardinalityRequest) GetMetricLabels() []*MetricLabel {
	if x != nil {
		return x.MetricLabels
	}
	return nil
}

type isListLabelsCardinalityRequest_Query interface {
	isListLabelsCardinalityRequest_Query()
}

type ListLabelsCardinalityRequest_SpansQuery struct {
	SpansQuery *SpansQuery `protobuf:"bytes,1,opt,name=spans_query,json=spansQuery,proto3,oneof"`
}

type ListLabelsCardinalityRequest_LogsQuery struct {
	LogsQuery *l2m.LogsQuery `protobuf:"bytes,2,opt,name=logs_query,json=logsQuery,proto3,oneof"`
}

func (*ListLabelsCardinalityRequest_SpansQuery) isListLabelsCardinalityRequest_Query() {}

func (*ListLabelsCardinalityRequest_LogsQuery) isListLabelsCardinalityRequest_Query() {}

type LabelsPermutationsCardinalityDay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day          string `protobuf:"bytes,1,opt,name=day,proto3" json:"day,omitempty"`
	Permutations int32  `protobuf:"varint,2,opt,name=permutations,proto3" json:"permutations,omitempty"`
}

func (x *LabelsPermutationsCardinalityDay) Reset() {
	*x = LabelsPermutationsCardinalityDay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelsPermutationsCardinalityDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelsPermutationsCardinalityDay) ProtoMessage() {}

func (x *LabelsPermutationsCardinalityDay) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelsPermutationsCardinalityDay.ProtoReflect.Descriptor instead.
func (*LabelsPermutationsCardinalityDay) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{15}
}

func (x *LabelsPermutationsCardinalityDay) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *LabelsPermutationsCardinalityDay) GetPermutations() int32 {
	if x != nil {
		return x.Permutations
	}
	return 0
}

type ListLabelsCardinalityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permutations []*LabelsPermutationsCardinalityDay `protobuf:"bytes,1,rep,name=permutations,proto3" json:"permutations,omitempty"`
}

func (x *ListLabelsCardinalityResponse) Reset() {
	*x = ListLabelsCardinalityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLabelsCardinalityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLabelsCardinalityResponse) ProtoMessage() {}

func (x *ListLabelsCardinalityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLabelsCardinalityResponse.ProtoReflect.Descriptor instead.
func (*ListLabelsCardinalityResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP(), []int{16}
}

func (x *ListLabelsCardinalityResponse) GetPermutations() []*LabelsPermutationsCardinalityDay {
	if x != nil {
		return x.Permutations
	}
	return nil
}

var File_com_coralogixapis_events2metrics_v2_events2metrics_service_proto protoreflect.FileDescriptor

var file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDesc = []byte{
	0x0a, 0x40, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x1a, 0x43, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x32, 0x2f,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x32, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f,
	0x76, 0x32, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x32, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x03, 0x65,
	0x32, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x32, 0x4d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x03,
	0x65, 0x32, 0x6d, 0x22, 0x4f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x32, 0x4d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x03, 0x65, 0x32, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x4d, 0x52,
	0x03, 0x65, 0x32, 0x6d, 0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x32, 0x4d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x32,
	0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x03, 0x65, 0x32, 0x6d,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x4d,
	0x52, 0x03, 0x65, 0x32, 0x6d, 0x22, 0x4f, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x45, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x03, 0x65, 0x32,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32,
	0x4d, 0x52, 0x03, 0x65, 0x32, 0x6d, 0x22, 0x50, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x03,
	0x65, 0x32, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x32, 0x4d, 0x52, 0x03, 0x65, 0x32, 0x6d, 0x22, 0x3d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45,
	0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x32,
	0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x03, 0x65, 0x32, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x4d,
	0x52, 0x03, 0x65, 0x32, 0x6d, 0x22, 0x40, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x02, 0x69, 0x64, 0x22, 0x96, 0x02, 0x0a, 0x13, 0x45,
	0x32, 0x4d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4f, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07,
	0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x74, 0x0a, 0x1c, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x4d, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0xa1, 0x02, 0x0a, 0x14, 0x45, 0x32,
	0x4d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x32, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x55, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x64, 0x12, 0x52, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x32, 0x4d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x89, 0x01,
	0x0a, 0x1d, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x68, 0x0a, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x4d, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0xa0, 0x02, 0x0a, 0x1c, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x0b, 0x73, 0x70,
	0x61, 0x6e, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x70, 0x61, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x00, 0x52, 0x0a, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x4d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x00, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x55, 0x0a, 0x0d,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x58, 0x0a, 0x20,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x61, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x61, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x6d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x79, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x32, 0xe5, 0x0a, 0x0a, 0x14, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb3, 0x01, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x32, 0x4d, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69,
	0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x32,
	0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0xc2, 0xb8, 0x02, 0x10, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x6e, 0x65, 0x77, 0x20, 0x45, 0x32, 0x4d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x3a, 0x03, 0x65,
	0x32, 0x6d, 0x12, 0xa6, 0x01, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x32, 0x4d, 0x12, 0x33,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x32,
	0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0xc2, 0xb8, 0x02, 0x0e, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x45, 0x32, 0x4d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0xb3, 0x01, 0x0a, 0x0a,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x45, 0x32, 0x4d, 0x12, 0x36, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x45, 0x32, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0xc2, 0xb8, 0x02,
	0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x20, 0x45, 0x32, 0x4d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x1a, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x3a, 0x03, 0x65, 0x32,
	0x6d, 0x12, 0xa2, 0x01, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x45, 0x32, 0x4d, 0x12, 0x32, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0xc2, 0xb8, 0x02, 0x09, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x20, 0x45, 0x32, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x32, 0x2f, 0x65, 0x76, 0x65, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xaf, 0x01, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x32, 0x4d, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x32, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x33, 0xc2, 0xb8, 0x02, 0x0c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x20, 0x45, 0x32, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a, 0x1b, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xef, 0x01, 0x0a, 0x15, 0x41, 0x74, 0x6f,
	0x6d, 0x69, 0x63, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x45,
	0x32, 0x4d, 0x12, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x45, 0x32, 0x4d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61,
	0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x74, 0x6f, 0x6d,
	0x69, 0x63, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x45, 0x32,
	0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0xc2, 0xb8, 0x02, 0x1a, 0x0a,
	0x18, 0x41, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x20, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x20, 0x45, 0x32, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22,
	0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x3a, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0xee, 0x01, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x41, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x32,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0xc2, 0xb8, 0x02,
	0x19, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x20, 0x43,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b,
	0x22, 0x29, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x2d,
	0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x04, 0x5a, 0x02, 0x2e,
	0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescOnce sync.Once
	file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescData = file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDesc
)

func file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescData)
	})
	return file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDescData
}

var file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_goTypes = []interface{}{
	(*CreateE2MRequest)(nil),                 // 0: com.coralogixapis.events2metrics.v2.CreateE2MRequest
	(*CreateE2MResponse)(nil),                // 1: com.coralogixapis.events2metrics.v2.CreateE2MResponse
	(*ListE2MRequest)(nil),                   // 2: com.coralogixapis.events2metrics.v2.ListE2MRequest
	(*ListE2MResponse)(nil),                  // 3: com.coralogixapis.events2metrics.v2.ListE2MResponse
	(*ReplaceE2MRequest)(nil),                // 4: com.coralogixapis.events2metrics.v2.ReplaceE2MRequest
	(*ReplaceE2MResponse)(nil),               // 5: com.coralogixapis.events2metrics.v2.ReplaceE2MResponse
	(*GetE2MRequest)(nil),                    // 6: com.coralogixapis.events2metrics.v2.GetE2MRequest
	(*GetE2MResponse)(nil),                   // 7: com.coralogixapis.events2metrics.v2.GetE2MResponse
	(*DeleteE2MRequest)(nil),                 // 8: com.coralogixapis.events2metrics.v2.DeleteE2MRequest
	(*DeleteE2MResponse)(nil),                // 9: com.coralogixapis.events2metrics.v2.DeleteE2MResponse
	(*E2MExecutionRequest)(nil),              // 10: com.coralogixapis.events2metrics.v2.E2MExecutionRequest
	(*AtomicBatchExecuteE2MRequest)(nil),     // 11: com.coralogixapis.events2metrics.v2.AtomicBatchExecuteE2MRequest
	(*E2MExecutionResponse)(nil),             // 12: com.coralogixapis.events2metrics.v2.E2MExecutionResponse
	(*AtomicBatchExecuteE2MResponse)(nil),    // 13: com.coralogixapis.events2metrics.v2.AtomicBatchExecuteE2MResponse
	(*ListLabelsCardinalityRequest)(nil),     // 14: com.coralogixapis.events2metrics.v2.ListLabelsCardinalityRequest
	(*LabelsPermutationsCardinalityDay)(nil), // 15: com.coralogixapis.events2metrics.v2.LabelsPermutationsCardinalityDay
	(*ListLabelsCardinalityResponse)(nil),    // 16: com.coralogixapis.events2metrics.v2.ListLabelsCardinalityResponse
	(*E2MCreateParams)(nil),                  // 17: com.coralogixapis.events2metrics.v2.E2MCreateParams
	(*E2M)(nil),                              // 18: com.coralogixapis.events2metrics.v2.E2M
	(*wrapperspb.StringValue)(nil),           // 19: google.protobuf.StringValue
	(*SpansQuery)(nil),                       // 20: com.coralogixapis.spans2metrics.v2.SpansQuery
	(*l2m.LogsQuery)(nil),                        // 21: com.coralogixapis.logs2metrics.v2.LogsQuery
	(*MetricLabel)(nil),                      // 22: com.coralogixapis.events2metrics.v2.MetricLabel
}
var file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_depIdxs = []int32{
	17, // 0: com.coralogixapis.events2metrics.v2.CreateE2MRequest.e2m:type_name -> com.coralogixapis.events2metrics.v2.E2MCreateParams
	18, // 1: com.coralogixapis.events2metrics.v2.CreateE2MResponse.e2m:type_name -> com.coralogixapis.events2metrics.v2.E2M
	18, // 2: com.coralogixapis.events2metrics.v2.ListE2MResponse.e2m:type_name -> com.coralogixapis.events2metrics.v2.E2M
	18, // 3: com.coralogixapis.events2metrics.v2.ReplaceE2MRequest.e2m:type_name -> com.coralogixapis.events2metrics.v2.E2M
	18, // 4: com.coralogixapis.events2metrics.v2.ReplaceE2MResponse.e2m:type_name -> com.coralogixapis.events2metrics.v2.E2M
	19, // 5: com.coralogixapis.events2metrics.v2.GetE2MRequest.id:type_name -> google.protobuf.StringValue
	18, // 6: com.coralogixapis.events2metrics.v2.GetE2MResponse.e2m:type_name -> com.coralogixapis.events2metrics.v2.E2M
	19, // 7: com.coralogixapis.events2metrics.v2.DeleteE2MRequest.id:type_name -> google.protobuf.StringValue
	19, // 8: com.coralogixapis.events2metrics.v2.DeleteE2MResponse.id:type_name -> google.protobuf.StringValue
	0,  // 9: com.coralogixapis.events2metrics.v2.E2MExecutionRequest.create:type_name -> com.coralogixapis.events2metrics.v2.CreateE2MRequest
	4,  // 10: com.coralogixapis.events2metrics.v2.E2MExecutionRequest.replace:type_name -> com.coralogixapis.events2metrics.v2.ReplaceE2MRequest
	8,  // 11: com.coralogixapis.events2metrics.v2.E2MExecutionRequest.delete:type_name -> com.coralogixapis.events2metrics.v2.DeleteE2MRequest
	10, // 12: com.coralogixapis.events2metrics.v2.AtomicBatchExecuteE2MRequest.requests:type_name -> com.coralogixapis.events2metrics.v2.E2MExecutionRequest
	1,  // 13: com.coralogixapis.events2metrics.v2.E2MExecutionResponse.created:type_name -> com.coralogixapis.events2metrics.v2.CreateE2MResponse
	5,  // 14: com.coralogixapis.events2metrics.v2.E2MExecutionResponse.replaced:type_name -> com.coralogixapis.events2metrics.v2.ReplaceE2MResponse
	9,  // 15: com.coralogixapis.events2metrics.v2.E2MExecutionResponse.deleted:type_name -> com.coralogixapis.events2metrics.v2.DeleteE2MResponse
	12, // 16: com.coralogixapis.events2metrics.v2.AtomicBatchExecuteE2MResponse.matching_responses:type_name -> com.coralogixapis.events2metrics.v2.E2MExecutionResponse
	20, // 17: com.coralogixapis.events2metrics.v2.ListLabelsCardinalityRequest.spans_query:type_name -> com.coralogixapis.spans2metrics.v2.SpansQuery
	21, // 18: com.coralogixapis.events2metrics.v2.ListLabelsCardinalityRequest.logs_query:type_name -> com.coralogixapis.logs2metrics.v2.LogsQuery
	22, // 19: com.coralogixapis.events2metrics.v2.ListLabelsCardinalityRequest.metric_labels:type_name -> com.coralogixapis.events2metrics.v2.MetricLabel
	15, // 20: com.coralogixapis.events2metrics.v2.ListLabelsCardinalityResponse.permutations:type_name -> com.coralogixapis.events2metrics.v2.LabelsPermutationsCardinalityDay
	0,  // 21: com.coralogixapis.events2metrics.v2.Events2MetricService.CreateE2M:input_type -> com.coralogixapis.events2metrics.v2.CreateE2MRequest
	2,  // 22: com.coralogixapis.events2metrics.v2.Events2MetricService.ListE2M:input_type -> com.coralogixapis.events2metrics.v2.ListE2MRequest
	4,  // 23: com.coralogixapis.events2metrics.v2.Events2MetricService.ReplaceE2M:input_type -> com.coralogixapis.events2metrics.v2.ReplaceE2MRequest
	6,  // 24: com.coralogixapis.events2metrics.v2.Events2MetricService.GetE2M:input_type -> com.coralogixapis.events2metrics.v2.GetE2MRequest
	8,  // 25: com.coralogixapis.events2metrics.v2.Events2MetricService.DeleteE2M:input_type -> com.coralogixapis.events2metrics.v2.DeleteE2MRequest
	11, // 26: com.coralogixapis.events2metrics.v2.Events2MetricService.AtomicBatchExecuteE2M:input_type -> com.coralogixapis.events2metrics.v2.AtomicBatchExecuteE2MRequest
	14, // 27: com.coralogixapis.events2metrics.v2.Events2MetricService.ListLabelsCardinality:input_type -> com.coralogixapis.events2metrics.v2.ListLabelsCardinalityRequest
	1,  // 28: com.coralogixapis.events2metrics.v2.Events2MetricService.CreateE2M:output_type -> com.coralogixapis.events2metrics.v2.CreateE2MResponse
	3,  // 29: com.coralogixapis.events2metrics.v2.Events2MetricService.ListE2M:output_type -> com.coralogixapis.events2metrics.v2.ListE2MResponse
	5,  // 30: com.coralogixapis.events2metrics.v2.Events2MetricService.ReplaceE2M:output_type -> com.coralogixapis.events2metrics.v2.ReplaceE2MResponse
	7,  // 31: com.coralogixapis.events2metrics.v2.Events2MetricService.GetE2M:output_type -> com.coralogixapis.events2metrics.v2.GetE2MResponse
	9,  // 32: com.coralogixapis.events2metrics.v2.Events2MetricService.DeleteE2M:output_type -> com.coralogixapis.events2metrics.v2.DeleteE2MResponse
	13, // 33: com.coralogixapis.events2metrics.v2.Events2MetricService.AtomicBatchExecuteE2M:output_type -> com.coralogixapis.events2metrics.v2.AtomicBatchExecuteE2MResponse
	16, // 34: com.coralogixapis.events2metrics.v2.Events2MetricService.ListLabelsCardinality:output_type -> com.coralogixapis.events2metrics.v2.ListLabelsCardinalityResponse
	28, // [28:35] is the sub-list for method output_type
	21, // [21:28] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_init() }
func file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_init() {
	if File_com_coralogixapis_events2metrics_v2_events2metrics_service_proto != nil {
		return
	}
	file_com_coralogixapis_events2metrics_v2_events2metrics_definition_proto_init()
	l2m.File_com_coralogixapis_logs2metrics_v2_audit_log_proto_init()
	l2m.File_com_coralogixapis_logs2metrics_v2_logs_query_proto_init()
	file_com_coralogixapis_spans2metrics_v2_spans_query_proto_init()
	//file_google_api_annotations_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateE2MRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateE2MResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListE2MRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListE2MResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceE2MRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceE2MResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetE2MRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetE2MResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteE2MRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteE2MResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2MExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtomicBatchExecuteE2MRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2MExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AtomicBatchExecuteE2MResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLabelsCardinalityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelsPermutationsCardinalityDay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLabelsCardinalityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*E2MExecutionRequest_Create)(nil),
		(*E2MExecutionRequest_Replace)(nil),
		(*E2MExecutionRequest_Delete)(nil),
	}
	file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*E2MExecutionResponse_Created)(nil),
		(*E2MExecutionResponse_Replaced)(nil),
		(*E2MExecutionResponse_Deleted)(nil),
	}
	file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*ListLabelsCardinalityRequest_SpansQuery)(nil),
		(*ListLabelsCardinalityRequest_LogsQuery)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_depIdxs,
		MessageInfos:      file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_events2metrics_v2_events2metrics_service_proto = out.File
	file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_rawDesc = nil
	file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_goTypes = nil
	file_com_coralogixapis_events2metrics_v2_events2metrics_service_proto_depIdxs = nil
}
