// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: com/coralogixapis/logs2metrics/v2/logs2metrics_service.proto

package __

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateL2MRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	L2M *L2M `protobuf:"bytes,1,opt,name=l2m,proto3" json:"l2m,omitempty"`
}

func (x *CreateL2MRequest) Reset() {
	*x = CreateL2MRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateL2MRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateL2MRequest) ProtoMessage() {}

func (x *CreateL2MRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateL2MRequest.ProtoReflect.Descriptor instead.
func (*CreateL2MRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateL2MRequest) GetL2M() *L2M {
	if x != nil {
		return x.L2M
	}
	return nil
}

type ListL2MRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListL2MRequest) Reset() {
	*x = ListL2MRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListL2MRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListL2MRequest) ProtoMessage() {}

func (x *ListL2MRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListL2MRequest.ProtoReflect.Descriptor instead.
func (*ListL2MRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescGZIP(), []int{1}
}

type ListL2MResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	L2M []*L2M `protobuf:"bytes,1,rep,name=l2m,proto3" json:"l2m,omitempty"`
}

func (x *ListL2MResponse) Reset() {
	*x = ListL2MResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListL2MResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListL2MResponse) ProtoMessage() {}

func (x *ListL2MResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListL2MResponse.ProtoReflect.Descriptor instead.
func (*ListL2MResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescGZIP(), []int{2}
}

func (x *ListL2MResponse) GetL2M() []*L2M {
	if x != nil {
		return x.L2M
	}
	return nil
}

type UpdateL2MRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	L2M *L2M `protobuf:"bytes,1,opt,name=l2m,proto3" json:"l2m,omitempty"`
}

func (x *UpdateL2MRequest) Reset() {
	*x = UpdateL2MRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateL2MRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateL2MRequest) ProtoMessage() {}

func (x *UpdateL2MRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateL2MRequest.ProtoReflect.Descriptor instead.
func (*UpdateL2MRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateL2MRequest) GetL2M() *L2M {
	if x != nil {
		return x.L2M
	}
	return nil
}

type GetL2MRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetL2MRequest) Reset() {
	*x = GetL2MRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetL2MRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetL2MRequest) ProtoMessage() {}

func (x *GetL2MRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetL2MRequest.ProtoReflect.Descriptor instead.
func (*GetL2MRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetL2MRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteL2MRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteL2MRequest) Reset() {
	*x = DeleteL2MRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteL2MRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteL2MRequest) ProtoMessage() {}

func (x *DeleteL2MRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteL2MRequest.ProtoReflect.Descriptor instead.
func (*DeleteL2MRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteL2MRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type BatchExecuteL2MRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Create []*L2M   `protobuf:"bytes,1,rep,name=create,proto3" json:"create,omitempty"`
	Update []*L2M   `protobuf:"bytes,2,rep,name=update,proto3" json:"update,omitempty"`
	Delete []string `protobuf:"bytes,3,rep,name=delete,proto3" json:"delete,omitempty"`
}

func (x *BatchExecuteL2MRequest) Reset() {
	*x = BatchExecuteL2MRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchExecuteL2MRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchExecuteL2MRequest) ProtoMessage() {}

func (x *BatchExecuteL2MRequest) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchExecuteL2MRequest.ProtoReflect.Descriptor instead.
func (*BatchExecuteL2MRequest) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescGZIP(), []int{6}
}

func (x *BatchExecuteL2MRequest) GetCreate() []*L2M {
	if x != nil {
		return x.Create
	}
	return nil
}

func (x *BatchExecuteL2MRequest) GetUpdate() []*L2M {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *BatchExecuteL2MRequest) GetDelete() []string {
	if x != nil {
		return x.Delete
	}
	return nil
}

type BatchExecuteL2MResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created []*L2M   `protobuf:"bytes,1,rep,name=created,proto3" json:"created,omitempty"`
	Updated []*L2M   `protobuf:"bytes,2,rep,name=updated,proto3" json:"updated,omitempty"`
	Deleted []string `protobuf:"bytes,3,rep,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *BatchExecuteL2MResponse) Reset() {
	*x = BatchExecuteL2MResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchExecuteL2MResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchExecuteL2MResponse) ProtoMessage() {}

func (x *BatchExecuteL2MResponse) ProtoReflect() protoreflect.Message {
	mi := &file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchExecuteL2MResponse.ProtoReflect.Descriptor instead.
func (*BatchExecuteL2MResponse) Descriptor() ([]byte, []int) {
	return file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescGZIP(), []int{7}
}

func (x *BatchExecuteL2MResponse) GetCreated() []*L2M {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *BatchExecuteL2MResponse) GetUpdated() []*L2M {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *BatchExecuteL2MResponse) GetDeleted() []string {
	if x != nil {
		return x.Deleted
	}
	return nil
}

var File_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto protoreflect.FileDescriptor

var file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76,
	0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x31, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f,
	0x76, 0x32, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x32, 0x4d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x03, 0x6c, 0x32, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f,
	0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x32, 0x4d, 0x52, 0x03, 0x6c, 0x32, 0x6d,
	0x22, 0x10, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x4b, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x32, 0x4d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x6c, 0x32, 0x6d, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x32, 0x4d, 0x52, 0x03, 0x6c, 0x32, 0x6d, 0x22,
	0x4c, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x03, 0x6c, 0x32, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x32, 0x4d, 0x52, 0x03, 0x6c, 0x32, 0x6d, 0x22, 0x1f, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4c, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x4c, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a,
	0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x4c, 0x32, 0x4d, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76,
	0x32, 0x2e, 0x4c, 0x32, 0x4d, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4c, 0x32, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67,
	0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x32, 0x4d, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x32, 0x4d, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x32,
	0xe7, 0x07, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x73, 0x32, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9f, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x32, 0x4d, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f,
	0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x32,
	0x4d, 0x22, 0x35, 0xd2, 0xb8, 0x02, 0x10, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20,
	0x6e, 0x65, 0x77, 0x20, 0x4c, 0x32, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x14, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x3a, 0x03, 0x6c, 0x32, 0x6d, 0x12, 0xa0, 0x01, 0x0a, 0x07, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x32, 0x4d, 0x12, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x32, 0x4d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73,
	0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x32, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0xd2, 0xb8, 0x02,
	0x0e, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x4c, 0x32, 0x4d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x6c,
	0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x9b, 0x01, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x32, 0x4d, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f,
	0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x76, 0x32, 0x2e, 0x4c, 0x32, 0x4d, 0x22, 0x31, 0xd2, 0xb8, 0x02, 0x0c, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x20, 0x4c, 0x32, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x1a, 0x14,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x3a, 0x03, 0x6c, 0x32, 0x6d, 0x12, 0x92, 0x01, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x4c, 0x32, 0x4d, 0x12, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c,
	0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x32, 0x4d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72,
	0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x32, 0x4d, 0x22, 0x2e,
	0xd2, 0xb8, 0x02, 0x09, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x20, 0x4c, 0x32, 0x4d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x6f, 0x67,
	0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8b,
	0x01, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x32, 0x4d, 0x12, 0x33, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x31, 0xd2, 0xb8, 0x02, 0x0c, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x4c, 0x32, 0x4d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x2a, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x32,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xca, 0x01, 0x0a,
	0x0f, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4c, 0x32, 0x4d,
	0x12, 0x39, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x4c, 0x32, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x72, 0x61, 0x6c, 0x6f, 0x67, 0x69, 0x78, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x32, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x4c, 0x32, 0x4d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0xd2, 0xb8, 0x02, 0x13, 0x0a, 0x11, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x20, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x20, 0x4c, 0x32, 0x4d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,
	0x6c, 0x6f, 0x67, 0x73, 0x32, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x3a, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescOnce sync.Once
	file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescData = file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDesc
)

func file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescGZIP() []byte {
	file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescOnce.Do(func() {
		file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescData)
	})
	return file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDescData
}

var file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_goTypes = []interface{}{
	(*CreateL2MRequest)(nil),        // 0: com.coralogixapis.logs2metrics.v2.CreateL2MRequest
	(*ListL2MRequest)(nil),          // 1: com.coralogixapis.logs2metrics.v2.ListL2MRequest
	(*ListL2MResponse)(nil),         // 2: com.coralogixapis.logs2metrics.v2.ListL2MResponse
	(*UpdateL2MRequest)(nil),        // 3: com.coralogixapis.logs2metrics.v2.UpdateL2MRequest
	(*GetL2MRequest)(nil),           // 4: com.coralogixapis.logs2metrics.v2.GetL2MRequest
	(*DeleteL2MRequest)(nil),        // 5: com.coralogixapis.logs2metrics.v2.DeleteL2MRequest
	(*BatchExecuteL2MRequest)(nil),  // 6: com.coralogixapis.logs2metrics.v2.BatchExecuteL2MRequest
	(*BatchExecuteL2MResponse)(nil), // 7: com.coralogixapis.logs2metrics.v2.BatchExecuteL2MResponse
	(*L2M)(nil),                     // 8: com.coralogixapis.logs2metrics.v2.L2M
	(*emptypb.Empty)(nil),           // 9: google.protobuf.Empty
}
var file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_depIdxs = []int32{
	8,  // 0: com.coralogixapis.logs2metrics.v2.CreateL2MRequest.l2m:type_name -> com.coralogixapis.logs2metrics.v2.L2M
	8,  // 1: com.coralogixapis.logs2metrics.v2.ListL2MResponse.l2m:type_name -> com.coralogixapis.logs2metrics.v2.L2M
	8,  // 2: com.coralogixapis.logs2metrics.v2.UpdateL2MRequest.l2m:type_name -> com.coralogixapis.logs2metrics.v2.L2M
	8,  // 3: com.coralogixapis.logs2metrics.v2.BatchExecuteL2MRequest.create:type_name -> com.coralogixapis.logs2metrics.v2.L2M
	8,  // 4: com.coralogixapis.logs2metrics.v2.BatchExecuteL2MRequest.update:type_name -> com.coralogixapis.logs2metrics.v2.L2M
	8,  // 5: com.coralogixapis.logs2metrics.v2.BatchExecuteL2MResponse.created:type_name -> com.coralogixapis.logs2metrics.v2.L2M
	8,  // 6: com.coralogixapis.logs2metrics.v2.BatchExecuteL2MResponse.updated:type_name -> com.coralogixapis.logs2metrics.v2.L2M
	0,  // 7: com.coralogixapis.logs2metrics.v2.Logs2MetricService.CreateL2M:input_type -> com.coralogixapis.logs2metrics.v2.CreateL2MRequest
	1,  // 8: com.coralogixapis.logs2metrics.v2.Logs2MetricService.ListL2M:input_type -> com.coralogixapis.logs2metrics.v2.ListL2MRequest
	3,  // 9: com.coralogixapis.logs2metrics.v2.Logs2MetricService.UpdateL2M:input_type -> com.coralogixapis.logs2metrics.v2.UpdateL2MRequest
	4,  // 10: com.coralogixapis.logs2metrics.v2.Logs2MetricService.GetL2M:input_type -> com.coralogixapis.logs2metrics.v2.GetL2MRequest
	5,  // 11: com.coralogixapis.logs2metrics.v2.Logs2MetricService.DeleteL2M:input_type -> com.coralogixapis.logs2metrics.v2.DeleteL2MRequest
	6,  // 12: com.coralogixapis.logs2metrics.v2.Logs2MetricService.BatchExecuteL2M:input_type -> com.coralogixapis.logs2metrics.v2.BatchExecuteL2MRequest
	8,  // 13: com.coralogixapis.logs2metrics.v2.Logs2MetricService.CreateL2M:output_type -> com.coralogixapis.logs2metrics.v2.L2M
	2,  // 14: com.coralogixapis.logs2metrics.v2.Logs2MetricService.ListL2M:output_type -> com.coralogixapis.logs2metrics.v2.ListL2MResponse
	8,  // 15: com.coralogixapis.logs2metrics.v2.Logs2MetricService.UpdateL2M:output_type -> com.coralogixapis.logs2metrics.v2.L2M
	8,  // 16: com.coralogixapis.logs2metrics.v2.Logs2MetricService.GetL2M:output_type -> com.coralogixapis.logs2metrics.v2.L2M
	9,  // 17: com.coralogixapis.logs2metrics.v2.Logs2MetricService.DeleteL2M:output_type -> google.protobuf.Empty
	7,  // 18: com.coralogixapis.logs2metrics.v2.Logs2MetricService.BatchExecuteL2M:output_type -> com.coralogixapis.logs2metrics.v2.BatchExecuteL2MResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_init() }
func file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_init() {
	if File_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto != nil {
		return
	}
	file_com_coralogixapis_logs2metrics_v2_audit_log_proto_init()
	file_com_coralogixapis_logs2metrics_v2_logs2metrics_definition_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateL2MRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListL2MRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListL2MResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateL2MRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetL2MRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteL2MRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchExecuteL2MRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchExecuteL2MResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_goTypes,
		DependencyIndexes: file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_depIdxs,
		MessageInfos:      file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_msgTypes,
	}.Build()
	File_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto = out.File
	file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_rawDesc = nil
	file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_goTypes = nil
	file_com_coralogixapis_logs2metrics_v2_logs2metrics_service_proto_depIdxs = nil
}
